<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elizabeth Zagroba: Organizational Anarchist (Posts about testing)</title><link>https://elizabethzagroba.com/</link><description></description><atom:link href="https://elizabethzagroba.com/categories/testing.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>© 2022 &lt;a href="mailto:me@elizabethzagroba.com"&gt;Elizabeth Zagroba&lt;/a&gt; Mozilla Public License 2.0</copyright><lastBuildDate>Sun, 27 Feb 2022 18:55:43 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Not Every Detail Matters</title><link>https://elizabethzagroba.com/posts/2022/02_12_not_every_detail_matters/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;p&gt;I was looking at a user story for one of the teams I support. The story was about improving a very particular page. Our users do see it. But only for 5-10 minutes per week, if they've started their work early. We deploy this product weekly just before working hours. Deploying currently involves taking the whole product down. Customers can sign up for noticifications so they're reminded about this downtime window. &lt;/p&gt;
&lt;p&gt;The story was to improve the look of a page. People might see it and be confused if the stars aligned and:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;They started work early.&lt;/li&gt;
&lt;li&gt;They hadn't signed up for the notification.&lt;/li&gt;
&lt;li&gt;They hadn't seen the web app with just a logo on it before.&lt;/li&gt;
&lt;li&gt;They didn't try it again in a few minutes. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So I asked the ticket writer, "This doesn't impact customers much (5-10 minutes per week). Is fixing this worth the effort?"&lt;/p&gt;
&lt;p&gt;They wrote back "I believe in 'Every detail matters.' This particular detail should take very little effort to realize, so my answer on this question is Yes."&lt;/p&gt;
&lt;p&gt;It's possible they're right to pick this ticket up. It was a small enough effort that we might as well do it. If they're wrong, they're the one feeling the pain of explaining the ticket to the team, verifying the fix, deciding what to put in the release notes, etc. It's a safe-to-fail experiment for me as a quality coach. &lt;/p&gt;
&lt;p&gt;But I didn't have the same mindset. I don't believe that we should fix everything we find in our app that violates my expectations. I don't think it's possible to identify one correct set of expectations and priorities that our users will share. I don't think the things that we've already fixed will stay fixed. I don't think it's possible to cover every issue with an automated test. &lt;/p&gt;
&lt;p&gt;I think we need to let go. We need to decide what's important, and focus on that. The details of the downtime page -- the new design, and the time the team spent updating it, and the effort I'd spend having the conversation about it -- none of them mattered too much to me. We need to notice details, and also know when to turn our brains off to being bothered by them. We need to think about the risks of our tests could uncover; our goal isn't 100% test coverage. In short:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Not every detail matters.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We are limited by our attention, energy, health, meetings on our schedule, time left on this earth. Software is complex enough that it's very unlikely we'll be able to solve every issue we find. The more time we spend solving the unimportant ones, the less time we have left to look for the important ones. Or decide what is important. Or understand our users better to be able to more effectively evaluate the relative importance of such issues. &lt;/p&gt;
&lt;p&gt;Jerry Weinberg cheekily noted the impossibility of this endeavor in his book accurately titled &lt;a href="https://app.thestorygraph.com/books/8ba29269-1843-4ac1-be0c-226752b17937"&gt;&lt;em&gt;Perfect Software and Other Illusions About Testing&lt;/em&gt;&lt;/a&gt;. The Black Box Software Testing Course on Test Design emphasized the need for testers to balance risk vs. coverage. Its focus on &lt;a href="https://www.developsense.com/blog/2010/05/why-we-do-scenario-testing/"&gt;scenario testing&lt;/a&gt; insisted we tie our testing to a user's journey through the software that was:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;coherent&lt;/li&gt;
&lt;li&gt;credible&lt;/li&gt;
&lt;li&gt;motivating&lt;/li&gt;
&lt;li&gt;complex&lt;/li&gt;
&lt;li&gt;easy to evaluate&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I know this is the right approach. It will leave time to build new features and learn new skills. It's what will make it possible for us to feel fulfilled and motivated in our work. &lt;/p&gt;
&lt;p&gt;Now I just need to figure out how to scale this mindset. &lt;/p&gt;</description><category>coaching</category><category>mindset</category><category>risk-based-testing</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2022/02_12_not_every_detail_matters/</guid><pubDate>Fri, 11 Feb 2022 23:00:00 GMT</pubDate></item><item><title>EuroSTAR Testing Voices 2021</title><link>https://elizabethzagroba.com/posts/2022/01_29_eurostar_testing_voices/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;p&gt;In June of 2021, EuroSTAR ran a &lt;a href="https://huddle.eurostarsoftwaretesting.com/testing-voices-2021/"&gt;free online event&lt;/a&gt;. Having either Maaret Pyhäjärvi and Keith Klain on the program would have been enough to add this to my calendar; having both got me there.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Maaret Pyhäjärvi: Testing Becoming Harder to be Valuable&lt;/h3&gt;
&lt;p&gt;As usual, Maaret sees a bright and exciting future for her role that I have trouble reconciling with my reality. In Maaret's vision, crowdsourced testers find the obvious bugs. She's left to skim the cream off the milk,  performing the interesting, thoughtful work of understanding a complex system. She and her fellow testers are not repositories for or regurgitators of information. They share testing ideas before they become results or automated tests, with the goal of making others more productive. They tell compelling stories of the unseen: bugs that never happened, testing they never performed.&lt;/p&gt;
&lt;p&gt;Dream big Maaret.&lt;/p&gt;
&lt;h3&gt;Panel: Different Teams, Different Testers&lt;/h3&gt;
&lt;p&gt;Veerle Verhagen hosted this panel. If you're feeling a bit exhausted, I can recommend a small dose of Veerle directly to your brain. These were my top three takeaways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The best way to skill up automation is to do it on the job.&lt;/li&gt;
&lt;li&gt;You can give assignments back. &lt;/li&gt;
&lt;li&gt;Raise problems even if they're outside the current scope. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Keith Klain: Test as Transformation&lt;/h3&gt;
&lt;p&gt;Keith speaks from a position of connecting testing to the business strategy, which is exactly what he recommends we all do. Talk the talk of driving innovation and managing risk to get people's attention and connect what you're doing to the money. Writing a pile of cheap flaky checks (or even consistently passing ones!) may give you a false sense of security that hides the bigger risks. Strive to gather more information to soundly evaluate the risks in your products, enough to understand what would have happened if you hadn't caught it and how to prevent something similar in the future. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Thanks to the EuroSTAR team for pulling this together and (not charging for it). &lt;/p&gt;</description><category>conference</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2022/01_29_eurostar_testing_voices/</guid><pubDate>Fri, 28 Jan 2022 23:00:00 GMT</pubDate></item><item><title>This Diagram Asked More Questions Than It Answered</title><link>https://elizabethzagroba.com/posts/2022/01_16_this_diagram_asked_more_questions_than_it_answered/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;p&gt;I made a diagram that asked more questions than it answered.&lt;/p&gt;
&lt;p&gt;As Quality Lead for the seven engineering teams in my unit, I'm tasked with getting developers to think more holistically. I'm not an expert in any of the individual parts of the product teams are. I aim to have a bird's eye view on the whole, particularly when it comes to the testing we're doing. Each team is thinking about thorough coverage of their part; I'm looking at the through-line across the products.&lt;/p&gt;
&lt;p&gt;So after only a few weeks on the job, when a particular behavior got the software development managers asking me "Did anyone test this end-to-end?" all I could say for sure was "I haven't!" It did get me thinking and asking them though:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What do you mean when you say end-to-end?&lt;/li&gt;
&lt;li&gt;Did you mean an automated test, or someone trying it at least once manually? &lt;/li&gt;
&lt;li&gt;Is the one path I have in mind the same one you're picturing?&lt;/li&gt;
&lt;li&gt;Is it important to have some type of coverage over every possible path, or can we decide to focus on the risky ones?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I started by drawing what I had in mind. It looked like this. The colored boxes show which team owns the code. The outlined boxes show actions a user could take. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2022/step1.png" style="display:block; margin-left: auto; margin-right: auto;" title="A humble beginning"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;A humble beginning&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I went to it show people all around the department (developers, testers, product, UX, analytics, managers) so they could tell me where I was wrong or needed more detail. (&lt;a href="https://elizabethzagroba.com/posts/2017/2017-08-06_doubt-builds-trust/"&gt;More on how that builds credibility in this post&lt;/a&gt;). &lt;/p&gt;
&lt;p&gt;Each person I showed it to added more boxes, or split existing boxes into more specific actions. Some even added more teams. I approached the teams humbly, acknowledging that though I was being asked about end-to-end testing, I didn't have a good view on what that meant right now. I acknowledged that they were the experts in the their own domains. I'd reviewed roadmaps and documentation to do what I could before I spoke to them so they only had to offer corrections instead of whole explanations. And I thanked them for correcting my ignorance and blind spots as we updated the diagram together. &lt;/p&gt;
&lt;p&gt;To our analytics expert, I said "I get asked a lot about the end-to-end flow, but I'm not sure what that means exactly. Do you have the same problem?" A wave of common struggle and understanding washed over them. &lt;/p&gt;
&lt;p&gt;By the time 15 people had given their perspective, the diagram had exploded into this monstrosity. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2022/step2.png" style="display:block; margin-left: auto; margin-right: auto;" title="A completely overwhelming mess"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;A completely overwhelming mess&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This diagram was hard to read. It wasn't clear (to anyone but me) where the entry and exit points where. The key was hard to reference and had too much explanation. At a glance, the main takeaway was "This is complicated." This did live up to one of my goals: get people to see that "test everything end-to-end" is not a straightforward, single path. We wouldn't test every path or promise full coverage from the start (or ever, but that's &lt;a href="https://elizabethzagroba.com/posts/2020/2020-05-24_if_a_test_falls_in_a_forest/"&gt;another conversation&lt;/a&gt;). But we could say: "There's a lot to cover here. Let's choose the most important path to start."&lt;/p&gt;
&lt;p&gt;In showing the diagram to our sales and UX experts, and again acknowledging that this kind of diagramming was more their expertise than mine, I got nudged in the direction of business process modelling notation. I kept my teams and user actions in a way that notation didn't imagine, but putting everything in rows and columns gave my diagram an air of professionalism it didn't have before. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2022/step3.png" style="display:block; margin-left: auto; margin-right: auto;" title="Something bordering on approachable"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Something bordering on approachable&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;A different UX expert said they'd been too overwhelemed to try to process my overwhelming mess of a diagram, but they'd been able to read and learn from this attempt. &lt;/p&gt;
&lt;p&gt;Our software development managers and product experts were the ones asking about the state of end-to-end testing initially. Showing them the diagram got them thinking on the exactly the paths I wanted to trigger: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Can we have one of these for a different product we're building?&lt;/li&gt;
&lt;li&gt;What would this diagram look like if we only followed one user persona's journey?&lt;/li&gt;
&lt;li&gt;What else might be included in end-to-end if we think outside the scope of the seven engineering teams in our unit?&lt;/li&gt;
&lt;li&gt;How do people buy the product? How are they onboarded?&lt;/li&gt;
&lt;li&gt;How do people learning how to use the product discover these steps you've outlined? How do they know which direction they want to go?&lt;/li&gt;
&lt;li&gt;How do people make decisions at these decision points? How can we gain more insight into how they're doing that?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I think I probably could have helped perform some end-to-end testing with a collection of testers from the three teams I initially identifed in my first diagram, gone back to the managers and proclaimed "yes, we're end-to-end testing." But my job isn't to provide simple answers. It's to get people thinking about the whole, and asking the important questions for themselves. The journey of this diagram did exactly that. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Do you find yourself answering questions that you see as misguided? How can you guide people to ask better questions? &lt;/p&gt;</description><category>critical-thinking</category><category>dependencies</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2022/01_16_this_diagram_asked_more_questions_than_it_answered/</guid><pubDate>Sat, 15 Jan 2022 23:00:00 GMT</pubDate></item><item><title>Agile Testing Days 2021</title><link>https://elizabethzagroba.com/posts/2021/agile_testing_days_2021/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/unicorn-colors.jpeg"&gt;&lt;/figure&gt; &lt;p&gt;Amazingly, a week physically away from work and present with other human software tester beings was refreshing. And I didn't contract COVID — shoutout to vaccines! Note to self: bring honey, because your voice will be tired from talking through an N95 mask in a loud room. &lt;/p&gt;
&lt;p&gt;Thank you so much &lt;a href="https://agiletestingdays.com/"&gt;Agile Testing Days&lt;/a&gt; for the honor and privilege of serving on your program committee this year, and the straight-up spoiling that comes with attending a conference and not speaking. I've said for years that I enjoy the learning more than the being-in-the-spotlight. This year's edition allowed me to do just that. &lt;/p&gt;
&lt;h4&gt;1. Dagmar Monett - Coming to terms with intelligence in machines&lt;/h4&gt;
&lt;p&gt;Nobody can agree on what intelligence is; it's context-dependent and culture-bound. Human-level AI is not inevitable!&lt;/p&gt;
&lt;h4&gt;2. Klaartje van Zwoll - How therapy made me a better teamplayer&lt;/h4&gt;
&lt;p&gt;All needs are valid! By making your needs specific, it's easier for others to meet them. Journaling can help close the gap between when you experience a thing and when you analyze it. &lt;/p&gt;
&lt;p&gt;Boundaries are high-quality information that people need to love you best. If someone crosses a boundary: specify the behavior, tell them the story of how it made you feel, and describe both the behavior you'd prefer and how that would improve things. &lt;/p&gt;
&lt;p&gt;After you say no, sit in the discomfort of the silence instead of offering excuses. Klaartje also did a great explanation of ask culture vs. guess culture which I've filed as American/Dutch vs. British/Belgian in my head. &lt;/p&gt;
&lt;h4&gt;3. Alex Schladebeck - Unit Testing and TDD from the tester perspective&lt;/h4&gt;
&lt;p&gt;Lots of decisions get made when we're writing code that we never talk about. Writing unit tests for legacy code is hard! Being curious (instead of incredulous) gets you (and your pair) to learn more and have better conversations. &lt;/p&gt;
&lt;h4&gt;4. Maryam Umar - The Power of Coaching for Leading Test Teams&lt;/h4&gt;
&lt;p&gt;Questions Maryam asked the audience that are worth a bit of reflection: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What are my career goals?&lt;/li&gt;
&lt;li&gt;What do I want to change personally? &lt;/li&gt;
&lt;li&gt;What do I value? What do I enjoy?&lt;/li&gt;
&lt;li&gt;What outcomes are within my control?&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;5. Gitte Klitgaard - The choice is yours&lt;/h4&gt;
&lt;p&gt;Choices still happen even if they're not active choices. Options expire. When you make a commitment at the last responsible moment, remember the &lt;em&gt;responsible&lt;/em&gt; part. There's space between the stimulus and the response where you can choose how you react. Be the captain of your own ship! We have so much more influence than we think. We can't have everything at once.&lt;/p&gt;
&lt;h4&gt;6. Raj Subrameyer - It is time for Toxic Leaders to come out of their closet&lt;/h4&gt;
&lt;p&gt;Masculinity is toxic. Moving on. &lt;/p&gt;
&lt;h4&gt;7. Jutta Eckstein - Agile Comes with a Responsibility for Sustainability.&lt;/h4&gt;
&lt;p&gt;Software consumes energy: take responsibility. Change your definition of done. Shift the question we ask in and around the product. Testers are the right people to start doing that!&lt;/p&gt;
&lt;h4&gt;8. Zeb Ford-Reitz - What's a Quality Dojo?&lt;/h4&gt;
&lt;p&gt;Zeb's quality dojo: low-risk, low-commitment, high-safety, and long-running. The learning is the product. (The product is the friends you make along the way?) If something is unclear, you need to ask. If you're hoping for a particular outcome, it's not so much an experiment as a bet. &lt;/p&gt;
&lt;h4&gt;9. João Proença - Limitless within our boundaries&lt;/h4&gt;
&lt;p&gt;Having a lot of choices is not necessarily better than only having a few choices. Making decisions all the time will lead to decision fatigue. Embrace the constraints that life gives you. Charters and time-boxes are constraints for exploratory testing. Set up the right constraints to be successful: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What is the goal?&lt;/li&gt;
&lt;li&gt;What are the risks you're mitigating?&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;10. Lena Wilberg - Delivering fast &amp;amp; slow&lt;/h4&gt;
&lt;p&gt;Be aware of what is the worst that can happen. Know &lt;a href="https://nordictestingdays.eu/files/files/fiona_charles-10_commandments_for_ethical_testers_keynote_ntd2017.pdf"&gt;Fiona Charles's 10 Commandments for Ethical Software Testers&lt;/a&gt;. Know your personal and career risk tolerance. &lt;/p&gt;
&lt;h4&gt;11. Bruce Hughes - How to be an Ally to Non-binary Folk in Tech&lt;/h4&gt;
&lt;p&gt;Never again should you have to explain or justify your existence. Listening is a beautiful skill. Labels are for communicating with other people. You don't owe anyone your time!&lt;/p&gt;
&lt;h4&gt;12. Lisi Hocke - Growing an Experiment-driven Quality Culture&lt;/h4&gt;
&lt;p&gt;Include a hypotehsis in your experiments. Identify exit criteria, whether or not you succeed. Are the teams ready, eager, and committed? What is the goal? Tackle the unknown, automate the known. Build on people's curiosity. Metrics work locally, temporarily, in context, at the grassroots level. What information do we need for each context? Raise awareness about options. &lt;/p&gt;
&lt;h4&gt;13. Dr. Karen Holland - Food for Thought&lt;/h4&gt;
&lt;p&gt;Mental healthy people can cope with the normal stresses of life. Healthy diets allow us to cope better. Deficiences cannot be fixed by food alone. &lt;/p&gt;
&lt;h4&gt;14. Vera Baum - The Tester's Learning Toolkit&lt;/h4&gt;
&lt;p&gt;Experts produce extraordinary results over a long period of time, but only come about after deliberate practice for four hours a day for ten years. Experts should analyze intuitive reactions. Becoming an expert is not everyone's goal! Only generic knowledge is transferrable. Training wheels are holding you back — you can learn from your failures. Reflection is key. &lt;/p&gt;
&lt;h4&gt;15. Vernon Richards - What does the 'Coach' in 'Quality Coach' mean?&lt;/h4&gt;
&lt;p&gt;Reward structures can promote anti-patterns. Be comfortable with silence. Stay in the present. Notice how they're saying something, and how they're feeling about what they're saying. Decide when to &lt;a href="https://elizabethzagroba.com/posts/2021/give_them_the_fish_then_teach_them_to_fish/"&gt;give them the answer&lt;/a&gt;. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I have the urge to name-drop all my friends here, but also, who cares? This isn't a popularity contest. Just look at &lt;a href="https://twitter.com/search?q=%23agiletd"&gt;Twitter&lt;/a&gt; to see who was there.  I'm grateful to everyone who I was able to give an suspicious eyebrow across the table to, everyone who shared commentary during sessions, everyone whose conversations caused me to skip a session, everyone who patiently waited for me to poorly construct and pronounce Dutch sentences at them, everyone who thought it was fine for me to have a mask on, and most especially, whoever left a piano unlocked. Thank you, and please leave the grand piano unlocked next year. &lt;/p&gt;
&lt;p&gt;I also have the urge to apologize for all the exclamation points in these notes, but I regret to inform you that (1) they do reflect my actual enthusiasm over hearing these message delivered directly from someone's mouth into my ears, and (2) I look forward to the day when our writing can reflect how we'd like to communicate instead of how the patriarchy expects us to. &lt;/p&gt;</description><category>agile-testing-days</category><category>conference</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/agile_testing_days_2021/</guid><pubDate>Tue, 28 Dec 2021 10:08:16 GMT</pubDate></item><item><title>TestBash Manchester 2019, The Last One</title><link>https://elizabethzagroba.com/posts/2021/test_bash_manchester_2019/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/growthvsfixed.jpeg"&gt;&lt;/figure&gt; &lt;p&gt;I didn't know in September of 2019 that TestBash Manchester was the last TestBash I'd be attending for a while. I've revisited my notes from the workshop Joep Schuurkes and I ran about test reporting several times since then: for a video series, an &lt;a href="https://www.ministryoftesting.com/dojo/series/testing-ask-me-anything"&gt;Ask Me Anything&lt;/a&gt;, a &lt;a href="https://club.ministryoftesting.com/t/ask-me-anything-test-reporting/46827"&gt;forum thread&lt;/a&gt;, a &lt;a href="https://www.ministryoftesting.com/events/essentials-an-introduction-to-reporting-your-testing"&gt;99-minute workshop&lt;/a&gt;, and a &lt;a href="https://elizabethzagroba.com/posts/2021/map_out_your_stakeholders/"&gt;blog post&lt;/a&gt;. I'm just revisiting my notes now from the talks I was able to attend in the couple days after our workshop.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;My notes from Pierre Vincent's talk on observability read like a wishlist of features I'd already been asking for in the app I was testing: unit testing, centralized logging, trace ids for integration debugging, etc. The app was also in a private beta at the time, so data collected from production would be filled with more anomalies than patterns. I'm still discovering how much more influence I have in my new role as Quality Lead to present the impact and influence the improvement of testability features.&lt;/p&gt;
&lt;p&gt;Dan Smart and Yong He spoke about failure. The quote "Hey failors, how's the failing?" captures the essence of their talk: expect failure, and celebrate it, together. I get psyched anytime distinguishes between a fixed and a growth mindset as they did, which I still find best described in &lt;a href="https://www.themarginalian.org/2014/01/29/carol-dweck-mindset/"&gt;this Marginalian (formerly Brain Pickings) piece&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;I see in my notes from Conor Fitzgerald's talk on Kanban that kan = visual and ban = card. In the two years I spent running a Kanban team in the meantime, I can't remember how many times a week (a day? a minute of standup?) I asked "should we visualize that on the board?" Two of my big legacies on my former team were reinforced by Conor's talk: 1) eliminating of context-switching, and 2) not waiting until the retro to make changes.&lt;/p&gt;
&lt;p&gt;"What does it mean to be responsible for quality?" asks Past Elizabeth to Present Elizabeth from the notes on Gary Fleming's continuous testing talk. It doesn't have a straightforward answer, and exploring this is part of what my job gets to be now. Some of his examples (separating deployment from release, example mapping) are what I get to inspire my whole department to consider as part of their strategy. &lt;/p&gt;
&lt;p&gt;Saskia Coplans's talk on security testing really stuck with me. Her ability to make the unnamable company she consulted for a joke every time she mentioned it was a level of comedy I can only dream of aspiring to in a talk. Familiarity with the STRIDE model and the OWASP Top 10 gives me a leg up in thinking about how to identify and mitigate risk in our software. &lt;/p&gt;
&lt;p&gt;Areti Panou's talk about a deployment pipeline resonates more deeply now, after two years of running and maintaining a pipeline, than it did at the time, when a pipeline was just a glimmer in the eye of a teammate. I held an expectation setting and reaffirmation workshop about one pipeline in my department last week. Areti's expectations that a pipeline should have a clear purpose, failure criteria, and fix deadlines could help fix the bystander effect I've experienced myself. &lt;/p&gt;
&lt;p&gt;The incomparable and unstoppable Lisi Hocke gave a talk about becoming more code-confident that still influences how I approach goals and objectives. Specifically: it's ok to re-evaluate if goals should still apply, and to establish pause or exit criteria to know when to give up. While I can be strong in saying no to what others expect, giving up on something I expect of myself can still be a struggle. &lt;/p&gt;
&lt;p&gt;Bill Matthews's talk on technical risks with AI prompted me to add a "write about these times when you tested a machine learning application" card to the backlog for this blog. I wonder if I'll get around to writing that, since it would be hard to explain it better than Bill did that day. He talked about how training data reinforces stereotypes, and how understanding the domain is crucial to determining what's a random failure vs. what's a systematic failure. &lt;/p&gt;
&lt;p&gt;Louise Gibbs gave a talk on starting her automation journey with a record and playback tool. That's also what got me excited about automation originally, and I'm etnerally grateful to have had the right people steer me towards tests at a lower application level before UI auomation became the only tool in my toolbelt. &lt;/p&gt;
&lt;p&gt;Suman Bala's introduction to Charles Proxy was a memorable one. She'd hooked up her phone to the projected screen without turning her notifications off, so we got to see all the tweets streaming in in real time! If you're just diving into Charles Proxy, the &lt;a href="https://www.ministryoftesting.com/dojo/lessons/breaking-boundaries-using-charles-suman-bala"&gt;recording of this talk&lt;/a&gt; is a great place to start. &lt;/p&gt;
&lt;p&gt;Dominic Kua's talk on bash commands, Wim Selles's talk on Appium, and Henrik Stene's talks on consumer-driven contracts definitely fell into the "these people really know their tool" category. If they were tools I was using, I'd certainly consult their tips and advice. &lt;/p&gt;
&lt;p&gt;Emily Bache's talk shared the ideas from the State of DevOps reports and ultimately the Accelerate book. As a team lead and co-host for a testing ensemble, I was able to help empower people across teams and help build a culture of psychological safety. In my new role as Quality Lead, I'm just starting to collect the DORA metrics to help me decide where I should focus my efforts within the department. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;What a memorable group of people, location, and journey it was to TestBash Manchester 2019. I hope the &lt;a href="https://www.ministryoftesting.com/news/testbash-brighton-2022-cancellation-and-testbash-uk"&gt;upcoming TestBash UK&lt;/a&gt; is in the cards for me this coming year, and not only because I still dream about &lt;a href="https://www.mowglistreetfood.com/"&gt;this Indian food&lt;/a&gt; I had on the way in and out of Manchester.&lt;/p&gt;</description><category>conference</category><category>testbash</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/test_bash_manchester_2019/</guid><pubDate>Tue, 09 Nov 2021 23:00:00 GMT</pubDate></item><item><title>Map Out Your Stakeholders</title><link>https://elizabethzagroba.com/posts/2021/map_out_your_stakeholders/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;p&gt;Test reporting is part of a feedback loop. It's the beginning of a conversation, not the end. Knowing who you're having that conversation with allows you to provide those individuals better information for their context. &lt;/p&gt;
&lt;p&gt;If you find a big nasty bug, you might report it differently if your audience is a developer on your team who you work with everyday, a developer on another team who you haven't met, or the Head of Product looking to give an important demo. Reporting on the breath, depth, focus, and impediments to your testing can help your audience guide your upcoming testing. &lt;/p&gt;
&lt;p&gt;Joep Schuurkes and I had an activity as part of workshop on test reporting at TestBash Manchester 2019. I believe he articulated the key idea: if your test reporting depends on your audience, you have to know who your audience is. We had participants map out (with paper and markers) who the stakeholders were for their testing. Some people drew org charts, other drew mind maps.&lt;/p&gt;
&lt;p&gt;In the test reporting workshop I held yesterday, we used a Miro board to map out our stakeholders. As examples, I made an overview of how I was thinking about my recent team. &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2021/stakeholder-mind-map.png"&gt;&lt;/p&gt;
&lt;p&gt;And a version of Dan Ashby's Layers of Influence model, the "shallot" of influence, if you will. &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2021/stakeholder-shallot.png"&gt;&lt;/p&gt;
&lt;p&gt;While these are stated with people's roles, doing this for yourself using people's actual names (or names + roles) will help you think about who they are and what they listening for. &lt;/p&gt;
&lt;p&gt;Identifying the audience for your test report allows you to tailor it to the risks they care about. If you're not sure how to tailor the report, present them with something and find out if that's what they want. Even better, share with them that you're trying to figure out how to make your work most effective for them. &lt;/p&gt;
&lt;p&gt;More things to read:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Other posts on &lt;a href="https://elizabethzagroba.com/categories/reporting/"&gt;test reporting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://club.ministryoftesting.com/t/ask-me-anything-test-reporting/46827"&gt;Questions left over from an Ask Me Anything on test reporting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Having the conversation about the conversation, or &lt;a href="https://elizabethzagroba.com/posts/2021/delivering_information_vs_delivering_meta_information/"&gt;delivering meta-information&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><category>reporting</category><category>risk-based-testing</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/map_out_your_stakeholders/</guid><pubDate>Thu, 28 Oct 2021 22:00:00 GMT</pubDate></item><item><title>Unblocking Your Test Strategy</title><link>https://elizabethzagroba.com/posts/2021/unblocking_your_test_strategy/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/lightbulb.jpeg"&gt;&lt;/figure&gt; &lt;p&gt;In my new role as Quality Lead for my department, I get to figure out how to infuse everybody's work with "quality", and also figure out what that means exactly. &lt;/p&gt;
&lt;p&gt;One of my colleagues made it easy for me on my second day by coming with a relatively concrete problem: they wanted an acceptance environment for their team. Their team (henceforth: Eager Team) integrated with chronically overloaded and busy team (henceforth: Busy Team), so they wanted an environment where they could test their stuff together before it went into production. They wanted me to help set that up. &lt;/p&gt;
&lt;p&gt;I started my conversation with Eager Team Lead by taking one step back: why did they want this environment? They'd proposed a solution, but I wanted to spend at least a few minutes digging into the problem space with them to hear more about why they wanted this.&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Come up with dream scenario&lt;/h4&gt;
&lt;p&gt;I asked Eager Team Lead what their dream setup would be for their test automation, and why that was the dream.&lt;/p&gt;
&lt;p&gt;Eager Team and Busy Team already had a test environment hooked up to one another. But they both threw whatever they were in the middle of on that environment. Eager Team couldn't count on a stable, usable version of Busy Team's software, and vice versa. Eager Team wanted a place to see what would happen against the production version of Busy Team's code. They wanted to automate all the things they could, and have a place to run that automation. &lt;/p&gt;
&lt;h4&gt;Identify (and confirm they are indeed) constraints&lt;/h4&gt;
&lt;p&gt;Unfortunately Busy Team was busy. They wouldn't be able to make setting up an environment for Eager Team a priority in the next few months. I had that impression, and so did Eager Team Lead. They were, after all, Busy Team. But I wanted to make sure that the busyness of Busy Team was a constraint. I took on the action point to follow up with Boss Person about how we could both (1) check that Busy Team was indeed too busy, and (2) how to get this request on Busy Team's long list for the future.&lt;/p&gt;
&lt;p&gt;I also dispelled one of assumptions underlying Eager Team Lead's dream setup: it was important to test everything, in an automated way, in the ideal environment, or else testing wouldn't be valuable. I explained that it's &lt;a href="https://app.thestorygraph.com/books/8ba29269-1843-4ac1-be0c-226752b17937"&gt;impossible to test everything&lt;/a&gt;. Testing in an automated way would be more likely to reveal known unknowns than the unknown unknowns their team was interested in. And that it wasn't all-or-nothing - every little bit would help.&lt;/p&gt;
&lt;h4&gt;Choose achieveable pieces within constraints&lt;/h4&gt;
&lt;p&gt;Rather than killing the dream, I identified a valuable first step in the direction of the dream. Eager Team would write down, in English to start, 3-5 things that they want to test using both their software and Busy Team's. They'd show those to their product owner to make sure they were things customers cared about. From there, we could look at whether to build automation, and if so, where to run it. There was that test environment already. We had production, could we use feature flags? Could we keep the data only visible to our employees internally? &lt;/p&gt;
&lt;p&gt;I knew I'd hit a nerve when Eager Team Lead said "Oh, we can just start iterating over this!" Because of course, the software itself is not the only thing you can build in an iterative way. Your test automation can also mitigate risk, confirm assumptions, and provide value along the way. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;So how'd it go? I confirmed Busy Team's busyness, and got more details on how and when to add this request to their list. I'm following up with Eager Team next week to see where they are in identifying valuable scenarios, or if I should jump in there too. &lt;/p&gt;
&lt;p&gt;But wow, what a feeling to be able to lift the weight of "I need a thing I don't know how to build and don't think I can ever get" off someone's shoulders and replace it with "I know what to do next and it's achievable." &lt;/p&gt;
&lt;p&gt;Stay tuned for more quality leading to come.&lt;/p&gt;</description><category>automation</category><category>coaching</category><category>risk-based-testing</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/unblocking_your_test_strategy/</guid><pubDate>Thu, 21 Oct 2021 22:00:00 GMT</pubDate></item><item><title>That "I Did It!" Feeling</title><link>https://elizabethzagroba.com/posts/2021/that_i_did_it_feeling/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;p&gt;I moved into a different role at work this week. I handed off my former team to the new team lead with a final 1-on-1 (and coincidentally performance review) for each team member. Each of them has a different variety of skills, motivators driving them, and awareness of either. This blog post focuses on just one team member. &lt;/p&gt;
&lt;h3&gt;"I did it!"&lt;/h3&gt;
&lt;p&gt;One team member is really driven by that "I did it!" feeling. They're early in their career. Both the product and the company are new to them. They spend a lot of their time pairing, asking for help, or floudering while wondering if they should be pairing or asking for help. Every 1-on-1, they'd report feeling that they hadn't learned or accomplished anything. They weren't getting that "I did it!" feeling.&lt;/p&gt;
&lt;p&gt;But they were doing a great job. They were making progress in all the different technologies our team uses (Mendix, Docker, OpenAPI, pytest, gitlab pipelines, etc.), learning as they went. They were able to accept feedback to course-correct when necessary. They knew they were learning a lot, but this alone wasn't motivating enough for them.&lt;/p&gt;
&lt;h3&gt;Forces within our control&lt;/h3&gt;
&lt;p&gt;As a team lead, part of my job was to create focus for my team. There was a cloud of possibilities and priorities the people around and above us struggled to make clear. I wanted to create an environment where my team members could still get that "I did it!" feeling anyway. This Liz and Mollie comic captures it nicely. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="A great manager holds umbrella to protect team from ridiculous requests, unclear priorities, massive uncertainty, unneccessary meetings, last-minute chaos; and foster clear expectations, defined roles, work-life balance, stable achieveable goals" src="https://elizabethzagroba.com/images/posts/2021/liz-and-mollie-umbrella.jpg" style="display:block; margin-left: auto; margin-right: auto;" title="@lizandmollie"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;@lizandmollie&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Amid this uncertainty, my team member requested  clear steps for what they should be doing next and how to get promoted. I started by sending them the job description they hadn't seen for his own job. This helped set clear expectations and define their role. I spent time in our 1-on-1's finding out more about what was on their mind or dragging their attention away from work. &lt;/p&gt;
&lt;p&gt;I took the time to reinforce the importance of a work-life balance. We started every refinement meeting with a review of upcoming time off, complete with peer pressure from me to take more of it. This allowed us to only refine the amount of work we could accomplish in the upcoming period, and set expectations for what wouldn't be done. This helped scope and clarify each team member's job. &lt;/p&gt;
&lt;p&gt;I tried to give all my team members the "I did it!" feeling by talking about what we accomplished at the smallest scale in standup, a slightly larger scale in retro, and on the largest scale in the meeting with the whole unit. But that wasn't helping this particular team member. &lt;/p&gt;
&lt;p&gt;The thing that finally gave them that "I did it!" feeling was: a Trello board for their own personal career development, with To Do, Doing, and Done columns. &lt;/p&gt;
&lt;h4&gt;To Do&lt;/h4&gt;
&lt;p&gt;We identified a clear, actionable step to take for a few technologies, job description bullet points, and conversations we'd already been having in our 1-on-1's. Some items would be accomplished during the course of our regular work on user stories. I set a clear expectation about the other items: they were for work time - downtime while waiting for a response, crafting days, etc. They were not for personal time.&lt;/p&gt;
&lt;h4&gt;Doing&lt;/h4&gt;
&lt;p&gt;I explained that it's better to limit the number of items in this column at a time. Deciding what to leave aside allows you to focus on what's in front of you. My team member want to be an expert in all our of different technologies at once. I reset this expectation: get a little better, one at a time.&lt;/p&gt;
&lt;h3&gt;Done&lt;/h3&gt;
&lt;p&gt;I gave them homework to fill in the Done column. They took time to list things they had learned and accomplished in the previous months. Scrolling through the Done list got them pretty close to that "I did it!" feeling. Taking a moment to reflect during our 1-on-1's helped give them that feeling. But they weren't getting that feeling right away. They needed to celebrate their accomplishments as they were happening, to keep up the motivation and momentum. &lt;/p&gt;
&lt;p&gt;I did what was possibly my best management move for this person: I threw confetti.&lt;/p&gt;
&lt;p&gt;Trello has a feature where if you add the confetti ball emoji to the title of a column, moving an item to that column throws a little confetti around the item. It's very cute, and it finally gave my team member that "I did it!" feeling. &lt;/p&gt;
&lt;h3&gt;Setting expectations around the feeling&lt;/h3&gt;
&lt;p&gt;In the handoff to the new team lead, I explained this need my team member had, the ways I'd tried to meet it, and the confetti ball that finally worked. I pointed out that the need for the "I did it!" feeling can be found in other ways. The important thing for the team lead is not a particular action, but checking in with the team member about the feeling. I wanted to leave them space to take a different approach, so I used the "Mary had a little lamb" heuristic to explain what a different approach should include. &lt;/p&gt;
&lt;h4&gt;&lt;em&gt;I&lt;/em&gt; did it!&lt;/h4&gt;
&lt;p&gt;The team member wanted to point to something they did. Without pairing, without asking a bunch of questions, they wanted to point to something and know that they were able to accomplish it themselves. &lt;/p&gt;
&lt;h4&gt;I &lt;em&gt;did&lt;/em&gt; it!&lt;/h4&gt;
&lt;p&gt;The thing had to be done. While some skills and knowledge transfer could be months or years in the making, they needed something to come to a close. &lt;/p&gt;
&lt;h4&gt;I did &lt;em&gt;it&lt;/em&gt;!&lt;/h4&gt;
&lt;p&gt;The new team lead and the team member get to decide together what's on the list, what it is. Growth and comfort in skills may not be immediately visible to the invidual in the day-to-day grind. Setting aside time for individual reflection or recognition at the 1-on-1 would help. &lt;/p&gt;
&lt;h4&gt;I did it &lt;em&gt;!&lt;/em&gt;&lt;/h4&gt;
&lt;p&gt;This is the confetti ball piece of the puzzle. The celebration. It may feel silly, or gimicky, but it finally got this person that satisfaction they were looking for out of their job. &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Reflection&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;When managing, do you dig into what a person needs to have clear expectations, defined roles, work-life balance, and stable achieveable goals?&lt;/li&gt;
&lt;li&gt;When a team member asks you for an outcome, do you think about why they're asking you for that? &lt;/li&gt;
&lt;li&gt;When you do handoffs, do you describe the actions you took or the needs they were serving? &lt;/li&gt;
&lt;/ul&gt;</description><category>handoff</category><category>leadership</category><category>mindset</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/that_i_did_it_feeling/</guid><pubDate>Fri, 08 Oct 2021 22:00:00 GMT</pubDate></item><item><title>Give Them the Fish, Then Teach Them to Fish</title><link>https://elizabethzagroba.com/posts/2021/give_them_the_fish_then_teach_them_to_fish/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;p&gt;A colleague came to me with a request the other day. I didn't handle it quite how I wanted to. The request went something like this:&lt;/p&gt;
&lt;p&gt;"I remember you were on the team for Big Scary product a couple years ago. Do you know if I can delete this List of Stuff from Big Scary product, and if I can automate that?"&lt;/p&gt;
&lt;p&gt;I did not know. It was two years ago. Big Scary product had gotten Bigger and Scarier in the meantime. &lt;/p&gt;
&lt;p&gt;But I knew where my team linked to our API specs from our customer-facing documentation. I applied the same principle to discover where Big Scary product API specs were. I looked at those specs and found the List of Stuff in a response body for an API call, but noticed that my colleague wouldn't have the ID the request required. So I looked at the API specs from a Bigger Scarier product. Combining a call from there would get the ID Big Scary product needed.&lt;/p&gt;
&lt;p&gt;I was short on time, so I answered the question directly. I said it was possible, and possible to automate, and provided the links to the specs for both products. My colleague thanked me, and left the conversation able to solve their problem quickly. &lt;/p&gt;
&lt;p&gt;I gave them the fish. What they learned from that interaction was: Elizabeth knows where to find stuff. I can come to her when I don't know how to find stuff and she will find it for me. That was the wrong lesson. &lt;/p&gt;
&lt;h3&gt;Give Them the Fish, Then Teach Them to Fish&lt;/h3&gt;
&lt;p&gt;A better lesson would have been: I know where to look for things. Elizabeth will give me the tools to know where to look, and empower me to do so. Now that I've got the access and seen it done once before, I can take a few more steps before I reach out Elizabeth the next time.&lt;/p&gt;
&lt;p&gt;Here's what I could have done to get to get this colleague there:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Explain where all the API specs live: I could have explained my thought process for finding the API specs, showed how I navigate using the headers and &lt;code&gt;Ctrl + F&lt;/code&gt; on the page, and compare the requests and responses to what's needed.&lt;/li&gt;
&lt;li&gt;Update them about who's on the team for Big Scary product now: I could have listed a few team members names who I knew were working on Big Scary product, or pointed my colleague to the Slack channel for the whole team.&lt;/li&gt;
&lt;li&gt;Introduce colleague to a member of the team for Big Scary product: Since this colleague was a tester, I could have started a direct message with them and the tester on the team for Big Scary product, copying the question from the DM I first received. &lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;What If I Only Teach Them to Fish?&lt;/h3&gt;
&lt;p&gt;What would have happened if I'd skipped what I'd done, and withheld the links to the API specs? &lt;/p&gt;
&lt;p&gt;I wouldn't have been able to guarantee that my colleague was in the learning zone. From what I knew about their situation, they were accumulating a lot of data that they wanted to delete. I didn't know what other pressures were coming from the team, but the need to automate it suggested it was a bigger problem than just a few extra entries in a database. &lt;/p&gt;
&lt;p&gt;Giving my colleague the fish, and &lt;em&gt;then&lt;/em&gt; teaching them to fish, relieves any of that pressure to deliver, and helps open them up to learning and growing. &lt;/p&gt;
&lt;h3&gt;Tell Them What You're Doing&lt;/h3&gt;
&lt;p&gt;Some colleagues are distracted, or dense, or not able to take away &lt;a href="https://elizabethzagroba.com/posts/2021/delivering_information_vs_delivering_meta_information/"&gt;meta-information&lt;/a&gt; from a conversation along with the information. They may stop listening after they have the answer. &lt;/p&gt;
&lt;p&gt;Combat this by sharing your motives. Remind them that you too are busy. Explain that your goal is to empower them. Encourage them to reach out to the team working on Big Scary product, so that those team members can also get good at knowing where to look and answering colleagues' questions. Tell them you're happy to help them again, but you'll expect more details of what they tried first. Then hold them to that. &lt;/p&gt;
&lt;p&gt;The best lesson is: I want to take a few more steps next time I have a problem, because I know I can, and Elizabeth expects more from me. &lt;/p&gt;</description><category>critical-thinking</category><category>leadership</category><category>mindset</category><category>teaching</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/give_them_the_fish_then_teach_them_to_fish/</guid><pubDate>Sat, 07 Aug 2021 22:00:00 GMT</pubDate></item><item><title>SoCraTes UK June 2021 </title><link>https://elizabethzagroba.com/posts/2021/socrates_uk_june_2021/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/socrates-schedule.png"&gt;&lt;/figure&gt; &lt;p&gt;I had a long drought between when I was last able to just attend a conference (rather than running a session or organizing) and SoCraTes UK in June. A year I think? And what a welcome rain it was. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Heloá hosted a session on meditation. I recognized many of the symptoms she described as her motivators for picking up the habit from &lt;a href="https://elizabethzagroba.com/assets/slides/introvert.pdf"&gt;a talk I did about introversion years ago&lt;/a&gt;. And the mindset she described (trying over succeeding, recognizing reactions without trying to impose a particular one) echoed back to a conversation on stoicism that &lt;a href="https://twitter.com/SimplySanne"&gt;Sanne Visser&lt;/a&gt; hosted at the first TestCraftCamp. I was completely convinced by the benefits she described ("People say I sound calmer. I'm breathing more deeply.") but I haven't built a habit around it yet. C'est la vie. &lt;/p&gt;
&lt;p&gt;I went to two different sessions &lt;a href="https://twitter.com/maaretp"&gt;Maaret Pyhäjärvi&lt;/a&gt; hosted. (Does this make me a groupie?) The first, an ensemble testing session, reminded me that the most valuable exploratory testing bugs come when you understand enough about the business and the architecture to know what matters to some person who matters. The second session was about scaling workshops (and really, herself). I joined late after the lightning talks ended, but still helped plant the seed of what I and SoCraTes can do to bring more people into learning about good software. &lt;/p&gt;
&lt;p&gt;I selfishly hosted a "help me out here" session in the afternoon. As I predicted, the testers extraordinaire Maaret and &lt;a href="https://twitter.com/lisihocke"&gt;Lisi Hocke&lt;/a&gt; were exactly the people I needed to give me perspective on my current and evolving role at work, though the other attendees contributed as well. I came away with more questions than answers, which I'm still mulling over and digging into weeks later. I look forward to sharing more about the shape of things as they come to fruition.&lt;/p&gt;
&lt;p&gt;Alexander (What is your last name?? Sorry!) held a session on habits you've developed or changed during the pandemic. How lovely it was to be in a small conversation trading notes about remote music lesssons and holding remote workshops. It was exactly the kind of hallway conversation I'd be looking to fall into at a flesh-and-blood conference.&lt;/p&gt;
&lt;p&gt;I didn't write down who gave the lightning talk about saying no, but thank you. I rarely (never?) regret saying no, but I needed that extra push and specific language to have those "If you want me to pick this up, which of these things should I be putting down then?" conversations I've had lately. I have "Saying no commands respect" in my notes, and I guess I need a throw pillow of that too. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;SoCraTes reinforces for me how a welcoming, inclusive open space is done. It's through &lt;a href="https://twitter.com/AmelieCornelis/status/1393945719413825542"&gt;explaining what an open space is for people who haven't attended&lt;/a&gt;. It's who's on the organizing committee. It's reminding people to take time off from the sessions. It's about ending up in the "Rose Garden" at the same time as &lt;a href="https://twitter.com/EvaNanyonga"&gt;Eva Nanyonga&lt;/a&gt;, who's working to improve the dispatching of home helathcare workers in Uganda, and finding out you sparked her curiosity and delight in the exploratory testing session earlier in the day. It's about providing a subsidized ticket option to make the event accessible to more people. It's in offering advice to the hosts at the start, such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ask for help facilitating&lt;/li&gt;
&lt;li&gt;kick off the discussion&lt;/li&gt;
&lt;li&gt;include everyone in the conversation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thank you for holding this space. It's got me excited to host the open space that TestCraftCamp has evolved into, Friends of Good Software (&lt;a href="https://frogsconf.nl/"&gt;FroGS Conf&lt;/a&gt;) in September. &lt;/p&gt;</description><category>career</category><category>conference</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/socrates_uk_june_2021/</guid><pubDate>Fri, 16 Jul 2021 22:00:00 GMT</pubDate></item></channel></rss>