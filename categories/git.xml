<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elizabeth Zagroba: Software Tester (Posts about git)</title><link>https://elizabethzagroba.com/</link><description></description><atom:link href="https://elizabethzagroba.com/categories/git.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>© 2020 &lt;a href="mailto:me@elizabethzagroba.com"&gt;Elizabeth Zagroba&lt;/a&gt; Mozilla Public License 2.0</copyright><lastBuildDate>Mon, 04 May 2020 18:38:17 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Update your Mac Terminal to display your current git branch and status</title><link>https://elizabethzagroba.com/posts/2019/2019-02-02_update-your-mac-terminal-to-display-your-current-git-branch-and-status/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;TLDR; You can copy &lt;a href="https://github.com/ezagroba/bash-profile-branch-and-color/blob/master/export-PS1.gist"&gt;all the code from my github&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
&lt;p name="0fd7" id="0fd7" class="graf graf--p graf-after--h3"&gt;I spent the better part of a crafting day at the office updating my &lt;code class="markup--code markup--p-code"&gt;.bash_profile&lt;/code&gt; on my Mac. If I’m in a git repository, with every command prompt, I see the branch name and an asterisk if there are un-committed changes. The original prompt for the machine, the repository name, and the branch name each appear in different colors. Here’s what it looks like:&lt;/p&gt;

&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/command-prompt.png"&gt;&lt;/p&gt;
&lt;p name="47d3" id="47d3" class="graf graf--p graf-after--figure"&gt;It may look like this one line in my &lt;code class="markup--code markup--p-code"&gt;.bash_profile&lt;/code&gt; file is where the magic happens, because this is where the colors are set:&lt;/p&gt;

&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"\[\033[36m\]\u\[\033[32m\]\w\[\033[33m\]\$(git_branch)\$(parse_git_dirty)\[\033[00m\]&lt;/span&gt;$&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/colors.png"&gt;&lt;/p&gt;
&lt;p name="c9ba" id="c9ba" class="graf graf--p graf-after--figure"&gt;Unfortunately the colors, branch, and status still need to be variously activated and calculated.

&lt;/p&gt;&lt;p&gt;This function calculates if the branch has new changes:&lt;/p&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;parse_git_dirty&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;[[&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;n&lt;/span&gt; &lt;span class="s2"&gt;"$(git status -s2&amp;gt; /dev/null)"&lt;/span&gt; &lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nx"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"*"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;p name="b7b9" id="b7b9" class="graf graf--p graf-after--figure"&gt;The last thing is fetching the branch name:&lt;/p&gt;


&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git_branch&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  git branch &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt; /dev/null &lt;span class="p"&gt;|&lt;/span&gt; sed -e &lt;span class="s1"&gt;'/^[^*]/d'&lt;/span&gt; -d &lt;span class="s1"&gt;'s/* \(.*\)/ (\1)/'&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;



&lt;p name="5ccd" id="5ccd" class="graf graf--p graf-after--figure"&gt;It took a lot of internet searching and help from colleagues to set it up. I had the git status and the branch name going separately, but combining them failed. Typing past the width of the window in the command prompt would send text to overwrite the current line instead of wrapping onto a second. &lt;a href="https://askubuntu.com/questions/24358/how-do-i-get-long-command-lines-to-wrap-to-the-next-line" data-href="https://askubuntu.com/questions/24358/how-do-i-get-long-command-lines-to-wrap-to-the-next-line" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;This solved that for me&lt;/a&gt;. &lt;a href="http://jafrog.com/2013/11/23/colors-in-terminal.html" data-href="http://jafrog.com/2013/11/23/colors-in-terminal.html" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;There are also other color options&lt;/a&gt;. The slashes &lt;code class="markup--code markup--p-code"&gt;\&lt;/code&gt; help end commands, but it was a lot of trial and error to get them all in the right spots. I was editing my &lt;code class="markup--code markup--p-code"&gt;.bash_profile&lt;/code&gt; intially in Sublime; any plain-text editor would have worked. I moved to nano in the Terminal when I wanted to see the changes more quickly. I did still have to close all open Terminal sessions before seeing the latest changes.&lt;/p&gt;&lt;p name="fb1a" id="fb1a" class="graf graf--p graf-after--p"&gt;This lovely command prompt doesn’t prevent every mistake, but it does help call my attention to the status so I don’t:&lt;/p&gt;&lt;ul class="postList"&gt;&lt;li name="412e" id="412e" class="graf graf--li graf-after--p"&gt;open the wrong repository (easy to do when you’re migrating from one to another)&lt;/li&gt;&lt;li name="9c89" id="9c89" class="graf graf--li graf-after--li"&gt;try to commit before the changes are saved&lt;/li&gt;&lt;li name="8694" id="8694" class="graf graf--li graf-after--li"&gt;commit to master instead of a branch&lt;/li&gt;&lt;/ul&gt;&lt;p name="7824" id="7824" class="graf graf--p graf-after--li graf--trailing"&gt;If nothing else, I enjoy a bit of color in an interface that doesn’t have any to start.&lt;/p&gt;&lt;section name="c8d0" class="section section--body section--last"&gt;&lt;div class="section-divider"&gt;&lt;hr class="section-divider"&gt;&lt;/div&gt;&lt;div class="section-content"&gt;&lt;div class="section-inner sectionLayout--insetColumn"&gt;&lt;p name="6696" id="6696" class="graf graf--p graf--leading graf--trailing"&gt;&lt;em class="markup--em markup--p-em"&gt;Thanks to Maik Nog for suggesting I share this in a more shareable format. It’s available on &lt;/em&gt;&lt;a href="https://github.com/ezagroba/bash-profile-branch-and-color/blob/master/export-PS1.gist" data-href="https://github.com/ezagroba/bash-profile-branch-and-color/blob/master/export-PS1.gist" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;&lt;em class="markup--em markup--p-em"&gt;github&lt;/em&gt;&lt;/a&gt;&lt;em class="markup--em markup--p-em"&gt;.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;


*Originally published on [Medium](https://medium.com/@ezagroba/update-your-mac-terminal-to-display-your-current-git-branch-and-status-471c017436a2).*&lt;/div&gt;</description><category>git</category><category>Mac</category><category>terminal</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2019/2019-02-02_update-your-mac-terminal-to-display-your-current-git-branch-and-status/</guid><pubDate>Fri, 01 Feb 2019 23:00:00 GMT</pubDate></item></channel></rss>