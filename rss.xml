<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elizabeth Zagroba: Software Tester</title><link>https://elizabethzagroba.com/</link><description>Elizabeth Zagroba: Software Tester</description><atom:link href="https://elizabethzagroba.com/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Â© 2021 &lt;a href="mailto:me@elizabethzagroba.com"&gt;Elizabeth Zagroba&lt;/a&gt; Mozilla Public License 2.0</copyright><lastBuildDate>Sun, 11 Apr 2021 16:10:14 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>My First Agile Testing Days: four years later</title><link>https://elizabethzagroba.com/posts/2021/agile_testing_days_2017/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;After years of getting rejected, the talk I submitted to Agile Testing Days in 2017 finally got me accepted. It was such a privilege and an honor to meet so many of the people I'd only know from the internet. Reading through my notes now, much of what I wrote down has become engrained into how I go about my work everyday. What a blessing it was to encounter the people I needed to learn from in my career at the time I needed to learn from them. I'm glad to see how routine their wisdom has become for me.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/lisihocke"&gt;Lisi Hocke&lt;/a&gt; gave a talk about growth. I've since seen more of her talks and prepared a workshop with her; I see how she embodies this in her approach to the world. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/NativeWired"&gt;Gitte Klitgaard&lt;/a&gt; reminded me that believing in people will allow them to be better. Stay curious about why people are doing what they do before placing judgment.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Punkmik"&gt;Kim Knup&lt;/a&gt; spoke about a zero bug policy (not any bugs in your backlog). I was not ready to hear this message at the time, having come from places with years-old products and tens or hundreds of bugs in the backlog. But now I see exactly what she was describing: the psychological relief that comes from less time in JIRA and fewer meetings about priorities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/katrinaclokie"&gt;Katrina Clokie&lt;/a&gt; pulled up Noah Sussman's reimagining of the testing pyrmaid (lots of small tests, fewer large ones) upside-down as a bug filter. And suddenly, it clicked for me. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/alex_schl"&gt;Alex Schladebeck&lt;/a&gt; and &lt;a href="https://twitter.com/huibschoots"&gt;Huib Schoots&lt;/a&gt; challenged me to think on a meta-level about the testing I was doing, to name the skills and techniques I was using. It would help me as I spent the following years sharing exploratory testing skills with other testers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ewebber"&gt;Emily Webber&lt;/a&gt; spoke about building trust on teams. I find myself recommending the &lt;a href="https://emilywebber.co.uk/the-team-manual-a-exercise-to-help-build-empathy-in-teams/"&gt;team manual&lt;/a&gt; she developed to somebody about once a month, plus she helped spark an idea for a future conference talk I developed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/lunivore"&gt;Liz Keogh&lt;/a&gt; gave me the words I needed to build a safe-to-fail environment for my team members, where failure is an expected, inevitable part of complex systems. &lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;I realized in compiling this blog post that I'd already written about Agile Testing Days just one month after I'd attended in 2017. At that point, I was looking specifically at regression testing advice, which is what I was in the thick of at work. What am I in the thick of now, and when will it become clear to me?&lt;/p&gt;&lt;/div&gt;</description><category>agile-testing-days</category><category>conference</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/agile_testing_days_2017/</guid><pubDate>Sat, 10 Apr 2021 22:00:00 GMT</pubDate></item><item><title>Recently Encountered Logical Fallacies</title><link>https://elizabethzagroba.com/posts/2021/recently_encountered_logical_falacies/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/statue.jpg"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;I was on &lt;a href="https://www.ministryoftesting.com/dojo/lessons/discussion-critical-thinking"&gt;a panel about critical thinking for the Ministry of Testing&lt;/a&gt; last week. One of my fellow panelists and commendable ranter &lt;a href="https://twitter.com/Maaikees"&gt;Maaike Brinkoff&lt;/a&gt; brought up &lt;em&gt;ad hominem&lt;/em&gt; (personal) attacks as one example of a failure of critical thinking. It's one of many &lt;a href="https://fallacyinlogic.com/"&gt;logical fallacies&lt;/a&gt; that are worth exploring further. &lt;/p&gt;
&lt;p&gt;Equipping yourself with the name for a thing helps you recognize it when it appears. (Lara Hogan wrote recently about applying the skill, of &lt;a href="https://leaddev.com/communication-relationships/skill-naming-whats-happening-room"&gt;being able to name the problem in the room&lt;/a&gt;, to defuse tense meetings.) These are some of the fallacies I've across recently when I've been debriefing testing sessions, facilitating refinement sessions, and reviewing conference submissions.&lt;/p&gt;
&lt;h4&gt;Affirming the consequent&lt;/h4&gt;
&lt;p&gt;Affirming the consequent is applying a conditional without the conditionality, or assuming something happened because you see a result. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If P (I run the pipeline) then Q (the latest build will be available on the test environment)&lt;/li&gt;
&lt;li&gt;Q (the latest build is available on the test environment)&lt;/li&gt;
&lt;li&gt;Therefore P (I ran the pipeline) &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We can't assume the converse: if Q, then P. Just because the latest build is on the test environment doesn't mean I ran the pipeline. Maybe someone else ran the pipeline, or put the build there manually. Maybe there haven't been any changes since yesterday, and the build from yesterday is still the latest one.&lt;/p&gt;
&lt;h4&gt;Fallacy of composition&lt;/h4&gt;
&lt;p&gt;This assumes that something that applies to one member of a class applies to them all.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Y is part of X (Stephanie is an admin user)&lt;/li&gt;
&lt;li&gt;Y has property P (Stephanie can see this page)&lt;/li&gt;
&lt;li&gt;X has property P (any admin user can see this page)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We can't assume that what's true for one member of a class applies to all of them. What happens if Stephanie can be assigned more than one role, a more restrictive/regular user role in addition to the admin role? Can she still see it? What if Stephanie being able to see the page has nothing to do with her status as an admin user?&lt;/p&gt;
&lt;h4&gt;&lt;em&gt;Post hoc ergo propter hoc&lt;/em&gt; (correlation without causation)&lt;/h4&gt;
&lt;p&gt;This one is easiest to see when others are debreifing their testing to me, but I've also learned to catch for myself. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Event A occurred (I clicked the button)&lt;/li&gt;
&lt;li&gt;Then event B occurred (a whole bunch of log messages appeared)&lt;/li&gt;
&lt;li&gt;Therefore A caused B (clicking the button caused a whole bunch of log messages)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We can't assume that events that occur in a particular sequence in time are necessarily causal. Did clicking the button trigger the log messages? What do the log messages say? Did you read them? Who else could be using this environment? Does the same thing happen every time you click the button, or when you run the application in a different environment? &lt;/p&gt;
&lt;h4&gt;Argument from repetition&lt;/h4&gt;
&lt;p&gt;When someone says the same thing enough times, or brings up the same unimportant issue in a refinement meeting week after week, it can become easier to address the issue rather than convincing them yet again why it's not a priority. I've been facilitating refinement meetings every week for my teams for the past two years. &lt;a href="https://butyoudontlooksick.com/articles/written-by-christine/the-spoon-theory/"&gt;I only have a finite amount of energy&lt;/a&gt; that is not always worth expending by refuting the case for a small edge case week after week. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Shoutout to my logic professor Dan Cohen at Colby College, who had us memorize and distinguish logical fallacies as part of his brilliant Logic and Argumentation course, and pointing out that an ease and comfort with truth tables would translate well to a computer science course. Special thanks to Joep Schuurkes for his philosophical and technological opinions on this piece.&lt;/p&gt;&lt;/div&gt;</description><category>critical-thinking</category><category>logic</category><category>naming</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/recently_encountered_logical_falacies/</guid><pubDate>Tue, 30 Mar 2021 22:00:00 GMT</pubDate></item><item><title>TestCraftCamp: Spice Up Your Relationship (with Your Project)</title><link>https://elizabethzagroba.com/posts/2021/testcraftcamp_spice_up_your_relationship_with_your_project/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/tcc-mar-2021.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;&lt;a href="https://testcraftcamp.nl/"&gt;TestCraftCamp&lt;/a&gt;, the unconference I co-organize, had its third installment yesterday. I'm glad I had enough energy to attend more sessions this time, though of course the "too many good things happen at once" problem remained, as it does with any valuable conference. I was able to join a discussion &lt;a href="https://twitter.com/maaretp"&gt;Maaret PyhÃ¤jÃ¤rvi&lt;/a&gt; (who is so often a driving force behind gatherings like these) about low and high value work, a discussion Joep Schuurkes led on daily writing practices, part of a session &lt;a href="https://twitter.com/witchofthetest"&gt;Veerle Verhagen&lt;/a&gt; hosted on testing without touching (before I realized I'd spent too long looking at the product under test already), as well as finding some of my brethren in between the sessions. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I took notes in a sprawling mind map for another session Veerle hosted, which she pitched as "spicing up your long-term relationship! (with your project)." Besides the memorable pitch, I was excited to see this topic on the schedule for a couple reasons:&lt;/p&gt;
&lt;p&gt;First, I've been working on my current product for two years. Some new people have joined the project recently, and having to explain and document the intricacies of our product keeps giving me new reasons to question the decisions we've made as the product has been developed. &lt;/p&gt;
&lt;p&gt;Second, I don't think this it's something we typically acknowledge: our skills can get stale and our motivation can wane when we've developed a certain level of comfort and mastery with a particular team and product. Even without changing jobs or teams, it can be worthwhile to shake things up. &lt;/p&gt;
&lt;p&gt;On my project, adding permanent designers and engineers to the team is shaking things up. The hive mind in the session came up with many other ways to get new people involved in testing, if temporarily: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hold a bug hunt or an &lt;a href="https://www.lisihocke.com/2021/02/ensemble-is-the-new-mob.html"&gt;ensemble&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;teach an intern&lt;/li&gt;
&lt;li&gt;swap products with another tester&lt;/li&gt;
&lt;li&gt;bring your product to a meetup&lt;/li&gt;
&lt;li&gt;pay for &lt;a href="https://www.hackerone.com/product/bounty"&gt;crowdsourced testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I collected a sprawling list of people's ideas for how you as an individual can gain perspective and change the way you're looking at your work. Taking notes on a multi-faceted conversation is hard, and in reviewing them, I realize they fall better into these groups: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;identify the assumptions you've built over time (which aren't true? which can be discarded? what's hard to talk about? how can I change perspective?)&lt;/li&gt;
&lt;li&gt;think about risks (&lt;a href="https://testobsessed.com/2006/12/the-nightmare-headline-game-planning-for-the-unexpected/"&gt;nightmare headlines&lt;/a&gt;, investigate competitors, talk to users, &lt;a href="https://www.ministryoftesting.com/testsphere/riskstorming"&gt;riskstorming&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;use different testing personas (extreme conditions, &lt;a href="https://www.logigear.com/logi_media_dir/Documents/whitepapers/soap_opera_testing.pdf"&gt;soap operas&lt;/a&gt;, &lt;a href="https://www.stickyminds.com/article/10-exploratory-testing-tours-you-can-use-analyze-artifacts"&gt;testing tours&lt;/a&gt;, dogfooding/drinking your own champagne, &lt;a href="https://theuserisdrunk.com/"&gt;this&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;step back (take a break, go on vacation, switch projects)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a counterpoint, the group in the session did acknowledge that reaching a point of comfort and mastery can be a good thing. (See chapter 4 of &lt;a href="https://leanpub.com/becomingatechnicalleader"&gt;Jerry Weinberg's Becoming a Technical Leader&lt;/a&gt; for more on plateaus and ravines.) After months or years on a project, you'll know where to look first for what your developers typically miss. You'll know what's not worth testing. In Veerle's case, the application has been getting 5-star reviews, which provides one positive angle on product quality. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Thanks so much to the facilitators, participants, and other organizers of TestCraftCamp. It's so fulfilling to get to the end of a long day and hear that we created a "safe environment," people who were only planning to stay for the morning lasted all day, and people were able to take breaks when they needed to. I'm glad we were able to fill others back up with energy. &lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>note-taking</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/testcraftcamp_spice_up_your_relationship_with_your_project/</guid><pubDate>Sat, 13 Mar 2021 23:00:00 GMT</pubDate></item><item><title>TestBash NYC 2015: A Push in the Right Direction</title><link>https://elizabethzagroba.com/posts/2021/testbash_nyc_2015/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/testbash-nyc.jpg"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;In 2015 when TestBash came to the United States for the first time, it was to New York. I was living in the city, but I was stuck at a job that wouldn't pay for a ticket. "Ask Rosie if you can volunteer," my mentor/sponsor/benefactor Martin Hynie suggested. Rosie, who I knew only as the lady who'd mailed me Ministry of Testing stickers from England for...no reason at all, obviously let me in.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;People ask "can we do it?" instead of asking "should we do it?"&lt;/p&gt;
&lt;p&gt;~&lt;cite&gt;Keith Klain&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I got to crash the speakers dinner. I got to go to Selena Delesie's workshop about leadership and change. At the end of the day, she praised my active participation and thanked me for being in her workshop. I was already confident in my testing skills, but she helped me see myself as a potential leader. In a follow-up coaching session I had with Selena about negotiating a higher salary, she asked me why I wanted more money. I'd recently moved into an apartment by myself, and couldn't think of what I would do with more money. It's something I think about with every job change, every growth in title and responsibility. Realizing I didn't want or need more money was a crucial step on the path to life-changing relocation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The common denominator in all your dysfunctional relationships is you.&lt;/p&gt;
&lt;p&gt;~&lt;cite&gt;Keith Klain&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;During a break between talks the following day, I snuck on stage wearing "the" Ministry of Testing tutu. During another, I wrote a bunch of notes to give a 99-second talk about leaving a closing comment on a story (which I completely forgot about, &lt;a href="https://www.ministryoftesting.com/dojo/lessons/defining-story-completion-as-a-software-tester"&gt;before later writing on this topic for the Dojo&lt;/a&gt;). While waiting on stage behind dozens of people waiting to give their 99-second talks, I improvised one about moonwalking instead.&lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2021/99-second-talk.jpg" style="display:block; margin-left: auto; margin-right: auto;" title="The 99-second talk I didn't give"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;The 99-second talk I didn't give&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I met Helena Jeret-MÃ¤e, Maaret PyhÃ¤jÃ¤rvi, Dan Ashby, who along with the conference friendships I was just beginning to foster, gave me a vision of what my career could be, and where it could go at a time when I knew I needed something different. Helena saw my talk at Let's Test the following spring, and gave me valuable critical feedback that helped shaped future talks. Maaret introduced me to strong-style pairing, which changed the way I worked with my colleagues to this day. Dan had me on his podcast, reinforcing for me the success of my talk at the following year's TestBash USA. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Write down when you receive a compliment. Maybe it's true. &lt;/p&gt;
&lt;p&gt;~&lt;cite&gt;Helena Jeret-MÃ¤e&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Why am I revisiting my notes from this conference six years later? I might be feeling a bit nostalgic for the seeing-people-in-person events a year into pandemic-induced isolation. I'm also in the middle of reading "Becoming a Technical Leader" by Jerry Weinberg. One of the questions asks you to read an autobiography of someone you admire. It turns out none of the people I shared TestBash NYC with have published autobiographies...yet. &lt;/p&gt;&lt;/div&gt;</description><category>career</category><category>conference</category><category>testbash</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/testbash_nyc_2015/</guid><pubDate>Fri, 26 Feb 2021 23:00:00 GMT</pubDate></item><item><title>When You Can't Help Much, Help A Little</title><link>https://elizabethzagroba.com/posts/2021/when_you_cant_help_much_help_a_little/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;h4&gt;Check that you have time&lt;/h4&gt;
&lt;p&gt;At my current job, everyone in the R&amp;amp;D department gets a budget of two days per month to spend "crafting," or researching, building, testing, etc. what interests them. Most often people use this time to bring work they're passionate about up from the bottom of the backlog to be worked on now.&lt;/p&gt;
&lt;p&gt;I was in the middle of adding a security scanning tool to our CI pipeline when I happened upon something interesting to test: a new web application. An old application that had been widely-used around the company, and as it turns out, with our customers too, had gone down. It allowed you to share a piece of text with a link. The text was only visible once. It wouldn't be viewable subsequent times you followed the link, so the application was good for sending passwords around securely. &lt;/p&gt;
&lt;p&gt;The person who'd built the application had left the company. In inquiring about who/how we might maintain it now, one of the customer support leads mentioned in a public Slack channel that he'd built a replacement. "Great!" I thought. "This is the one day I have an hour to test it." I was waiting for code review feedback on my pipeline scan, so it was perfect timing.&lt;/p&gt;
&lt;h4&gt;Check that the feedback will be heard&lt;/h4&gt;
&lt;p&gt;It's a waste of time and energy (with the latter being in shorter supply these days) to test something if nobody's going to do anything with the results of your testing. More on that in &lt;a href="https://elizabethzagroba.com/posts/2020/2020-05-24_if_a_test_falls_in_a_forest/"&gt;this post&lt;/a&gt;. So I checked with the customer support person first. After taking a quick look at the new application and confirming that it seemed to work, but could use some tweaks, I asked the customer support person in a direct message if he was ready for usability and accessibility feedback. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Me: Hi there, I have a bit of usability and accessibility feedback about the secrets app. Is it at a stage where this feedback would be useful?&lt;/p&gt;
&lt;p&gt;Him: Yes, definitely ð&lt;/p&gt;
&lt;p&gt;Me: Great, I'll send you a Paper doc this afternoon.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Collect the feedback in the same way it will be presented, and present feedback in a way that the audience is comfortable with&lt;/h4&gt;
&lt;p&gt;As much as I love making mindmaps, I decided that might not be the best format in this case. I doubted the customer support lead would bother to download a mind mapping application, company security restrictions prevented me from sharing a web-based one, and I'd probably want to walk him through a mind map I produced. But that felt like too much trouble for something small, plus I didn't want another Zoom call on a day otherwise free from them. &lt;/p&gt;
&lt;p&gt;Instead, I used my company's go-to document tool of choice: Dropbox Paper. I might not enjoy it as much, but I knew it was a way he was used to receiving and collaborating asynchronously. I confirmed that format with him to be sure, and then I got to testing. &lt;/p&gt;
&lt;h4&gt;Share your oracles (reasons why you have feedback)&lt;/h4&gt;
&lt;p&gt;Once I opened a one-time link the application created, there was a page with an animated GIF, the piece of text that was shared, and a button to &lt;code&gt;Copy Value&lt;/code&gt;. My immediate testing notes were something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove GIF/make it stop rotating&lt;/li&gt;
&lt;li&gt;Move button to the top&lt;/li&gt;
&lt;li&gt;Make font bigger&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This customer support lead might have just taken than feedback and made the changes. But since I don't have an existing relationship where I provide feedback about his work, and developing applications is not his normal line of work, I provided more details: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Animated GIFs (that can't be turned off) can trigger people with epilepsy or motion disorders (vertigo for example). &lt;a href="https://www.w3.org/WAI/tips/designing/#provide-controls-for-content-that-starts-automatically"&gt;Here's the W3C guideline on this&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;Move the &lt;code&gt;Copy Value&lt;/code&gt; button above the text you're sharing so it's visible even if the text is ~5000 characters long.&lt;/li&gt;
&lt;li&gt;Increase the font size from the current 14px to 16px for vision-impaired peoeple. The ADA and typography geeks recommend 16, Apple has 17 as their font size. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now the customer support lead  understands why I'm asking for these changes. He can make different decisions than exactly what I've suggested while still addressing the problem I'm reporting. Plus he'll know more for next time he's building something. &lt;/p&gt;
&lt;h4&gt;Acknowledge the limits of the situation&lt;/h4&gt;
&lt;p&gt;Somewhat to my surprise, the customer support lead  started implementing my feedback right away! He took what I said into account, including removing the animated GIF entirely. He appreciated my feedback and wanted me to look at the application again the next day. Unfortunately, the next day was back to a regular work day filled with priorities, pressure, meetings, etc. I told him I wasn't going to have time to test it again. He went ahead and launched a functioning product. &lt;/p&gt;
&lt;h4&gt;Move on&lt;/h4&gt;
&lt;p&gt;While testing the product, another colleague noticed that the application had a larger architecture and setup than strictly what was needed for this particular use-case. Also, the application didn't provide an API for applications instead of humans to be sending around secret links to other humans. I defended the customer support lead: he was doing his best to solve his problem with the tools and skills he had. It wasn't the right time or place to come in at the end of a project that was about to provide value to people (myself included) and announce "this was not the optimal way to build this tool." You don't have to share all the feedback you collect. &lt;/p&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;The next time you're wondering if you should parachute in to test something new, consider these steps: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;check that you have time&lt;/li&gt;
&lt;li&gt;check that the feedback will be heard&lt;/li&gt;
&lt;li&gt;collect the feedback in the same way it will be presented&lt;/li&gt;
&lt;li&gt;present feedback in a way that the audience is comfortable with&lt;/li&gt;
&lt;li&gt;share your oracles (reasons why you have feedback)&lt;/li&gt;
&lt;li&gt;acknowledge the limits of the situation&lt;/li&gt;
&lt;li&gt;move on&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>reporting</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/when_you_cant_help_much_help_a_little/</guid><pubDate>Sat, 13 Feb 2021 23:00:00 GMT</pubDate></item><item><title>Strong Opinions on Test Reporting</title><link>https://elizabethzagroba.com/posts/2021/strong_opinions_on_test_reporting/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/expert.jpg"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;I answered a bunch of questions for a Ministry of Testing Ask Me Anything session on Test Reporting this week. You can witness me filling an hour &lt;a href="https://www.ministryoftesting.com/dojo/lessons/testing-ask-me-anything-test-reporting-elizabeth-zagroba"&gt;here&lt;/a&gt;, or read my answers to the questions we didn't have time for &lt;a href="https://club.ministryoftesting.com/t/ask-me-anything-test-reporting/46827"&gt;here&lt;/a&gt;. Here's a summary of my strongest opinions: &lt;/p&gt;
&lt;h4&gt;1. A test report is not one particular thing.&lt;/h4&gt;
&lt;p&gt;A test report may be written words. It may be a chart. It may be delivered verbally. But I don't have a template, or things I usually include, because:&lt;/p&gt;
&lt;h4&gt;2. A test report should be tailored to your audience.&lt;/h4&gt;
&lt;p&gt;Who should be listening? What do they care about? If you're reporting about your testing to a developer on your team and the CEO of your company, you'll need two different kinds of reports. &lt;/p&gt;
&lt;h4&gt;3. A test report is the beginning of a conversation, not the end.&lt;/h4&gt;
&lt;p&gt;Presenting a test report allows you to gather information on what matters to your stakeholders, involve your team to streamline your process, and reflect on the quality of your testing for yourself. Feed that back into what and how you're going to test next.&lt;/p&gt;
&lt;p&gt;Resources I'd recommend for more on how to report about your testing: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://searchsoftwarequality.techtarget.com/answer/Agile-test-reporting-doesnt-have-to-be-a-headache"&gt;Lisa Crispin on Agile test reporting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lets-test.com/wp-content/uploads/2013/06/Professional-Test-Reporting.pdf"&gt;James Bach on professional test reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fourhourtester.net/exercises/Bugreporting.html"&gt;The Four-Hour Tester on bug reporting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>reporting</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/strong_opinions_on_test_reporting/</guid><pubDate>Fri, 29 Jan 2021 23:00:00 GMT</pubDate></item><item><title>Karen Johnson at CAST 2015</title><link>https://elizabethzagroba.com/posts/2021/karen_johnson_moving_testing_forward_cast_2015/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/karen-johnson.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;I was about to throw away a whole notebook full of conference notes I'd already blogged about. But because I'd already shipped these notes across an ocean and ignored them for a few years, I figured I'd give them a final read first. Luckily I found a few pages of gems. &lt;/p&gt;
&lt;p&gt;Karen Johnson's talk at CAST (The Conference for the Association of Software Testing) in 2015 covered the breath and depth of her experience in the software industry. I've taken on the career coaching role for some colleagues, and so much of what Karen emphasized is what I've been saying to them as they try to advocate for that promotion, discover their next step, or accept that they have done the best they could given the circumstances. &lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/mi5R3mOILrw" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h5&gt;Testers should have a portfolio&lt;/h5&gt;
&lt;p&gt;How do you make your work visible? Particularly when your work is invisible when done well? Tell people about it in standups. Tell your boss at your 1-on-1. Write it down and then share a link the next time it comes up. &lt;/p&gt;
&lt;h5&gt;If you were to do a retro on yourself, what would you want it to be?&lt;/h5&gt;
&lt;p&gt;Karen advocated for giving back to the community, and challenged the gentleman who pointed out this was not strictly part of the job description. "That's just who I am." The senior roles at my current company are often differentiated not by technical prowess, but by building others up. Sharing to a big audience trips people up, but the steady radiating of information in writing, pairing with people to solve problems, and being the go-to person for questions serves to enrich and scale a company more effectively. &lt;/p&gt;
&lt;h5&gt;Where's the gap between what you're doing now and what you want to do?&lt;/h5&gt;
&lt;p&gt;This is something I'm able to concretely address within my company, when I know how the departments are structured and how the job descriptions fit into the org chart. I've made a list (or tasked my colleagues to do this for themselves) comparing their current job description to the one they're aiming for. Next to each item, list what you're already doing to fill that gap, or at least one thing you could be doing in that direction. Sometimes it's a matter of recognizing for yourself how much you already do. &lt;/p&gt;
&lt;h5&gt;Your boss may never be your mentor&lt;/h5&gt;
&lt;p&gt;These talks from &lt;a href="https://www.youtube.com/watch?v=vXIZpe-x4o8"&gt;Marianne Duijst&lt;/a&gt; and &lt;a href="https://www.ministryoftesting.com/dojo/lessons/the-lost-art-of-the-journeyman-martin-hynie"&gt;Martin Hynie&lt;/a&gt; dive into this deeper, but find help where you can get it. &lt;/p&gt;
&lt;h5&gt;In five years you might specialize in something that doesn't exist today&lt;/h5&gt;
&lt;p&gt;I feel a bit silly asking people in 2021 where they see themselves in the future, or even what they want for themselves. Don't feel bad if you don't have it all planned out. &lt;/p&gt;
&lt;h5&gt;How to get promoted&lt;/h5&gt;
&lt;p&gt;Be reliable, dependable, the one to be counted on, and willing to take on more. Who wouldn't want someone like that around all the time?&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Karen says during the talk that she doesn't know what mark she will leave on the testing community. I certainly appreciate this bit of her wisdom. &lt;/p&gt;&lt;/div&gt;</description><category>career</category><category>conference</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/karen_johnson_moving_testing_forward_cast_2015/</guid><pubDate>Sat, 16 Jan 2021 23:00:00 GMT</pubDate></item><item><title>The Flow of Two Exploratory Testing Sessions</title><link>https://elizabethzagroba.com/posts/2020/2020-12-26_flow_of_two_exploratory_testing_sessions/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;The &lt;a href="https://exploratorytesting.org/"&gt;Exploratory Testing Peer Conference&lt;/a&gt; &lt;a href="https://twitter.com/search?q=%23et19&amp;amp;src=typed_query"&gt;#ET19&lt;/a&gt; followed the 2019 Valencia edition of the European Testing Conference. I said something that I pretty immediately forgot in the upheaval when I returned to the office, but it really stuck with &lt;a href="https://twitter.com/charrett"&gt;Anne-Marie Charrett&lt;/a&gt;. I appreciate both that she remembered this at all, and continues to insist that I'm the one who had this stroke of genius when she really brought it to life. Here's the idea: &lt;/p&gt;
&lt;p&gt;It's straightforward to follow one thread or idea through an exploratory testing session. It's not straightforward to decide which path to take, feed information from one path back into another, recognize that there are different paths, or bring others along for this journey. &lt;/p&gt;
&lt;h4&gt;The Ensemble at Work&lt;/h4&gt;
&lt;p&gt;We have a weekly ensemble testing session at my workplace. For an hour and a half, testers from different teams working in the same tech stack come together to share knowledge and build testing skills. In a recent ensemble testing session, a tester on one team brought a ticket they'd been avoiding tackling on their own. They knew they didn't know how to test the fix. But they felt like they'd talked about it enough as a team that they should have understood what to do already. &lt;/p&gt;
&lt;p&gt;We read through the story with the group of testers. We determined that a static code analysis security scan had discovered vulnerabilities in a couple of libraries. The developers had fixed the issue by removing the libraries. It was our mission to make sure those libraries were removed. &lt;/p&gt;
&lt;p&gt;Immediately a plan came to my mind:
1. Map out what kinds of pages there were, assuming that different pages of the same type would be likely to load the same libraries: list view, detail view, landing page, etc. 
1. Look at one of each of those pages with the Network tab open in the developer tools.&lt;/p&gt;
&lt;p&gt;In a quick spirt of excitement, I dumped this idea on the group without figuring out if people knew what either of these things meant. (It turns out, not everyone did.) But everyone seemed to understand that there was somewhere in the developer tools where we could tell which libraries were loaded, so we started there. Exploring in a group is not about getting everyone to follow my idea immediately (&lt;a href="https://www.showingupforracialjustice.org/white-supremacy-culture-characteristics.html"&gt;or ever&lt;/a&gt;), it's about making sure everyone is on board and understands what's going on.&lt;/p&gt;
&lt;p&gt;Proving the absence of a thing is harder than proving the presence of something, so we spent a bit of time looking through the Console and Storage tabs, as well as reloading the page with the Network tab opened, to figure out what appeared where. That helped everyone remember or discover that we didn't need to reload the page if the Network tab was open before the page loaded. This sped us up for the rest of the session.&lt;/p&gt;
&lt;p&gt;Next, we looked at a couple of similar-looking list pages. We searched for the libraries in the Network tab. They weren't there. Now that we'd seen a couple of examples, I decided it was the right time to bring up my original idea of grouping pages by type. (Going from the abstract to the concrete doesn't work for everybody, so sometimes going from the concrete to the abstract works better.) I asked "These last two pages both looked like list pages, what other kinds of pages are there? Can we list them? Should we look at a detail page?" This comment blew the mind of the tester who brought this ticket. They'd been testing this product for two years and had never organized the product this way in their brain. It may not have occurred to them that a product &lt;em&gt;could&lt;/em&gt; be organized in different ways in their thoughts depending on the circumstance. We got as far as listing the concrete pages we'd checked, but not as far as identifying all the types in the abstract before the energy in the ensemble moved on.&lt;/p&gt;
&lt;p&gt;We looked at a detail page. We looked at a settings page. Then one of the testers who's been looking at a lot of front-end Javascript noticed two things: both the URLs we were searching for had &lt;code&gt;ajax&lt;/code&gt; in them, so we only needed to search for one thing on each page we opened. And second, they knew that ajax was used to make changes to pages that had already loaded, so they asked "what kinds of pages change after they're loaded?" In this particular application, it was mostly forms in pop-up windows, so we concentrated our efforts there for the rest of the session. &lt;/p&gt;
&lt;p&gt;The whole session took about an hour and a half. A tester that came in scared and confused left empowered, with information to bring to their developers, and  a plan for how to execute the rest of the testing. Here's one way of looking at our exploratory testing session:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://elizabethzagroba.com/images/posts/2020/work-ensemble.png"&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2020/work-ensemble.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;At every stage, we absorbed a lesson as a group, and used it as our new superpower to make our testing better for the next bit. There were other paths we could have pursued, but many of these weren't consciously mentioned or acknowledged during the session.&lt;/p&gt;
&lt;h4&gt;The Ensemble at the Conference&lt;/h4&gt;
&lt;p&gt;I facilitated a couple of ensemble sessions with groups at Agile Testing Days. Our first emsemble had a couple people drop out, so it ended up being one tester, one developer, and me. We were looking at a &lt;a href="https://eviltester.github.io/TestingApp/apps/7charval/simple7charvalidation.htm"&gt;very straightforward application&lt;/a&gt; from Alan Richardson where you can decide whether a string contains 7 characters and is valid (in the set A-Z, a-z, 0-9, and * ). A few different times the developer and I asked if we should look at the source code. Rather than trying to interrogate the application based on the behavior from different inputs (black box testing), we wanted to go to the source (white box testing). &lt;/p&gt;
&lt;p&gt;But we never did. We kept trying different inputs, getting increasingly creative with order, special characters, Unicode characters, other languages as we progressed. But we never chose a different path. Even as I tried to encourage us to take notes so we wouldn't try the same things we'd already tried, we didn't. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://elizabethzagroba.com/images/posts/2020/atd-ensemble.png"&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2020/atd-ensemble.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We did manage to find a good resource for copying and pasting unicode characters, but we didn't learn how to explore the application more efficiently, or take what we learned earlier in the session to apply it to the rest of the session.&lt;/p&gt;
&lt;h4&gt;The Power of Exploratory Testing&lt;/h4&gt;
&lt;p&gt;Brute force will get you somewhere. Trying enough different inputs, or different pages, and you'll gather more information about how the application works. But the power of exploratory testing comes from learning from your earlier results. It's realizing there are different ways to go, different paths to follow, jumping on one of those while it serves you, and making sure everyone else is along for the ride. &lt;/p&gt;&lt;/div&gt;</description><category>exploratory-testing</category><category>teaching</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2020/2020-12-26_flow_of_two_exploratory_testing_sessions/</guid><pubDate>Fri, 25 Dec 2020 23:00:00 GMT</pubDate></item><item><title>Agile Testing Days 2020</title><link>https://elizabethzagroba.com/posts/2020/2020-11-29_agile_testing_days_2020/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;When you say no to what you don't have the energy for, you leave your time, attention, and devotion free to pursue what keeps you energized. Through a tumult of plans and dreams that only 2020 could continue to crush, the Agile Testing Days crew put on a revitalizing conference. I only caught a glimpse of the preparation that went into providing a top-notch experience for speakers and participants, and I have to commend the group on their commitment to the cause. Bravo.&lt;/p&gt;
&lt;p&gt;The talks were recorded. I've decided to cut myself off on catching up on missed talks after two weeks. Reflecting on what wisdom I've garned from a small subset of the offerings at Agile Testing Days will be more valuable than being exposed to every last word. In that spirit, let me give you a few takeaways in place of an exhaustive recap or analysis. &lt;/p&gt;
&lt;p&gt;Parveen Khan: watch this if you're looking to collaborate&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It is in doing the work that we discover what we must do. &lt;/li&gt;
&lt;li&gt;Don't get stuck when learning something alone; pair. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;JoÃ£o ProenÃ§a: watch this if you need a different direction&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Performing a health check and making a diagnosis are different skills. &lt;/li&gt;
&lt;li&gt;What barriers do we set for ourselves?&lt;/li&gt;
&lt;li&gt;The product is all the pieces the customers see, including the cloud infrastructure (and whatever else your team isn't responsible for). &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Paul Holland &amp;amp; Huib Schoots: watch this if your automation isn't providing valuable information&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The sunk cost fallacy means we're unlikely to get rid of automation code, even if it's ineffective.&lt;/li&gt;
&lt;li&gt;We often fail at getting people to change.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gitte Kligaard talk: watch this if you've been hiding your true self at work&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"I'm just going to rewind." (Possibly my favorite takeaway from this conference, I'm going to use this anytime I trip over my words.)&lt;/li&gt;
&lt;li&gt;Creativity comes when inspired by others.&lt;/li&gt;
&lt;li&gt;Being professional is knowing your craft, and admitting when you don't know.&lt;/li&gt;
&lt;li&gt;Spend time with yourself to listen to yourself.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Alex Schladebeck &amp;amp; Ashley Hunsberger: no recording, but follow these ladies on Twitter for how to balance life and leadership&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tell people what you want. They may be able to help you.&lt;/li&gt;
&lt;li&gt;Have a clear vision of what you want.&lt;/li&gt;
&lt;li&gt;Write down your fear. Ask yourself: Why is this positive? How can I build the courage to do this?&lt;/li&gt;
&lt;li&gt;Be explicit about what you're doing.&lt;/li&gt;
&lt;li&gt;Show how you're working.&lt;/li&gt;
&lt;li&gt;Build a practice of reflection.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Angie Jones: watch this if you need a push to get into automation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Determine your goal first. If you don't know it, you'll definitely fail.&lt;/li&gt;
&lt;li&gt;When you're a leader, celebrate the small victories. &lt;/li&gt;
&lt;li&gt;There's no reason to shame people for being creative and doing the best they can.&lt;/li&gt;
&lt;li&gt;It's not realistic to assume master level by default.&lt;/li&gt;
&lt;li&gt;Find out why developers don't participate in automation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Rob Meaney: watch this if you don't get why observability is important&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We learn profound lessons from painful experiences.&lt;/li&gt;
&lt;li&gt;Build relationships. Influence people at the right time.&lt;/li&gt;
&lt;li&gt;Pain + reflection =&amp;gt; progress&lt;/li&gt;
&lt;li&gt;It doesn't matter how much we test a thing if nobody wants to use it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tobias Geyer: watch this if you're struggling with an ethical dilemna &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Could ethics be a non-functional requirement?&lt;/li&gt;
&lt;li&gt;Read the codes of ethics proposed by the IEEE, ISTQB, ACM, and James Bach.&lt;/li&gt;
&lt;li&gt;A hippocrattic oath for software testing: avoid harm.&lt;/li&gt;
&lt;li&gt;Promote environment sustainability.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Smita Mishra: watch this if you're interviewing users &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Listen to be able to ask clarifying questions and dig deeper. &lt;/li&gt;
&lt;li&gt;Ask users: their objective, what they found, about the impact, where they're struggling, what could make their lives easier.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eveline Moolenaars: watch this if you're learning to coach&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"We have a policy; it's somewhere on the internet" isn't enough.&lt;/li&gt;
&lt;li&gt;"Everyone deserves a coach to make them aware of what they've forgotten." ~Brad Gilbert&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Federico Toledo: watch this if you or those around you are losing steam&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A tester with a sense of purpose is more resilient.&lt;/li&gt;
&lt;li&gt;Focus on strengths more than weaknesses, turning up the good. &lt;/li&gt;
&lt;li&gt;Provide visibility that you're doing something with the feedback.&lt;/li&gt;
&lt;li&gt;Ask people if they're getting what they need.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nicola Sedgwick: watch this if you're the gatekeeper for quality&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Do not correlate your own successes with the quality of the entire system.&lt;/li&gt;
&lt;li&gt;Contract-driven work is not holistic quality.&lt;/li&gt;
&lt;li&gt;Report when there has been no progress.&lt;/li&gt;
&lt;li&gt;Ask for a code walk-through before a build is ready.&lt;/li&gt;
&lt;li&gt;Shift quality left all the way to the executive team.&lt;/li&gt;
&lt;li&gt;Testers were hoarding responsibility for quality. Let it go.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Joep Schuurkes: watch this if (or while) you're stuck in an ineffective meeting&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ask yourself: is my work inside or outside of meetings?&lt;/li&gt;
&lt;li&gt;Get the right group of people in the room before holding a meeting.&lt;/li&gt;
&lt;li&gt;Express specific appreciations for things done well so people will keep doing them.&lt;/li&gt;
&lt;li&gt;Meetings are synchornous collaboration with a purpose.&lt;/li&gt;
&lt;li&gt;Standups should remove impediments.&lt;/li&gt;
&lt;li&gt;The metaphors we choose say something about how we feel about our work.&lt;/li&gt;
&lt;li&gt;Leadership is creating an environment where everyone can contribute to solving a problem. ~Jerry Weinberg&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Clare Norman: watch this if you're truly stuck&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Quality is everyone's care.&lt;/li&gt;
&lt;li&gt;"Success is liking who you are, what you do, and how you do it." ~Maya Angelou&lt;/li&gt;
&lt;li&gt;Your courage quota for the day might vary. &lt;/li&gt;
&lt;li&gt;You don't get better by doing the same thing everyday. &lt;/li&gt;
&lt;li&gt;I didn't know how I needed to be helped.&lt;/li&gt;
&lt;li&gt;You can't drag someone through time.&lt;/li&gt;
&lt;li&gt;We live far less in the present than we ought to.&lt;/li&gt;
&lt;li&gt;How magical is it when people value the change that you're making?&lt;/li&gt;
&lt;li&gt;Passion spreads when other people share in your excitement.&lt;/li&gt;
&lt;li&gt;Have a cheerleader in your life.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/success.png" style="display:block; margin-left: auto; margin-right: auto;" title="Clare Norman channeling Maya Angelou on success"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Clare Norman channeling Maya Angelou on success&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Jenny Bramble: watch this if your tests are failing on expected behavior&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Many defects I filed are never fixed. Unfixed defects become expected behavior.&lt;/li&gt;
&lt;li&gt;Automation has never found a defect. Automation tells us behavior has changed. &lt;/li&gt;
&lt;li&gt;Tests should pass on expected behavior, including some defects.&lt;/li&gt;
&lt;li&gt;Document your tests for others, including your future self.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;James Lyndsay &amp;amp; Anne Colder: watch this if you feel like an impostor &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Acknowledge when you can't help.&lt;/li&gt;
&lt;li&gt;If you could take one step forward, what would you do?&lt;/li&gt;
&lt;li&gt;Talk to your person, or ask a smaller group of people if they have an answer to your problem. &lt;/li&gt;
&lt;li&gt;Forgiveness is one of the most powerful things you can do as a human being.&lt;/li&gt;
&lt;li&gt;After you make a mistake: wallow in it (really feel it first), forgive yourself, then dance.&lt;/li&gt;
&lt;li&gt;Your job title allows other people to figure out how to work with you.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gitte Klitgaard AMA: watch this if you miss the hallway track&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Listen to hear what's being said, not to respond. &lt;/li&gt;
&lt;li&gt;We can't read minds.&lt;/li&gt;
&lt;li&gt;Creating a safe space allows you to feel uncomfortable. &lt;/li&gt;
&lt;li&gt;Silence is a tool. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sophie KÃ¼ster: watch this if you're ready to tell your colleagues your big secret&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There is strength in showing vulnerability.&lt;/li&gt;
&lt;li&gt;People want to help you. Let them. &lt;/li&gt;
&lt;li&gt;Ask yourself: how am I treating myself?&lt;/li&gt;
&lt;li&gt;Anything worth doing is worth doing poorly. Poorly done is better than not done at all. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gitte Klitgaard &amp;amp; Morgan AhlstrÃ¶m: watch this if you want to get psychological safety in the boardroom and on the roadmap&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make time to address psychological safety. Put it on the same level in your team's goals as your product goals. &lt;/li&gt;
&lt;li&gt;We are role models. We lead by example.&lt;/li&gt;
&lt;li&gt;More people were uncomfortable giving than receiving code reviews. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ard Kramer: watch this if you're getting burned out&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Humans have an unrealitic belief in our own influence. &lt;/li&gt;
&lt;li&gt;Performing your testing role doesn't make you popular. &lt;/li&gt;
&lt;li&gt;Most people looking for confirmation that the software is working. To form a logical proof, we look for evidence that the software doesn't work. &lt;/li&gt;
&lt;li&gt;Ask yourself: which circumstances could I control? Did I manage expectations correctly? &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm grateful I got to connect with people who keep me going. I'm grateful Agile Testing Days tried to make this work in person. I'm grateful I was able to drop my workshop instead of abaondoning people in breakout rooms to do something they've never done before. I'm grateful the mobbing session I helped organize and facilitate went smoothly. I'm grateful that my job allows me the time and space to be rejunivated by this all. I'm grateful. ð&lt;/p&gt;&lt;/div&gt;</description><category>agile-testing-days</category><category>conference</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2020/2020-11-29_agile_testing_days_2020/</guid><pubDate>Sat, 28 Nov 2020 23:00:00 GMT</pubDate></item><item><title>Finding relevant search results</title><link>https://elizabethzagroba.com/posts/2020/2020-09-21_finding_relevant_search_results/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;In his crafting time, one of our developers decided to fine-tune our search results. He added relevancy scoring to give weights to different text fields. It was my job to determine if the right results were turning up at the top of the list of search results. So I had to ponder: what made a search result relevant? &lt;/p&gt;
&lt;p&gt;First, I realized that feedback from our users is the best way to answer this question. Anything I could do to get this feature out into production, where we'd get real data about what people searched for, would be more valuable that brainstorming test cases for this feature. I set myself a timebox of two and a half hours, the rest of the afternoon on a day in a week filled with competing priorities. We'd agreed as a team ahead of time that I could determine the testing approach, and our product owner would decide what was or wasn't worth fixing before this feature went out. &lt;/p&gt;
&lt;p&gt;I saved the first 45 minutes of my timebox to research what people had to say about search relevancy. Surely I was not the first person contemplating this problem. Over on the Ministry of Testing Club forum, I found what seemed to be a promising title of a post. &lt;a href="https://club.ministryoftesting.com/t/how-would-you-test-a-search-api/28027"&gt;It turned out a past Elizabeth from a year ago wrote it, and nobody had answered it satisfactorily in the intervening time&lt;/a&gt;. ð¤¦ââï¸&lt;/p&gt;
&lt;p&gt;After Duck-Duck-Go-ing some actual answers, I found a couple of resources from websites I've trusted and found fruitful in the past: &lt;a href="https://alistapart.com/article/testing-search-for-relevancy-and-precision/"&gt;A List Apart&lt;/a&gt; and &lt;a href="https://www.philosophe.com/archived_content/search_topics/search_tests.html"&gt;philosophe.com&lt;/a&gt;. A List Apart suggested honing in on a specific intent, searching for the queries users seek most frequently, and seeing how far those items fall from the top in the search results. The philosophe guidance about testing search gave me something deeper to consider: users shouldn't have to ponder the reasoning behind the search results. That was enough for me to develop some test cases. &lt;/p&gt;
&lt;p&gt;As I searched and adjusted the weights of various fields, plenty of normal things happened: setting the relevancy values to zero meant the result wasn't listed, multiple instances of the same word counted more than a single instance, and giving fields stronger weights caused their results to move up in the rankings. But as a bug magnet, I uncovered things that were both interesting to discover and outside the original scope of the story. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/log-of-zero.png" style="display:block; margin-left: auto; margin-right: auto;" title="Log of zero is negative infinity"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Log of zero is negative infinity&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h4&gt;Bugs&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;I opted to edit data that was already in our test environment rather than setting up completely new data. In doing so, I discovered a couple description fields that were missing an indexing update in the search results when edited through the UI. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I tried to use the default values for everything to see "normal" results. One field was going to add a value to the relevancy rating, so zero seemed like it should be the default option. Unfortunately a couple of the options for the weighting feature transformed the value using the &lt;code&gt;log&lt;/code&gt; and &lt;code&gt;ln&lt;/code&gt; (natural log) functions, which are undefined at zero. All my search results disappeared. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I looked at the data that was already in the database, and used a search term that showed up a lot already. It turned up nothing. I searched for part of the word. That turned up all the results I was expecting. I realized the search term was indexed separately because of the characters we used to break the word apart. Imagine having a bunch of &lt;code&gt;sun-bleached&lt;/code&gt; items, but you can only find them if you search for &lt;code&gt;sun&lt;/code&gt; or &lt;code&gt;bleached&lt;/code&gt;, not &lt;code&gt;sun-bleached&lt;/code&gt;. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Bug 1 the developer agreed was a bug, and we fixed as part of the story. Bug 2 was "working as expected" from a developer point-of-view, but seemed a little weird to the product owner. We meant to look into as part of the story and decide if we should eliminate the log functions as options entirely, but other priorities came crashing down upon before we could. It's out on production to the handful of internal users with access to the relevancy tuning. Bug 3 we added to the backlog, and I hope someday a swarm of user complaints make it a priority for us. &lt;/p&gt;
&lt;h4&gt;Morals&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Users know best.&lt;/li&gt;
&lt;li&gt;Someone else on the internet has had your problem before. &lt;/li&gt;
&lt;li&gt;Report information that matters.&lt;/li&gt;
&lt;li&gt;When the risk is low, let it go. &lt;/li&gt;
&lt;/ol&gt;&lt;/div&gt;</description><category>exploratory-testing</category><category>risk-based-testing</category><category>search</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2020/2020-09-21_finding_relevant_search_results/</guid><pubDate>Sun, 20 Sep 2020 22:00:00 GMT</pubDate></item></channel></rss>