<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elizabeth Zagroba: Software Tester</title><link>https://elizabethzagroba.com/</link><description>Elizabeth Zagroba: Software Tester</description><atom:link href="https://elizabethzagroba.com/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Â© 2021 &lt;a href="mailto:me@elizabethzagroba.com"&gt;Elizabeth Zagroba&lt;/a&gt; Mozilla Public License 2.0</copyright><lastBuildDate>Tue, 18 May 2021 15:53:36 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>The Mental Load of One Meeting</title><link>https://elizabethzagroba.com/posts/2021/the_mental_load_of_one_meeting/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/outlook-calendar-week.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;I facilitated a meeting today. It was scheduled for 45 minutes on my agenda, for me and some other tech and team leads in my unit. We covered what we needed to move forward planning an epic with a set of relatively straightforward stories, both in execution and work distribution among the teams. &lt;/p&gt;
&lt;p&gt;For some of the people attending today, they showed up without preparing, and didn't remember what the topic was. I filled them in. Because this is what the meeting preparation looked like from my side: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;I was in a planning meeting two weeks ago with a variety of people from the unit. I picked up the implication that that follow-up (combination solo thinking/document review followed by meeting) was needed soon with a few tech and team leads. I checked the out of office schedule (that I created and keep updated as people mention when they'll be out) and noticed that two weeks was an achievable time span for "soon". I mentioned this while we were still in that planning meeting. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Within the next 48 hours, two people from the planning meeting asked when I'd scheduled the follow-up. I explained that I was giving the other leads a chance to schedule it first.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When I scheduled the follow-up, I made the title of the Outlook invitation "review the comments you've already added to the document" so the purpose and expectations were both clear and impossible to miss. I added the document to review to the body of the invitation. I let the two inquiring minds that this occurred. I found a couple of 45-minute blocks when all four people present at the planning meeting, plus the one person that had been forgotten, were available simultaneously. I chose the one on Tuesday, giving the person who was out for a week Monday to catch up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I added a Slackbot reminder for Monday afternoon for the person who's out the previous week. They're on my team and typically have trouble saying no when someone tries to pull their focus. We've found that Slackbots help. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The meeting time arrives. The Slackbot reminder person and I have reviewed the document. The others haven't. I check in and ask whether we should hold this meeting after they're available to do so. Silence. I move on, facilitating the discussion, taking notes, and keeping us on track.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;I am not the only person capable of scheduling a meeting. I am not the person best equipped to review this document. It is not my responsibility to come up with systems for my peers to remember to do their work. I can let this fail, just not follow-up, and I do with smaller, safer-to-fail experiments. But it doesn't solve the problem. &lt;/p&gt;
&lt;p&gt;I can't do a better job of explaining &lt;a href="https://english.emmaclit.com/2017/05/20/you-shouldve-asked/"&gt;the burden of carrying the mental load than Emma does in her comic&lt;/a&gt;. But to summarize: a lot of work is the work of noticing what work needs doing. It's the difference between "Let me know if you need help" and finding a way to actually help. It's the difference between having 45 minutes blocked on your calendar, and &lt;a href="https://j19sch.github.io/slides/atd2020-making-meetings-work.html#/"&gt;everything else that had to happen to make it successful&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What I wonder now is: how much is this skill of carrying the mental load noticed? How much is it valued? How do we interview for this skill? How do I train my fellow team members to have it? How do I teach the ownership of a team and a project? How do I get people to ask each other about the next step in picking up the work instead of coming to me to be the dispatcher? How do I make myself, instead of irreplacable, completely replaceable? &lt;/p&gt;&lt;/div&gt;</description><category>humans</category><category>leadership</category><category>mindset</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/the_mental_load_of_one_meeting/</guid><pubDate>Mon, 17 May 2021 22:00:00 GMT</pubDate></item><item><title>The Long Haul</title><link>https://elizabethzagroba.com/posts/2021/the_long_haul/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;I've been both the lead of my team and a tester on that team for a year now. Getting answers, adapting to change, and identifying solutions have completely different time horizons in each of these roles. &lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;Tester experiments&lt;/h4&gt;
&lt;p&gt;Testing experiments can run quickly. A testing experiment might look like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Call an API&lt;/li&gt;
&lt;li&gt;Inspect the output&lt;/li&gt;
&lt;li&gt;Compare that to the specification&lt;/li&gt;
&lt;li&gt;Question whether either or both need changing&lt;/li&gt;
&lt;li&gt;Talk to a developer about the changes&lt;/li&gt;
&lt;li&gt;Update the specification and/or tests&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;All of that happens within minutes or hours, or days if schedules are extremely incompatible and asynchronous communication is failing. I can be confident in the experiment's outcome. I can weigh the relative merits of caring vs. not caring about a particular error response code or required field, and leave my work at work. The next time I see a particular error response, I know what to look for and where changes might be needed. A failing test is evidence that something used to work in a particular way. &lt;/p&gt;
&lt;h4&gt;Team lead experiments&lt;/h4&gt;
&lt;p&gt;Team lead experiments take longer. A team lead experiment might look something more like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Team members complain that it's hard to get their ideas in during refinement.&lt;/li&gt;
&lt;li&gt;I mention this to the talking-dominant team member at a 1-on-1.&lt;/li&gt;
&lt;li&gt;Talking-dominant team member dominates following refinement.&lt;/li&gt;
&lt;li&gt;I remind talking-dominant team member in Slack about our previous conversation.&lt;/li&gt;
&lt;li&gt;Talking-dominant team member spills over their allotted time during big unit meeting.&lt;/li&gt;
&lt;li&gt;I bring both of these instances in our 1-on-1, sharing the consequences (they're the single point of failure, other team members aren't heard) of their actions.&lt;/li&gt;
&lt;li&gt;Talking-dominant team member does it again.&lt;/li&gt;
&lt;li&gt;I ask team member what I can do to help them change their behavior, given that we are both adults in control of our own behavior. They agree that change is their responsibility. We agree that setting their microphone on mute at the start of the meeting would help.&lt;/li&gt;
&lt;li&gt;Talking-dominant team member dominates some of the following refinement, until I remind them to mute, after which other team members have time to think and contribute too.&lt;/li&gt;
&lt;li&gt;I ask talking-dominant team member to set up a Slackbot to send them a reminder to mute their microphone each week before the meeting.&lt;/li&gt;
&lt;li&gt;Other people are able to contribute at the following refinement. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This took place over months. We're not to a point where we have a solution that works every time. I went in with a different hypothesis each time, not knowing when I'd hit on the right one:&lt;/p&gt;
&lt;p&gt;2. I think the talking-dominant team member isn't aware of their behavior.&lt;br&gt;
4. I think the team member has forgotten our first conversation.&lt;br&gt;
6. I think the team member doesn't understand the impact of their behavior.&lt;br&gt;
8. I think the team member hasn't found a tool or a trigger to change their habit.&lt;br&gt;
10. I think the team member needs both a tool and a trigger to change their habit.&lt;/p&gt;
&lt;p&gt;Any of the first four experiments taken by itself looks like a failure. The talking-dominant team member prevents other team members from contributing effectively. It takes me time as a leader to come up with a different hypothesis, try something else, and discover where to go from there. And this was a relatively straightforward issue to assess. Imagine how long it might take to find an effective response to a problem with more variables and more consequences.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I'm also thinking not just about the experiments themselves, but how they might come across to the wider team. For the testing experiment, I could present my results in standup the next day as "I tested it, everything's good" but it's more valuable for everyone if I &lt;a href="https://www.ministryoftesting.com/dojo/lessons/defining-story-completion-as-a-software-tester"&gt;tell a bit more of the story&lt;/a&gt;. In the team lead experiment, I can imagine my team member telling my boss "Elizabeth told me to be quiet" or me telling my boss "The talking-dominant team member is giving room for others to contribute." Telling a slightly longer story of the journey displays my value as a team lead in a better light. &lt;/p&gt;
&lt;p&gt;What experiments are you running right now? Is something that looks or feels like a failure getting you closer to a solution? How long is your time horizon?&lt;/p&gt;&lt;/div&gt;</description><category>career</category><category>critical-thinking</category><category>humans</category><category>leadership</category><category>mindset</category><category>teaching</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/the_long_haul/</guid><pubDate>Fri, 07 May 2021 22:00:00 GMT</pubDate></item><item><title>Questions from Exploratory Week on Writing Exploratory Testing Charters</title><link>https://elizabethzagroba.com/posts/2021/questions_from_exploratory_week_on_writing_exploratory_testing_charters/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/MoT.jpg"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;The Ministry of Testing hosted a week all about exploratory testing. I had the honor and privilege to help shepherd a small group of testers on the path of writing charters for their exploration. The most interesting part for me is where people had questions. It helps me figure out what sunk in, what could use more explanation, and helps me know that I've answered at least one person's burning question. Here are some of the ones I remember from the live Q&amp;amp;A at the end:&lt;/p&gt;
&lt;h4&gt;Q. Do you use the word charter?&lt;/h4&gt;
&lt;p&gt;A. Basically no. I've only heard testers who've specifically dug into this topic use the word charter. Almost all of the people I collaborate with on a daily basis (developers, product owner, UX, managers, other testers) do not have this as part of their experience. Most of my colleagues are not working in their first language. As a native speaker, I need to have more than one word to describe any particular phenomenon in case the first one doesn't resonate, or isn't understandable in my accent. (Everyone has an accent.) I've called charters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;questions&lt;/li&gt;
&lt;li&gt;missions&lt;/li&gt;
&lt;li&gt;paths&lt;/li&gt;
&lt;li&gt;plans&lt;/li&gt;
&lt;li&gt;goals&lt;/li&gt;
&lt;li&gt;investigations&lt;/li&gt;
&lt;li&gt;journeys&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's less important to use the word charter than it is to get across the intent: you're going on an exploration, in a particular direction, with specific set of tools, and you hope to come away with more information on this topic than when you set out. Sharing your charters helps you get feedback about where to look more deeply, more broadly, and &lt;a href="https://elizabethzagroba.com/posts/2020/2020-05-24_if_a_test_falls_in_a_forest/"&gt;where not to look at all&lt;/a&gt;. &lt;/p&gt;
&lt;h4&gt;Q. Where do you bring charters up?&lt;/h4&gt;
&lt;p&gt;A. Where &lt;em&gt;don't&lt;/em&gt; I bring charters up? It bleeds into conversations I have about my work. &lt;a href="https://youtu.be/SM57HMJpkZc?t=974"&gt;Sharing my work and getting feedback about it is what ensures I'm providing valuable work for my team in the right direction&lt;/a&gt;. I tend to discover points of interest for my developers once or twice a day when development is starting, and more often when testing is at its peak, which often escalates to pairing. Here are some other moments in time where I share charters: &lt;/p&gt;
&lt;h5&gt;Standup&lt;/h5&gt;
&lt;p&gt;It's how I explain what I tested yesterday, what pieces I might have time for today, and what directions I haven't or won't have time for before we want to release the story. Sharing where I'm looking prevents me from being the one gatekeeper on quality for our product. "I've successfully called the API as an admin user and a regular user. Today I'm going to dig into what happens with the non-required fields." will solicit a completely different type of feedback than "I have an hour or two left on this story."&lt;/p&gt;
&lt;h5&gt;Refinement&lt;/h5&gt;
&lt;p&gt;Any clues I can give my team about what I'll be looking into, what kind of test data I might set up, and what tools I'll be using to test a particular feature will help them figure out the whole scope of the story. "I'm going to try names at the character limit to see how they wrap on the page." helps us all figure out that we need to talk about our expectations for a character limit, we need to talk to UX about what should happen when you try to input something too long, I need to test what happens on the API side for the same field, and we might need a frontend dev to help us with the wrapping or truncation depending on what UX decides.&lt;/p&gt;
&lt;h5&gt;Testing starts executing&lt;/h5&gt;
&lt;p&gt;This is the point in time where there's enough built that I can add test execution to the setup and planning I've already been doing on a story. It might be that the API spec is published, it might be that the application has one happy path built. The developers are still going, but there's somewhere for me to start. Depending on the size and complexity of the story, I'll reflect for myself, or share my ideas with someone else on the team. If it involves an integration with another team, I'd reach out to them too. &lt;/p&gt;
&lt;h4&gt;Q. Isn't that just a test case?&lt;/h4&gt;
&lt;p&gt;A. After almost two hours of technical difficulties and explaining things, I have to say I did not write the most elegant charter as an example during the workshop. You got me! I'm glad that this workshop participant has a good feel for what is too specific or too broad. I find this so hard to explain because so much of that depends on the context. &lt;/p&gt;
&lt;p&gt;But it wasn't terribly important to me to get the level of detail correct. Charters are a place to reflect on your testing and spark conversation. This charter did exactly that. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;You can find other questions there weren't time for during the workshop on the &lt;a href="https://club.ministryoftesting.com/t/wander-with-a-purpose-writing-charters-for-your-exploratory-test-sessions/49746"&gt;Ministry of Testing club&lt;/a&gt;. The &lt;a href="http://ezagroba.github.io/charters"&gt;slides from the workshop are on github&lt;/a&gt;. &lt;/p&gt;&lt;/div&gt;</description><category>charters</category><category>exploratory-testing</category><category>risk-based-testing</category><category>teaching</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/questions_from_exploratory_week_on_writing_exploratory_testing_charters/</guid><pubDate>Fri, 30 Apr 2021 22:00:00 GMT</pubDate></item><item><title>My First Agile Testing Days: Four Years Later</title><link>https://elizabethzagroba.com/posts/2021/agile_testing_days_2017/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;After years of getting rejected, the talk I submitted to Agile Testing Days in 2017 finally got me accepted. It was such a privilege and an honor to meet so many of the people I'd only know from the internet. Reading through my notes now, much of what I wrote down has become engrained into how I go about my work everyday. What a blessing it was to encounter the people I needed to learn from in my career at the time I needed to learn from them. I'm glad to see how routine their wisdom has become for me.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/lisihocke"&gt;Lisi Hocke&lt;/a&gt; gave a talk about growth. I've since seen more of her talks and prepared a workshop with her; I see how she embodies this in her approach to the world. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/NativeWired"&gt;Gitte Klitgaard&lt;/a&gt; reminded me that believing in people will allow them to be better. Stay curious about why people are doing what they do before placing judgment.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/Punkmik"&gt;Kim Knup&lt;/a&gt; spoke about a zero bug policy (not any bugs in your backlog). I was not ready to hear this message at the time, having come from places with years-old products and tens or hundreds of bugs in the backlog. But now I see exactly what she was describing: the psychological relief that comes from less time in JIRA and fewer meetings about priorities.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/katrinaclokie"&gt;Katrina Clokie&lt;/a&gt; pulled up Noah Sussman's reimagining of the testing pyrmaid (lots of small tests, fewer large ones) upside-down as a bug filter. And suddenly, it clicked for me. &lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/alex_schl"&gt;Alex Schladebeck&lt;/a&gt; and &lt;a href="https://twitter.com/huibschoots"&gt;Huib Schoots&lt;/a&gt; challenged me to think on a meta-level about the testing I was doing, to name the skills and techniques I was using. It would help me as I spent the following years sharing exploratory testing skills with other testers.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/ewebber"&gt;Emily Webber&lt;/a&gt; spoke about building trust on teams. I find myself recommending the &lt;a href="https://emilywebber.co.uk/the-team-manual-a-exercise-to-help-build-empathy-in-teams/"&gt;team manual&lt;/a&gt; she developed to somebody about once a month, plus she helped spark an idea for a future conference talk I developed.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/lunivore"&gt;Liz Keogh&lt;/a&gt; gave me the words I needed to build a safe-to-fail environment for my team members, where failure is an expected, inevitable part of complex systems. &lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;I realized in compiling this blog post that I'd already written about Agile Testing Days just one month after I'd attended in 2017. At that point, I was looking specifically at regression testing advice, which is what I was in the thick of at work. What am I in the thick of now, and when will it become clear to me?&lt;/p&gt;&lt;/div&gt;</description><category>agile-testing-days</category><category>conference</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/agile_testing_days_2017/</guid><pubDate>Sat, 10 Apr 2021 22:00:00 GMT</pubDate></item><item><title>Recently Encountered Logical Fallacies</title><link>https://elizabethzagroba.com/posts/2021/recently_encountered_logical_falacies/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/statue.jpg"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;I was on &lt;a href="https://www.ministryoftesting.com/dojo/lessons/discussion-critical-thinking"&gt;a panel about critical thinking for the Ministry of Testing&lt;/a&gt; last week. One of my fellow panelists and commendable ranter &lt;a href="https://twitter.com/Maaikees"&gt;Maaike Brinkoff&lt;/a&gt; brought up &lt;em&gt;ad hominem&lt;/em&gt; (personal) attacks as one example of a failure of critical thinking. It's one of many &lt;a href="https://fallacyinlogic.com/"&gt;logical fallacies&lt;/a&gt; that are worth exploring further. &lt;/p&gt;
&lt;p&gt;Equipping yourself with the name for a thing helps you recognize it when it appears. (Lara Hogan wrote recently about applying the skill, of &lt;a href="https://leaddev.com/communication-relationships/skill-naming-whats-happening-room"&gt;being able to name the problem in the room&lt;/a&gt;, to defuse tense meetings.) These are some of the fallacies I've across recently when I've been debriefing testing sessions, facilitating refinement sessions, and reviewing conference submissions.&lt;/p&gt;
&lt;h4&gt;Affirming the consequent&lt;/h4&gt;
&lt;p&gt;Affirming the consequent is applying a conditional without the conditionality, or assuming something happened because you see a result. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If P (I run the pipeline) then Q (the latest build will be available on the test environment)&lt;/li&gt;
&lt;li&gt;Q (the latest build is available on the test environment)&lt;/li&gt;
&lt;li&gt;Therefore P (I ran the pipeline) &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We can't assume the converse: if Q, then P. Just because the latest build is on the test environment doesn't mean I ran the pipeline. Maybe someone else ran the pipeline, or put the build there manually. Maybe there haven't been any changes since yesterday, and the build from yesterday is still the latest one.&lt;/p&gt;
&lt;h4&gt;Fallacy of composition&lt;/h4&gt;
&lt;p&gt;This assumes that something that applies to one member of a class applies to them all.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Y is part of X (Stephanie is an admin user)&lt;/li&gt;
&lt;li&gt;Y has property P (Stephanie can see this page)&lt;/li&gt;
&lt;li&gt;X has property P (any admin user can see this page)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We can't assume that what's true for one member of a class applies to all of them. What happens if Stephanie can be assigned more than one role, a more restrictive/regular user role in addition to the admin role? Can she still see it? What if Stephanie being able to see the page has nothing to do with her status as an admin user?&lt;/p&gt;
&lt;h4&gt;&lt;em&gt;Post hoc ergo propter hoc&lt;/em&gt; (correlation without causation)&lt;/h4&gt;
&lt;p&gt;This one is easiest to see when others are debreifing their testing to me, but I've also learned to catch for myself. &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Event A occurred (I clicked the button)&lt;/li&gt;
&lt;li&gt;Then event B occurred (a whole bunch of log messages appeared)&lt;/li&gt;
&lt;li&gt;Therefore A caused B (clicking the button caused a whole bunch of log messages)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We can't assume that events that occur in a particular sequence in time are necessarily causal. Did clicking the button trigger the log messages? What do the log messages say? Did you read them? Who else could be using this environment? Does the same thing happen every time you click the button, or when you run the application in a different environment? &lt;/p&gt;
&lt;h4&gt;Argument from repetition&lt;/h4&gt;
&lt;p&gt;When someone says the same thing enough times, or brings up the same unimportant issue in a refinement meeting week after week, it can become easier to address the issue rather than convincing them yet again why it's not a priority. I've been facilitating refinement meetings every week for my teams for the past two years. &lt;a href="https://butyoudontlooksick.com/articles/written-by-christine/the-spoon-theory/"&gt;I only have a finite amount of energy&lt;/a&gt; that is not always worth expending by refuting the case for a small edge case week after week. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Shoutout to my logic professor Dan Cohen at Colby College, who had us memorize and distinguish logical fallacies as part of his brilliant Logic and Argumentation course, and pointing out that an ease and comfort with truth tables would translate well to a computer science course. Special thanks to Joep Schuurkes for his philosophical and technological opinions on this piece.&lt;/p&gt;&lt;/div&gt;</description><category>critical-thinking</category><category>logic</category><category>naming</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/recently_encountered_logical_falacies/</guid><pubDate>Tue, 30 Mar 2021 22:00:00 GMT</pubDate></item><item><title>TestCraftCamp: Spice Up Your Relationship (with Your Project)</title><link>https://elizabethzagroba.com/posts/2021/testcraftcamp_spice_up_your_relationship_with_your_project/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/tcc-mar-2021.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;&lt;a href="https://testcraftcamp.nl/"&gt;TestCraftCamp&lt;/a&gt;, the unconference I co-organize, had its third installment yesterday. I'm glad I had enough energy to attend more sessions this time, though of course the "too many good things happen at once" problem remained, as it does with any valuable conference. I was able to join a discussion &lt;a href="https://twitter.com/maaretp"&gt;Maaret PyhÃ¤jÃ¤rvi&lt;/a&gt; (who is so often a driving force behind gatherings like these) about low and high value work, a discussion Joep Schuurkes led on daily writing practices, part of a session &lt;a href="https://twitter.com/witchofthetest"&gt;Veerle Verhagen&lt;/a&gt; hosted on testing without touching (before I realized I'd spent too long looking at the product under test already), as well as finding some of my brethren in between the sessions. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I took notes in a sprawling mind map for another session Veerle hosted, which she pitched as "spicing up your long-term relationship! (with your project)." Besides the memorable pitch, I was excited to see this topic on the schedule for a couple reasons:&lt;/p&gt;
&lt;p&gt;First, I've been working on my current product for two years. Some new people have joined the project recently, and having to explain and document the intricacies of our product keeps giving me new reasons to question the decisions we've made as the product has been developed. &lt;/p&gt;
&lt;p&gt;Second, I don't think this it's something we typically acknowledge: our skills can get stale and our motivation can wane when we've developed a certain level of comfort and mastery with a particular team and product. Even without changing jobs or teams, it can be worthwhile to shake things up. &lt;/p&gt;
&lt;p&gt;On my project, adding permanent designers and engineers to the team is shaking things up. The hive mind in the session came up with many other ways to get new people involved in testing, if temporarily: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hold a bug hunt or an &lt;a href="https://www.lisihocke.com/2021/02/ensemble-is-the-new-mob.html"&gt;ensemble&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;teach an intern&lt;/li&gt;
&lt;li&gt;swap products with another tester&lt;/li&gt;
&lt;li&gt;bring your product to a meetup&lt;/li&gt;
&lt;li&gt;pay for &lt;a href="https://www.hackerone.com/product/bounty"&gt;crowdsourced testing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I collected a sprawling list of people's ideas for how you as an individual can gain perspective and change the way you're looking at your work. Taking notes on a multi-faceted conversation is hard, and in reviewing them, I realize they fall better into these groups: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;identify the assumptions you've built over time (which aren't true? which can be discarded? what's hard to talk about? how can I change perspective?)&lt;/li&gt;
&lt;li&gt;think about risks (&lt;a href="https://testobsessed.com/2006/12/the-nightmare-headline-game-planning-for-the-unexpected/"&gt;nightmare headlines&lt;/a&gt;, investigate competitors, talk to users, &lt;a href="https://www.ministryoftesting.com/testsphere/riskstorming"&gt;riskstorming&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;use different testing personas (extreme conditions, &lt;a href="https://www.logigear.com/logi_media_dir/Documents/whitepapers/soap_opera_testing.pdf"&gt;soap operas&lt;/a&gt;, &lt;a href="https://www.stickyminds.com/article/10-exploratory-testing-tours-you-can-use-analyze-artifacts"&gt;testing tours&lt;/a&gt;, dogfooding/drinking your own champagne, &lt;a href="https://theuserisdrunk.com/"&gt;this&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;step back (take a break, go on vacation, switch projects)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a counterpoint, the group in the session did acknowledge that reaching a point of comfort and mastery can be a good thing. (See chapter 4 of &lt;a href="https://leanpub.com/becomingatechnicalleader"&gt;Jerry Weinberg's Becoming a Technical Leader&lt;/a&gt; for more on plateaus and ravines.) After months or years on a project, you'll know where to look first for what your developers typically miss. You'll know what's not worth testing. In Veerle's case, the application has been getting 5-star reviews, which provides one positive angle on product quality. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Thanks so much to the facilitators, participants, and other organizers of TestCraftCamp. It's so fulfilling to get to the end of a long day and hear that we created a "safe environment," people who were only planning to stay for the morning lasted all day, and people were able to take breaks when they needed to. I'm glad we were able to fill others back up with energy. &lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>note-taking</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/testcraftcamp_spice_up_your_relationship_with_your_project/</guid><pubDate>Sat, 13 Mar 2021 23:00:00 GMT</pubDate></item><item><title>TestBash NYC 2015: A Push in the Right Direction</title><link>https://elizabethzagroba.com/posts/2021/testbash_nyc_2015/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/testbash-nyc.jpg"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;In 2015 when TestBash came to the United States for the first time, it was to New York. I was living in the city, but I was stuck at a job that wouldn't pay for a ticket. "Ask Rosie if you can volunteer," my mentor/sponsor/benefactor Martin Hynie suggested. Rosie, who I knew only as the lady who'd mailed me Ministry of Testing stickers from England for...no reason at all, obviously let me in.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;People ask "can we do it?" instead of asking "should we do it?"&lt;/p&gt;
&lt;p&gt;~&lt;cite&gt;Keith Klain&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I got to crash the speakers dinner. I got to go to Selena Delesie's workshop about leadership and change. At the end of the day, she praised my active participation and thanked me for being in her workshop. I was already confident in my testing skills, but she helped me see myself as a potential leader. In a follow-up coaching session I had with Selena about negotiating a higher salary, she asked me why I wanted more money. I'd recently moved into an apartment by myself, and couldn't think of what I would do with more money. It's something I think about with every job change, every growth in title and responsibility. Realizing I didn't want or need more money was a crucial step on the path to life-changing relocation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The common denominator in all your dysfunctional relationships is you.&lt;/p&gt;
&lt;p&gt;~&lt;cite&gt;Keith Klain&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;During a break between talks the following day, I snuck on stage wearing "the" Ministry of Testing tutu. During another, I wrote a bunch of notes to give a 99-second talk about leaving a closing comment on a story (which I completely forgot about, &lt;a href="https://www.ministryoftesting.com/dojo/lessons/defining-story-completion-as-a-software-tester"&gt;before later writing on this topic for the Dojo&lt;/a&gt;). While waiting on stage behind dozens of people waiting to give their 99-second talks, I improvised one about moonwalking instead.&lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2021/99-second-talk.jpg" style="display:block; margin-left: auto; margin-right: auto;" title="The 99-second talk I didn't give"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;The 99-second talk I didn't give&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I met Helena Jeret-MÃ¤e, Maaret PyhÃ¤jÃ¤rvi, Dan Ashby, who along with the conference friendships I was just beginning to foster, gave me a vision of what my career could be, and where it could go at a time when I knew I needed something different. Helena saw my talk at Let's Test the following spring, and gave me valuable critical feedback that helped shaped future talks. Maaret introduced me to strong-style pairing, which changed the way I worked with my colleagues to this day. Dan had me on his podcast, reinforcing for me the success of my talk at the following year's TestBash USA. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Write down when you receive a compliment. Maybe it's true. &lt;/p&gt;
&lt;p&gt;~&lt;cite&gt;Helena Jeret-MÃ¤e&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Why am I revisiting my notes from this conference six years later? I might be feeling a bit nostalgic for the seeing-people-in-person events a year into pandemic-induced isolation. I'm also in the middle of reading "Becoming a Technical Leader" by Jerry Weinberg. One of the questions asks you to read an autobiography of someone you admire. It turns out none of the people I shared TestBash NYC with have published autobiographies...yet. &lt;/p&gt;&lt;/div&gt;</description><category>career</category><category>conference</category><category>testbash</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/testbash_nyc_2015/</guid><pubDate>Fri, 26 Feb 2021 23:00:00 GMT</pubDate></item><item><title>When You Can't Help Much, Help A Little</title><link>https://elizabethzagroba.com/posts/2021/when_you_cant_help_much_help_a_little/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;h4&gt;Check that you have time&lt;/h4&gt;
&lt;p&gt;At my current job, everyone in the R&amp;amp;D department gets a budget of two days per month to spend "crafting," or researching, building, testing, etc. what interests them. Most often people use this time to bring work they're passionate about up from the bottom of the backlog to be worked on now.&lt;/p&gt;
&lt;p&gt;I was in the middle of adding a security scanning tool to our CI pipeline when I happened upon something interesting to test: a new web application. An old application that had been widely-used around the company, and as it turns out, with our customers too, had gone down. It allowed you to share a piece of text with a link. The text was only visible once. It wouldn't be viewable subsequent times you followed the link, so the application was good for sending passwords around securely. &lt;/p&gt;
&lt;p&gt;The person who'd built the application had left the company. In inquiring about who/how we might maintain it now, one of the customer support leads mentioned in a public Slack channel that he'd built a replacement. "Great!" I thought. "This is the one day I have an hour to test it." I was waiting for code review feedback on my pipeline scan, so it was perfect timing.&lt;/p&gt;
&lt;h4&gt;Check that the feedback will be heard&lt;/h4&gt;
&lt;p&gt;It's a waste of time and energy (with the latter being in shorter supply these days) to test something if nobody's going to do anything with the results of your testing. More on that in &lt;a href="https://elizabethzagroba.com/posts/2020/2020-05-24_if_a_test_falls_in_a_forest/"&gt;this post&lt;/a&gt;. So I checked with the customer support person first. After taking a quick look at the new application and confirming that it seemed to work, but could use some tweaks, I asked the customer support person in a direct message if he was ready for usability and accessibility feedback. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Me: Hi there, I have a bit of usability and accessibility feedback about the secrets app. Is it at a stage where this feedback would be useful?&lt;/p&gt;
&lt;p&gt;Him: Yes, definitely ð&lt;/p&gt;
&lt;p&gt;Me: Great, I'll send you a Paper doc this afternoon.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Collect the feedback in the same way it will be presented, and present feedback in a way that the audience is comfortable with&lt;/h4&gt;
&lt;p&gt;As much as I love making mindmaps, I decided that might not be the best format in this case. I doubted the customer support lead would bother to download a mind mapping application, company security restrictions prevented me from sharing a web-based one, and I'd probably want to walk him through a mind map I produced. But that felt like too much trouble for something small, plus I didn't want another Zoom call on a day otherwise free from them. &lt;/p&gt;
&lt;p&gt;Instead, I used my company's go-to document tool of choice: Dropbox Paper. I might not enjoy it as much, but I knew it was a way he was used to receiving and collaborating asynchronously. I confirmed that format with him to be sure, and then I got to testing. &lt;/p&gt;
&lt;h4&gt;Share your oracles (reasons why you have feedback)&lt;/h4&gt;
&lt;p&gt;Once I opened a one-time link the application created, there was a page with an animated GIF, the piece of text that was shared, and a button to &lt;code&gt;Copy Value&lt;/code&gt;. My immediate testing notes were something like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remove GIF/make it stop rotating&lt;/li&gt;
&lt;li&gt;Move button to the top&lt;/li&gt;
&lt;li&gt;Make font bigger&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This customer support lead might have just taken than feedback and made the changes. But since I don't have an existing relationship where I provide feedback about his work, and developing applications is not his normal line of work, I provided more details: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Animated GIFs (that can't be turned off) can trigger people with epilepsy or motion disorders (vertigo for example). &lt;a href="https://www.w3.org/WAI/tips/designing/#provide-controls-for-content-that-starts-automatically"&gt;Here's the W3C guideline on this&lt;/a&gt;. &lt;/li&gt;
&lt;li&gt;Move the &lt;code&gt;Copy Value&lt;/code&gt; button above the text you're sharing so it's visible even if the text is ~5000 characters long.&lt;/li&gt;
&lt;li&gt;Increase the font size from the current 14px to 16px for vision-impaired peoeple. The ADA and typography geeks recommend 16, Apple has 17 as their font size. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now the customer support lead  understands why I'm asking for these changes. He can make different decisions than exactly what I've suggested while still addressing the problem I'm reporting. Plus he'll know more for next time he's building something. &lt;/p&gt;
&lt;h4&gt;Acknowledge the limits of the situation&lt;/h4&gt;
&lt;p&gt;Somewhat to my surprise, the customer support lead  started implementing my feedback right away! He took what I said into account, including removing the animated GIF entirely. He appreciated my feedback and wanted me to look at the application again the next day. Unfortunately, the next day was back to a regular work day filled with priorities, pressure, meetings, etc. I told him I wasn't going to have time to test it again. He went ahead and launched a functioning product. &lt;/p&gt;
&lt;h4&gt;Move on&lt;/h4&gt;
&lt;p&gt;While testing the product, another colleague noticed that the application had a larger architecture and setup than strictly what was needed for this particular use-case. Also, the application didn't provide an API for applications instead of humans to be sending around secret links to other humans. I defended the customer support lead: he was doing his best to solve his problem with the tools and skills he had. It wasn't the right time or place to come in at the end of a project that was about to provide value to people (myself included) and announce "this was not the optimal way to build this tool." You don't have to share all the feedback you collect. &lt;/p&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;The next time you're wondering if you should parachute in to test something new, consider these steps: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;check that you have time&lt;/li&gt;
&lt;li&gt;check that the feedback will be heard&lt;/li&gt;
&lt;li&gt;collect the feedback in the same way it will be presented&lt;/li&gt;
&lt;li&gt;present feedback in a way that the audience is comfortable with&lt;/li&gt;
&lt;li&gt;share your oracles (reasons why you have feedback)&lt;/li&gt;
&lt;li&gt;acknowledge the limits of the situation&lt;/li&gt;
&lt;li&gt;move on&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>reporting</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/when_you_cant_help_much_help_a_little/</guid><pubDate>Sat, 13 Feb 2021 23:00:00 GMT</pubDate></item><item><title>Strong Opinions on Test Reporting</title><link>https://elizabethzagroba.com/posts/2021/strong_opinions_on_test_reporting/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/expert.jpg"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;I answered a bunch of questions for a Ministry of Testing Ask Me Anything session on Test Reporting this week. You can witness me filling an hour &lt;a href="https://www.ministryoftesting.com/dojo/lessons/testing-ask-me-anything-test-reporting-elizabeth-zagroba"&gt;here&lt;/a&gt;, or read my answers to the questions we didn't have time for &lt;a href="https://club.ministryoftesting.com/t/ask-me-anything-test-reporting/46827"&gt;here&lt;/a&gt;. Here's a summary of my strongest opinions: &lt;/p&gt;
&lt;h4&gt;1. A test report is not one particular thing.&lt;/h4&gt;
&lt;p&gt;A test report may be written words. It may be a chart. It may be delivered verbally. But I don't have a template, or things I usually include, because:&lt;/p&gt;
&lt;h4&gt;2. A test report should be tailored to your audience.&lt;/h4&gt;
&lt;p&gt;Who should be listening? What do they care about? If you're reporting about your testing to a developer on your team and the CEO of your company, you'll need two different kinds of reports. &lt;/p&gt;
&lt;h4&gt;3. A test report is the beginning of a conversation, not the end.&lt;/h4&gt;
&lt;p&gt;Presenting a test report allows you to gather information on what matters to your stakeholders, involve your team to streamline your process, and reflect on the quality of your testing for yourself. Feed that back into what and how you're going to test next.&lt;/p&gt;
&lt;p&gt;Resources I'd recommend for more on how to report about your testing: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://searchsoftwarequality.techtarget.com/answer/Agile-test-reporting-doesnt-have-to-be-a-headache"&gt;Lisa Crispin on Agile test reporting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://lets-test.com/wp-content/uploads/2013/06/Professional-Test-Reporting.pdf"&gt;James Bach on professional test reports&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.fourhourtester.net/exercises/Bugreporting.html"&gt;The Four-Hour Tester on bug reporting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>reporting</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/strong_opinions_on_test_reporting/</guid><pubDate>Fri, 29 Jan 2021 23:00:00 GMT</pubDate></item><item><title>Karen Johnson at CAST 2015</title><link>https://elizabethzagroba.com/posts/2021/karen_johnson_moving_testing_forward_cast_2015/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;figure&gt;&lt;img src="https://elizabethzagroba.com/images/posts/2021/karen-johnson.png"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;I was about to throw away a whole notebook full of conference notes I'd already blogged about. But because I'd already shipped these notes across an ocean and ignored them for a few years, I figured I'd give them a final read first. Luckily I found a few pages of gems. &lt;/p&gt;
&lt;p&gt;Karen Johnson's talk at CAST (The Conference for the Association of Software Testing) in 2015 covered the breath and depth of her experience in the software industry. I've taken on the career coaching role for some colleagues, and so much of what Karen emphasized is what I've been saying to them as they try to advocate for that promotion, discover their next step, or accept that they have done the best they could given the circumstances. &lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/mi5R3mOILrw" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h5&gt;Testers should have a portfolio&lt;/h5&gt;
&lt;p&gt;How do you make your work visible? Particularly when your work is invisible when done well? Tell people about it in standups. Tell your boss at your 1-on-1. Write it down and then share a link the next time it comes up. &lt;/p&gt;
&lt;h5&gt;If you were to do a retro on yourself, what would you want it to be?&lt;/h5&gt;
&lt;p&gt;Karen advocated for giving back to the community, and challenged the gentleman who pointed out this was not strictly part of the job description. "That's just who I am." The senior roles at my current company are often differentiated not by technical prowess, but by building others up. Sharing to a big audience trips people up, but the steady radiating of information in writing, pairing with people to solve problems, and being the go-to person for questions serves to enrich and scale a company more effectively. &lt;/p&gt;
&lt;h5&gt;Where's the gap between what you're doing now and what you want to do?&lt;/h5&gt;
&lt;p&gt;This is something I'm able to concretely address within my company, when I know how the departments are structured and how the job descriptions fit into the org chart. I've made a list (or tasked my colleagues to do this for themselves) comparing their current job description to the one they're aiming for. Next to each item, list what you're already doing to fill that gap, or at least one thing you could be doing in that direction. Sometimes it's a matter of recognizing for yourself how much you already do. &lt;/p&gt;
&lt;h5&gt;Your boss may never be your mentor&lt;/h5&gt;
&lt;p&gt;These talks from &lt;a href="https://www.youtube.com/watch?v=vXIZpe-x4o8"&gt;Marianne Duijst&lt;/a&gt; and &lt;a href="https://www.ministryoftesting.com/dojo/lessons/the-lost-art-of-the-journeyman-martin-hynie"&gt;Martin Hynie&lt;/a&gt; dive into this deeper, but find help where you can get it. &lt;/p&gt;
&lt;h5&gt;In five years you might specialize in something that doesn't exist today&lt;/h5&gt;
&lt;p&gt;I feel a bit silly asking people in 2021 where they see themselves in the future, or even what they want for themselves. Don't feel bad if you don't have it all planned out. &lt;/p&gt;
&lt;h5&gt;How to get promoted&lt;/h5&gt;
&lt;p&gt;Be reliable, dependable, the one to be counted on, and willing to take on more. Who wouldn't want someone like that around all the time?&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Karen says during the talk that she doesn't know what mark she will leave on the testing community. I certainly appreciate this bit of her wisdom. &lt;/p&gt;&lt;/div&gt;</description><category>career</category><category>conference</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2021/karen_johnson_moving_testing_forward_cast_2015/</guid><pubDate>Sat, 16 Jan 2021 23:00:00 GMT</pubDate></item></channel></rss>