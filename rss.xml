<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elizabeth Zagroba: Software Tester</title><link>https://elizabethzagroba.com/</link><description>Elizabeth Zagroba: Software Tester</description><atom:link href="https://elizabethzagroba.com/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>¬© 2020 &lt;a href="mailto:me@elizabethzagroba.com"&gt;Elizabeth Zagroba&lt;/a&gt; Mozilla Public License 2.0</copyright><lastBuildDate>Sat, 30 May 2020 12:14:33 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Trying Out Open API Editors</title><link>https://elizabethzagroba.com/posts/2020/2020-05-30_trying_out_open_api_editors/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;I was editing an Open API with multiple layers of inheritance recently. I &lt;a href="https://elizabethzagroba.com/posts/2020/2020-04-27_errors_you_might_encounter_while_editing_an_open_api_specification/"&gt;kept  uncovering errors&lt;/a&gt; long after I created them because of the way they display in &lt;a href="https://editor.swagger.io"&gt;editor.swagger.io&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=s9u3mXQZbXI"&gt;This great talk from Lorna Jane Mitchell about Open APIs&lt;/a&gt; made me realize how many other tools I could use to edit these specs. There's a whole list at &lt;a href="https://openapi.tools/"&gt;openapi.tools&lt;/a&gt;. During my crafting days, I resolved to try some new editors. I decided to see what it was like to edit the existing complicated spec, and write a spec we were missing for a very simple API (two GET calls).&lt;/p&gt;
&lt;h3&gt;TL;DR&lt;/h3&gt;
&lt;p&gt;I'm going to use the &lt;a href="https://marketplace.visualstudio.com/items?itemName=42Crunch.vscode-openapi"&gt;Visual Studio Code Open API plugin&lt;/a&gt; to write and navigate through our specs. We're rendering our specs with editor.swagger.io, so I'm going to keep running it through there to confirm they appear as expected for our stakeholders.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Editors&lt;/h3&gt;
&lt;h4&gt;&lt;a href="https://stoplight.io/studio/"&gt;Spotlight Studio&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Lorna mentioned this one in her talk. It's got a web editor, but I downloaded the Mac client. It's a GUI interface, so rather than writing YAML, it's more like filling out a form. It turns out I would rather write YAML than fill out a form! Good to know.&lt;/p&gt;
&lt;p&gt;The way it organized hierarchy did not suit my mental model for what I was trying to accomplish. I thought about writing a new spec for two GET calls more in a hierarchy (Things both API calls shared. like security &amp;gt; endpoint for the call &amp;gt; parameters). Spotlight Studio grouped adding any new thing into one menu: API, endpoint, parameter, whatever. &lt;/p&gt;
&lt;p&gt;Spotlight Studio has a git integration feature, where you can switch branches within the application. I'd connected it to my remote repo, so it couldn't see the local branch I'd created from my Terminal. When I wanted to save what I had so far (no auto-save??), I found save buried deep inside a menu without a keyboard shortcut to save it. I wasn't interested in changing my workflow to accomodate the tool. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/save-are-you-kidding.png" style="display:block; margin-left: auto; margin-right: auto;" title="Cmd + S it's not that hard"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Cmd + S it's not that hard&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In looking at my existing, complicated API with inheritance, I didn't find a way to see everything in the same view. You had to click through to see inherited sections. Viewing descriptions required a mouse hover. &lt;/p&gt;
&lt;p&gt;The final straw for Spotlight Studio was the error panel. Although thoughfully displayed to be informative without alarming, the line numbers didn't reflect where the issue was. &lt;/p&gt;
&lt;p&gt;Overall: The GUI was getting in my way rather than helping me. Pass.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://senya.io/"&gt;Senya&lt;/a&gt; for IntelliJ and &lt;a href="https://github.com/RepreZen/KaiZen-OpenAPI-Editor"&gt;Kaizen&lt;/a&gt; for Eclipse&lt;/h4&gt;
&lt;p&gt;I couldn't get either of these installed on my Mac! The instructions were essentially "Install from the marketplace, restart the IDE, and it should just work!" My machine enjoys sending me on fruitless adventures in debugging, but I chose to give up on these tools rather than trying to figure it out.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://swagger.io/tools/swaggerhub/"&gt;Swagger Hub&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;SwaggerHub came recommended by my colleague &lt;a href="https://twitter.com/reinouts"&gt;Reinout&lt;/a&gt;, so I signed up for a free trial to give it a shot. I'm still not completely sure if this is within the security guidelines our company has for creating accounts and sharing data with third parties, so I deleted the data I'd put in at the end of my session.&lt;/p&gt;
&lt;p&gt;It's a lot like &lt;a href="https://editor.swagger.io"&gt;editor.swagger.io&lt;/a&gt;, but with more bells and whistles.  It does have a separate error panel, which seems like it would be what I want for my big complicated API. But when I was writing my new API in it, the error panel would pop open to remind me about missing fields whenever it decided to auto-save. Not cool. &lt;/p&gt;
&lt;p&gt;Two and a half hours after confirming my email address to use the product, an account manager reached out to me to find out if I had time for a quick phone call. No, I did not, I was in the middle of trying to ignore your pop-ups while writing my damn API spec! Their Twitter person didn't understand my complaint about the errors that appeared in the panel. The one I tweeted about was trying to tell me that request parameters get labelled individually with &lt;code&gt;required: true&lt;/code&gt; or &lt;code&gt;required: false&lt;/code&gt;, while you can throw all the required response parameters in a list. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/twitter-swagger-hub.png" style="display:block; margin-left: auto; margin-right: auto;" title="Memes will not save you"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Memes will not save you&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Overall: If I had a license, I'd use SwaggerHub to look at existing APIs, but not to write new ones. I didn't look into using it to run a mock server, but I bet that'd be useful.&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://github.com/OAIE/oaie-sketch"&gt;OAIE Sketch&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Have you ever used &lt;a href="https://sequencediagram.org/"&gt;sequencediagram.org&lt;/a&gt; to create a UML diagram and thought "What if this looked more 90's?" Well, you're in luck! OAIE Sketch will make you nostalgic for Windows 95. After cloning the github repo and open the .html file locally (whatever works I guess?), you'll see something like this. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/isnt-she-lovely.png" style="display:block; margin-left: auto; margin-right: auto;" title="üòçüòçüòç"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;üòçüòçüòç&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I liked the way it was built for you to either update the YAML or the visualization, then decide when to push changes to the other side. But I couldn't figure out how to paste in a spec I had somewhere else and get the visualization to update. &lt;/p&gt;
&lt;p&gt;Overall: Might be a good way to think about shared outputs if it updated?&lt;/p&gt;
&lt;h4&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=42Crunch.vscode-openapi"&gt;Visual Studio Code Open API plugin&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This put me back where I started: the plugin for Visual Studio Code. It's got syntax highlighting. (It made me realize that my export from SwaggerHub added &lt;code&gt;style&lt;/code&gt; and &lt;code&gt;explode&lt;/code&gt; fields to my request parameters! &lt;a href="https://swagger.io/docs/specification/serialization/"&gt;I guess I'll save figuring out if I should keep those for another day.&lt;/a&gt;) It's got a schema, so I can navigate around the spec based on how the things are connected without having to remember line numbers. It's got error messaging that is clear enough without being invasive: red squigglies appear on affected lines and red trangles appear next to the line number on the left. They're small enough to ignore if you're in the middle of writing, but easy enough to find and notice without going on for too long. I'm sticking with this.&lt;/p&gt;&lt;/div&gt;</description><category>api-specs</category><category>apis</category><category>open-api</category><category>swagger</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2020/2020-05-30_trying_out_open_api_editors/</guid><pubDate>Fri, 29 May 2020 22:00:00 GMT</pubDate></item><item><title>If a test falls in a forest...</title><link>https://elizabethzagroba.com/posts/2020/2020-05-24_if_a_test_falls_in_a_forest/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;The saying goes "If a tree falls in a forest and no one is around to hear it, does it make a sound?" I have similar question that shapes the way I think about software testing: If a test is performed but no one takes action on the results, should I have performed it? I think not. &lt;/p&gt;
&lt;p&gt;If the answer to "Who cares?" is "No one," don't perform that test. If you're not going to take action on the results of your testing in the coming hours, days, or weeks, don't perform that test. The world around you will change in the meantime, and the old results will not be as valuable.&lt;/p&gt;
&lt;p&gt;One of the &lt;a href="https://www.agilealliance.org/agile101/12-principles-behind-the-agile-manifesto/"&gt;12 Agile Principles&lt;/a&gt; is simplicity, or maximizing the work not done. Testing on an agile team provides information to help decide what work should picked up in the coming iteration(s). But without meaningful collaboration or feedback, testing is a pile of work for no reason. Work is not meant to produce waste. Save your time and your sanity by thoughtfully analyzing what should not be done, and coming to an agreement with your team about it.&lt;/p&gt;
&lt;p&gt;My team gets scared about the quality of our product and skeptical about how I'm using my time when I describe what I'm not testing, or which automated tests I'm not going to run. "But isn't testing your job?" says the look on their faces. "But then what are you going to do?" is what they manage to say. Rather than capitulating for appearances, to just "look busy," I take this as a challenge to make my exploratory testing and other work I'm doing for the team more visible. &lt;/p&gt;
&lt;h4&gt;Risk-based testing&lt;/h4&gt;
&lt;p&gt;In her &lt;a href="https://www.ministryoftesting.com/dojo/series/testbash-home/lessons/reverse-engineer-your-way-to-adopting-a-risk-based-testing-approach-nishi-grover-garg"&gt;TestBash Home talk&lt;/a&gt;, &lt;a href="https://twitter.com/testwithnishi"&gt;Nishi Grover Garg&lt;/a&gt; asked us to think about estimating impact and likelihood (with possible home intruders as an example). I'd have trouble pinning down our no-estimates team on concrete numbers for undesireable software behavior. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/nishi-impact-likelihood.png" style="display:block; margin-left: auto; margin-right: auto;" title="Slide from Nishi's TestBash Home talk"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Slide from Nishi's TestBash Home talk&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;But it does reflect the conversations &lt;a href="http://quality-intelligence.com/documents/DesignBehindthePlan.pdf"&gt;Fiona Charles's test strategy workshop&lt;/a&gt; encouraged me to spark on my team. We do talk about "Yes, this would be a problem, but customers can use this work-around." Or "Yes, we could dive in and investigate whether than could ever happen, but is that more important than picking up the next story?" Being able to identify risks and have thoughtful conversations about their threat to stakeholders allows us to make informed decisions about how we should be spending our time. In testing, we don't always want the most information, we want to discover the best information about the product as efficiently as we can. &lt;/p&gt;
&lt;h4&gt;Examples from my current project&lt;/h4&gt;
&lt;h5&gt;Cross-browser testing&lt;/h5&gt;
&lt;p&gt;We were preparing our web application for a big marketing presentation. The presenter had Firefox as the default browser on their PC. We had a script of the actions they'd perform on stage, and which pages the audience would see. I happened to find bugs on pages we weren't showing, or in the way the scroll bars behaved in Chrome rather than Firefox on my Mac. &lt;/p&gt;
&lt;p&gt;I did not add these issues as bugs in our tracking system, or dig into them further. I knew that they did not pose a risk for the presentation, and a new design would be coming along before customers would potentially use those pages in Chrome on a Mac.s &lt;/p&gt;
&lt;h5&gt;The pipeline&lt;/h5&gt;
&lt;p&gt;We have a pipeline. It runs the tests we've automated at the API and the browser levels against the build in our test environment. I hoped it would inspire the team to think about what the next step could be: getting the tests to run against before merging into our main line, setting up an environment where we're not dependent on the (shared) test environment, looking at the results to see where our application or tests need to change. &lt;/p&gt;
&lt;p&gt;But we don't look at the results. We don't have alerts, we don't open the page during standup, we don't use them as a reference when we're debugging, we don't have a habit of looking at the results. If we do happen to look at the results, we don't take action on it. Building the stability of our feedback loop is not seen as high-priority a task as building new features. &lt;/p&gt;
&lt;p&gt;We don't need to run this pipeline. It's using up AWS resources. Looking at the long line of red X's on the results page only provides alert fatigue. We would be better served by not running these tests. &lt;/p&gt;
&lt;h5&gt;Minimum viable deadline&lt;/h5&gt;
&lt;p&gt;We promised to deliver a feature to a dependent team by a sadline. (A sadline is a deadline without consequences.) In the week before the sadline, three stories were left. On the first story, I found a mistake the developer declared "superficial" when he was lamenting our lack of &lt;a href="https://katrinatester.blogspot.com/2016/12/the-testing-pendulum-finding-balance-in.html"&gt;deep testing&lt;/a&gt;. He decided to review the automated tests I'd written for the second story. He found a couple of use-cases that would require a very particular set of circumstances to occur. I wanted to encourage the behavior of reviewing the tests and thinking about what they're doing more deeply, so I spent the last hour and a half before a holiday weekend automating these two cases. &lt;/p&gt;
&lt;p&gt;I'd drafted some basic automated tests for the third story, but the last feature went relatively unexplored. I should have used my scant time to test the third story more thoroughly instead. The complicated tests for the second story could have waited until next week. While we would be curious about the results, it would not have stopped our delivery of the feature. I should not have written them. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/far-side-tree-falling.jpg" style="display:block; margin-left: auto; margin-right: auto;" title="Far Side cartoon"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Far Side cartoon&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;You may be scared to say no to testing things that don't matter, where the performance will not reveal any risks or cause any follow-up actions to take place. It may be tempting to spend a bunch of time testing all the things you can think of, and only reporting on the tests that yield meaningful results. &lt;/p&gt;
&lt;p&gt;But life is not about keeping busy. Make your time at work meaningful by executing meaningful work and declining to do things that aren't important right now.&lt;/p&gt;&lt;/div&gt;</description><category>exploratory-testing</category><category>risk-based-testing</category><category>testbash</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2020/2020-05-24_if_a_test_falls_in_a_forest/</guid><pubDate>Sat, 23 May 2020 22:00:00 GMT</pubDate></item><item><title>TestBash Home (Spring 2020)</title><link>https://elizabethzagroba.com/posts/2020/2020-05-03_testbash-home/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;Typing to the people you usually see in person can have the same energy as tweeting at them from across a big room. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ministryoftesting.com/events/testbash-home-2020"&gt;TestBash Home&lt;/a&gt;, put on by the &lt;a href="https://www.ministryoftesting.com/"&gt;Ministry of Testing&lt;/a&gt;, was a 24-hour around-the-world tour of talks, panels, and coaching from the best of the best. I &lt;del&gt;missed&lt;/del&gt; purposely and prudently skipped a big chunk of the schedule to get a good night's sleep and properly absorb what I could attend.&lt;/p&gt;
&lt;p&gt;I was definitely overloaded with places to chat (Slack, the video streaming app Crowdcast, Twitter, or &lt;a href="https://tbhome.herokuapp.com/"&gt;the app built for the occasion&lt;/a&gt;) simultaneously with the video stream, the same way I would be at an in-person conference. I got that same "I want to hang out more but I'm so tired" feeling I get in real life. Though as Gwen correctly noted, this is real life now. &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Cost-Benefit of Automated Tests&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://twitter.com/jrosaproenca"&gt;Jo√£o Proen√ßa&lt;/a&gt; and &lt;a href="https://twitter.com/mgreiler"&gt;Michaela Greiler&lt;/a&gt; weighed the costs and benefits of continually updating and running automated tests. Coming from two different angles (cognitive biases vs. Ph.D.-level number-crunching), they shared a similar quadrant model to make better decisions about your automation.&lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/joao-quadrants.jpg" style="display:block; margin-left: auto; margin-right: auto;" title="Jo√£o's model on my actual TV screen"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Jo√£o's model on my actual TV screen&lt;/span&gt;&lt;/span&gt;
&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/michaela-quadrants.png" style="display:block; margin-left: auto; margin-right: auto;" title="Michaela's model"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Michaela's model&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Jo√£o took a stronger "if it's not providing value, do something about it" approach, whether that's editing the test or deleting it altogether. He asked us to consider: If you were asked to write the same test from scratch today, would you do it the same way? When you need fast feedback, what's the opportunity cost of fixing, or even just running, a particular test? Jo√£o reminded us to ask "what is being tested?" and decide if that still matters before jumping in to fix a failing test. &lt;/p&gt;
&lt;p&gt;Michaela brought a perspective from a much larger software company (Microsoft) than I've worked at before. Her approach left open another option for the fate of tests with questionable value: only run them at certain stages. Only run the tests now where the cost of running them at a later stage is too high. Running tests at the wrong stage can increase false alarms and diagnosis time. Running tests that exercise unchanged code should be avoided. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/michaela-quadrants.png" style="display:block; margin-left: auto; margin-right: auto;" title="Michaela's stages"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Michaela's stages&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Learning &amp;amp; Teaching&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://twitter.com/witchofthetest"&gt;Veerle Verhagen&lt;/a&gt;'s 99-second talk got me rethinking some learning experiences I've had. &lt;/p&gt;
&lt;p&gt;It boiled down to this: learning is easy and teaching is hard. Try everything you've had trouble learning again, but with a better teacher this time. Whoa.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Evil User Stories&lt;/h3&gt;
&lt;p&gt;Every security talk I've heard tells you to look at the &lt;a href="https://owasp.org/www-project-top-ten/"&gt;OWASP Top 10&lt;/a&gt; and make a threat model. &lt;a href="https://twitter.com/Anne_Oikarinen"&gt;Anne Oikarinen&lt;/a&gt; told us what to do next: make an evil user story. If I were a person who made a mistake, shouldn't have access at all, or received more access to the system than anticipated, what would happen? How could we mitigate those risks? &lt;/p&gt;
&lt;p&gt;If your team doesn't know where to start with web security, Anne suggested adding static code analysis tools and exploratory testing to your practice. If you've got outside penetration testers exploring your software, add logging around the issues they trigger so you know better what's happening next time. &lt;/p&gt;
&lt;p&gt;I use the &lt;a href="https://github.com/minimaxir/big-list-of-naughty-strings/blob/master/blns.txt"&gt;big list of naughty strings&lt;/a&gt; to test for security vulnerabilities I don't always completely understand. Anne also recommended &lt;a href="https://www.hacker101.com/"&gt;Hacker 101&lt;/a&gt;, a free class about web security. &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Live Coaching&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://twitter.com/workroomprds"&gt;James Lyndsay&lt;/a&gt;'s coaching session reminded me how valuable gathering information and stepping back to ask "what will I learn by performing this test?" are when you're stuck. I've got to go back to my notes from a workshop I took with him a couple years ago to reinforce some of these lessons for myself.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Continuous Delivery Survival Guide&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://twitter.com/amyjph"&gt;Amy Phillips&lt;/a&gt; might be the first person I met where neither of us could remember if we'd met in person before, or if we just knew each other from Twitter. Her talk about surviving continuous delivery from 2017 lives on an essential onboarding guide for testers today.&lt;/p&gt;
&lt;p&gt;Amy wants you to have enough context about your new team and their values before you jump into ideas about what you could change. People probably won't come to you to hand things over for the testing phase, so you have to figure out for yourself where you fit into their process. Amy recommended what I think of as "digital archaeology": reading through all the team artifacts to get a sense of their culture. Even if you don't get write access, looking at the customer support tickets, team backlog, and git commits can show you how the team actually works, rather than how they tell you they should work.&lt;/p&gt;
&lt;p&gt;Amy really made me laugh when she described learning about the different development environments. Ask what the developers use. Ask what sales uses. Ask how many environments there are, how they're different, and what people's expectations are around them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can ask questions without knowing what a good answer is.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Even without knowing how to implement something, you can ask questions about it to trigger developers' wheels to start turning. Looking at the structure of the code and what's been changed may give you ideas about what hasn't been covered.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Burnout&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://twitter.com/maryamumar"&gt;Maryam Umar&lt;/a&gt; spoke about being burned out from juggling too many priorities, combined with unmedicated anxiety. Maryam called out how difficult it can be to start from scratch and build a support network when you relocate. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/failure-garden.jpg" style="display:block; margin-left: auto; margin-right: auto;" title="Seemed appropriate to watch this one from the garden"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Seemed appropriate to watch this one from the garden&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I worried a lot about building a support network before I relocated, but not much since. I'm so glad I've been able to recognize the "this is too much" feeling for myself. Saying no to big but overwhelming opportunities has left space in my life for things I know I want, and greener pastures I couldn't have imagined. &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Leadership&lt;/h3&gt;
&lt;p&gt;This leadership panel made me want to have &lt;a href="https://twitter.com/nicolasedgwick"&gt;Nicola Sedgwick&lt;/a&gt;, &lt;a href="https://twitter.com/testchick"&gt;Alessandra Moreira&lt;/a&gt;, and &lt;a href="https://twitter.com/SheyMouse"&gt;Shey Compton&lt;/a&gt; in my corner as I transition to a manager position. Obviously (to me at this point in my career and after various other trainings I've participated in) leaders do not have to be people managers, and vice versa. People need to give you permission to lead them. Leaders have a vision they can communicate up and down the chain of command. &lt;/p&gt;
&lt;p&gt;The best way to be a leader is to lead by example. Sponsor other people at your organization who you see can be better leaders. Having the technical chops will allow people to believe in your value. It's easy for testers to underestimate our ability to influence behavior, but bug advocacy is a lot about that. &lt;/p&gt;
&lt;p&gt;Nicola's framework for sharing feedback is something I'm defintely going to try in a 1-on-1 meeting this week: share an observation, recount the accompanying behavior, and describe the impact. &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Morale&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://twitter.com/jennydoesthings"&gt;Jenny Bramble&lt;/a&gt; spoke about bad and good metrics, specifically that morale was the only good one. Morale encompasses psychological safety, emotional health, contentment, pride, deilght, and core values. It's hard to measure, but that also means it's hard to game. &lt;/p&gt;
&lt;p&gt;If your team isn't one where people can have negative emotions, disagree, or talk about mistakes or risks, you're doing it wrong. Genuinely asking people how it's going and taking action on the results is the best thing you can do to improve morale. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/survey-questions.png" style="display:block; margin-left: auto; margin-right: auto;" title="Possible survey questions to help measure morale"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Possible survey questions to help measure morale&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I look forward to Jenny's proposed next talk about the oral history of bugs on teams. &lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Titles&lt;/h3&gt;
&lt;p&gt;I'd seen this talk from &lt;a href="https://twitter.com/vds4"&gt;Martin Hynie&lt;/a&gt; on the Ministry of Testing Dojo, and worked with Martin in the past. So I was expecting to be reminded that testing isn't a straightforward observe -&amp;gt; evaluate -&amp;gt; report operation. I'd seen him take on challenges  outside the perceived role of tester, and I'd done so myself. I knew that it's easier to create a good artifact if you start by creating an imperfect one and ask people to correct it, rather than starting from scratch. &lt;/p&gt;
&lt;p&gt;My biggest takeaway was in the Q&amp;amp;A: Someone's association and past experiences of people with my job title are more meaningful than the job title itself in setting up my working relationship with them.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Optimism&lt;/h3&gt;
&lt;p&gt;My favorite 99-second talk from the second set was &lt;a href="https://twitter.com/jen_kitson"&gt;Jen Kitson&lt;/a&gt;'s about optimism. While we discover and often have to report a lot of bad news as testers, optimism is essential to testing. We notice things, report bugs, and pushing for fixes because we can imagine a world that can be better. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I'm so glad I got to attend TestBash Home. I would listen to &lt;a href="https://twitter.com/TesterFromLeic"&gt;Vernon Richards&lt;/a&gt; talk about sports balls I don't understand. &lt;a href="https://twitter.com/gwendiagram"&gt;Gwen Diagram&lt;/a&gt; gives me life and energy in a way that I cannot fully explain. There were people I got to see or chat with that I haven't encountered for months, or years, and it felt good. It felt like home. &lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>testbash</category><category>testbinge</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2020/2020-05-03_testbash-home/</guid><pubDate>Sat, 02 May 2020 22:00:00 GMT</pubDate></item><item><title>Errors You Might Encounter While Editing an Open API Specification</title><link>https://elizabethzagroba.com/posts/2020/2020-04-27_errors_you_might_encounter_while_editing_an_open_api_specification/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;One of the tasks for my team last week was updating an existing GET API call in our specification with some new fields. The &lt;a href="https://swagger.io/specification/"&gt;Open API Specification&lt;/a&gt;, formerly known as Swagger, allows you to provide the details for building in API in a compact, informative way. When you've got the authentication set up correctly, you can use the examples to actually call the API right from the spec!&lt;/p&gt;
&lt;p&gt;My team builds with a framework that has the power to auto-generate API specs in this format. We've chosen to write them ourselves rather than have them auto-generated so we can be more specific in what kinds of errors and error messaging people will encounter for different calls. For example, a 404 Not Found might make sense on a GET call for a specific resource, but not for a search call.&lt;/p&gt;
&lt;p&gt;When you open &lt;a href="http://editor.swagger.io/"&gt;http://editor.swagger.io/&lt;/a&gt;, you should see a two-pane view of the editor on the left and the rendering on the right. If you've opened this URL before, your browser session will remember and display your most recent changes. If it's the first time you've opened it, the example specification of the Swagger Petstore should appear like this:&lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/petstore-example-spec.png" style="display:block; margin-left: auto; margin-right: auto;" title="Petstore example spec"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Petstore example spec&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I hope that in describing the errors I encountered, you can keep an eye on them as you're editing rather than having to go back through the specification at the end to figure out what went wrong. &lt;/p&gt;
&lt;h3&gt;Errors I encountered&lt;/h3&gt;
&lt;h4&gt;Red errors in the box at the top and next to line numbers in editor&lt;/h4&gt;
&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/swagger-red-error-at-top.png"&gt;&lt;/p&gt;
&lt;p&gt;Indentation errors and using reserved characters (I found square brackets, dashes, colons at least fall into this category) in unexpected ways will likely give you an error in a red box between the navigation and the title of the spec. &lt;/p&gt;
&lt;p&gt;If you're lucky, the error corresponds to the line it mentions, you find a red X on that line, and you'll be able to figure out what went wrong there. &lt;/p&gt;
&lt;p&gt;If you're less lucky, the line mentioned in the red box will refer to the beginning of the next code block that's unparsable because of the syntax error, or the first place where the reserved character you've used incorrectly is actually used correctly. &lt;/p&gt;
&lt;p&gt;The hardest part about these errors is that you may not notice them. If you're scrolled down the page far enough, you won't see the error box or the red X as you're creating the error. &lt;/p&gt;
&lt;h4&gt;Spinning without loading&lt;/h4&gt;
&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/swagger-spinner-failed-reference.png"&gt;&lt;/p&gt;
&lt;p&gt;If you're getting a spinner where a part of the specification should be loading, you've got a issue with the reference to a schema. &lt;a href="https://swagger.io/docs/specification/data-models/"&gt;Schemas&lt;/a&gt; allow you to chunk out and reuse part of the spec, with a reference to them in another place. &lt;/p&gt;
&lt;p&gt;I kept getting the spinner when I referred to a schema that didn't exist, either because I'd updated the name (but not the reference to it) or because I'd screwed up whether it was singular or plural. Fixing the error isn't always enough to make this particular error disappear. Reloading the page will make it re-evaluate what you've got. &lt;/p&gt;
&lt;h4&gt;üò± could not render this component, see the console.&lt;/h4&gt;
&lt;p&gt;What a fun and exciting mistake you've made in the specification, to cause this very comforting and reassuring error message. &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/swagger-scream.png"&gt;&lt;/p&gt;
&lt;p&gt;Like the endless spinning error, this one means something very specific: you've designated something as an array, but you haven't explained what kinds of items appear in the array. &lt;a href="https://swagger.io/docs/specification/data-models/data-types/#array"&gt;Adding a description or reference in the items section&lt;/a&gt; should do the trick. &lt;/p&gt;
&lt;h3&gt;Editing without the Open API editor&lt;/h3&gt;
&lt;p&gt;It's possible the Open API web editor was not the best tool for this job. &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/swagger-vs-code.png"&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://marketplace.visualstudio.com/items?itemName=42Crunch.vscode-openapi"&gt;Visual Studio Code Open API plugin&lt;/a&gt; did make the red errors obvious enough that you could see them from anywhere in the document. It also gave me the collapsed version of the longer spec in alphabetical order. This allowed me to navigate around without remembering the line numbers of where I dumped the schema separately from the overall spec. Unfortunately the extension didn't catch when I referred to a spec that didn't exist, but I expect seeing the list of schemas on the side would help discover this mistake. The extension also didn't notice if I didn't define the objects in an array.  &lt;/p&gt;
&lt;p&gt;There's also an &lt;a href="https://github.com/swagger-api/swagger-ui"&gt;Open API spec tool for offline use&lt;/a&gt;, but the instructions went beyond the interest I had for this blog post. Try it out yourself, and maybe I will the next time I've got to edit these specs. &lt;/p&gt;&lt;/div&gt;</description><category>api-specs</category><category>apis</category><category>open-api</category><category>swagger</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2020/2020-04-27_errors_you_might_encounter_while_editing_an_open_api_specification/</guid><pubDate>Sun, 26 Apr 2020 22:00:00 GMT</pubDate></item><item><title>Remembering TestBash Brighton 2018</title><link>https://elizabethzagroba.com/posts/2020/2020-04-19_remembering_testbash_brighton-2018/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p&gt;TestBash Brighton was one of 10,000 things I had to do in the weeks just before I left my whole life (family, friends, job, apartment, belongings) and moved across the ocean into the unknown. It was the first place I'd gotten to share that big news in person, with people who would become larger parts of my life once I moved. Visiting the city where I'd studied during university and first thought "I could leave the United States" brought things full circle for me. &lt;/p&gt;
&lt;p&gt;I paired on presenting a brand-new workshop and talk, with two different people. This would have been a lot, even without all the uncertaincies and distractions swirling in my life those days. After hustling to adjust the schedule of and present our morning workshop, I distinctly remember choosing to skip the afternoon one I'd planned on attending in order to fill out immigration and relocation paperwork. I'm shocked to find I was able to focus enough on some other peoples' talks to take coherent notes about them.&lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/pavilion.jpg" style="display:block; margin-left: auto; margin-right: auto;" title="Royal Pavilion in downtown Brighton"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Royal Pavilion in downtown Brighton&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://twitter.com/anusha_n"&gt;Anusha Nirmalananthan&lt;/a&gt;'s talk about sharing a chronic illness sticks with me today. One of the things I love to jump into is troubleshooting. I hear about a problem, and I'm already thinking of ways to solve it, and asking about what you've tried already. Anusha reminded us that listening and not saying anything can be more helpful and powerful than all the patronizing "Have you tried...?" questions in the world.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://twitter.com/ewebber"&gt;Emily Weber&lt;/a&gt; spoke about communities of practice, which have always been billed as "guilds" in places where I've worked. Emily encouraged us to connect with people around our organizations in our discipline in a supportive, voluntary group without a hierarchy or an end date. While the occasional guild meeting I've attended has turned into a groan-fest, dedicating time and energy to fostering change (to code, to job descriptions, to your team's way of working, etc.) gives me that "I did something today" feeling. I'm grateful to be able to make time to learn with my colleagues, and build a support network for when I need advice from outside the bubble of my team. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I loved &lt;a href="https://twitter.com/Rosicadia"&gt;Rosie Hamilton&lt;/a&gt;'s talk about logic in testing because it drove me back to the basics. How do we decide what is true? How do I describe my thought process? When the availability of relevant cases prevents effective inductive reasoning (determining a heuristic), we have to move to abductive reasoning (determining the likeliest explanation from the available information). Realizing when you're doing this and what other information might be available to you elevates your testing.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/logic.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Looking back at my notes from &lt;a href="https://twitter.com/AWGHodder"&gt;Aaron Hodder&lt;/a&gt;'s talk on structured exploratory testing make me realize how much freedom I can have in my testing when working with an inattentive team. His suggestions about making for easier reporting, fewer rabbit holes, and predictability of a time-table suggest that someone is really breathing down your neck about the status, progress, and depth of your work. The biggest advantage I've had in sharing my testing charters with my team is that I find out which ones aren't valuable before I spend time executing them. Actively choosing not to test something when we don't care about the outcome or the risk it poses is very effective work.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://twitter.com/alanpage"&gt;Alan Page&lt;/a&gt; spoke about the modern testing principles he'd been shaping on his podcast for a while. My notes boil it down to: testers should do less testing and more coaching. This has certainly served me on teams producing too much for me to personally go as deep as I'd like in testing, but it also pays off when I'm out of the office or unavailable at the office. Working on a team that knows how to test means I get to look at higher-quality code, with more interesting bugs. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="https://twitter.com/northern_tester"&gt;Ash Winter&lt;/a&gt; gave a talk immediately after mine, so perhaps I did not gather everything from it. But I did save these tid-bits: a pipeline is built to prove that something shouldn't go out. A pipeline can provide a massive amount of information, but without a strategy, too much data doesn't help humans make better decisions. Small things you can do to make huge improvements: deploy regularly, and learn source control.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Reflecting on the open space, the social events, and the atmosphere at TestBash Brighton 2018 makes me wish for the experience we all missed at the now-cancelled event in 2020. Jumping into the unknown seemed so doable when I knew there'd be so many people to share with and learn from on this side of the Atlantic. I don't know when I'll see you all again, but I look forward to that possibility. &lt;/p&gt;
&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2020/stamner.jpg" style="display:block; margin-left: auto; margin-right: auto;" title="Can't go to Britain without a proper tea"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Can't go to Britain without a proper tea&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>testbash</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2020/2020-04-19_remembering_testbash_brighton-2018/</guid><pubDate>Sat, 18 Apr 2020 22:00:00 GMT</pubDate></item><item><title>Reflecting on Let‚Äôs Test¬†2017</title><link>https://elizabethzagroba.com/posts/2019/2019-09-15_reflecting-on-let-s-test-2017/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p name="f2d3" id="f2d3" class="graf graf--p graf-after--h3"&gt;Good ideas come back around. As I sit here re-reading my notes from Let‚Äôs Test 2017, I remember the thrill of coming across so many new ideas there, and realize how much these three things stick out to me even now.&lt;/p&gt;

&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/valley-lodge.jpeg" style="display:block; margin-left: auto; margin-right: auto;" title="Valley Lodge &amp;amp; Spa, Magaliesburg, South Africa"&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Valley Lodge &amp;amp; Spa, Magaliesburg, South Africa&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ol class="postList"&gt;&lt;li name="dc01" id="dc01" class="graf graf--li graf-after--figure"&gt;Causal loop diagrams&lt;/li&gt;&lt;/ol&gt;

&lt;p name="1b99" id="1b99" class="graf graf--p graf-after--li"&gt;It‚Äôs possible I‚Äôd seen a causal loop disgram before, but it wasn‚Äôt until I went to Jo Perold and Barry Tandy‚Äôs ‚ÄúVisualize your way to better problem solving‚Äù workshop that I knew the name for them. &lt;a href="https://www.isixsigma.com/tools-templates/cause-effect/causal-loop-diagrams-little-known-analytical-tool/" data-href="https://www.isixsigma.com/tools-templates/cause-effect/causal-loop-diagrams-little-known-analytical-tool/" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Here‚Äôs an example of how connecting nouns with verbs via bubbles and letters really clears things up.&lt;/a&gt;&lt;/p&gt;

&lt;p name="0c13" id="0c13" class="graf graf--p graf-after--p"&gt;During the workshop, Jo and Barry talked about how drawing a diagram of your software in this way can help you discover interaction points between systems. Sharing the diagram is one way to take the invisible software you‚Äôre building into a visible space. That allows us to have a conversation about the model, discover if we‚Äôre on the same page, and take steps to improve the model and ultimately the software. The more visualizations I see of process and influence on the job, the more I realize they‚Äôre exposing &lt;a href="https://www.thoughtworks.com/insights/articles/demystifying-conways-law" data-href="https://www.thoughtworks.com/insights/articles/demystifying-conways-law" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Conway‚Äôs Law&lt;/a&gt;.&lt;/p&gt;

&lt;p name="b91d" id="b91d" class="graf graf--p graf-after--p"&gt;Elisabeth Hendrickson wrote in &lt;a href="https://www.goodreads.com/book/show/15980494-explore-it" data-href="https://www.goodreads.com/book/show/15980494-explore-it" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;&lt;em class="markup--em markup--p-em"&gt;Explore It!&lt;/em&gt;&lt;/a&gt;&lt;em class="markup--em markup--p-em"&gt; &lt;/em&gt;about how causal loop diagrams can help you discover interesting areas to test. She pointed out that transitions from one state to another take time, and there‚Äôs lots to be discovered during the moments of transition about interruptions, errors, and incomplete states.&lt;/p&gt;

&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/causal-loop.png" style="display:block; margin-left: auto; margin-right: auto;" title='Repenning, Nelson &amp;amp; Sterman, John. (2003). "Nobody Ever Gets Credit for Fixing Problems That Never Happened: Creating and Sustaining Process Improvement." Engineering Management Review, IEEE. 30. 64- 64. 10.1109/EMR.2002.1167285.'&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Repenning, Nelson &amp;amp; Sterman, John. (2003). "Nobody Ever Gets Credit for Fixing Problems That Never Happened: Creating and Sustaining Process Improvement." Engineering Management Review, IEEE. 30. 64- 64. 10.1109/EMR.2002.1167285.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p name="5105" id="5105" class="graf graf--p graf-after--figure"&gt;Nelson Repenning and John Sterman used a causal loop diagram to display a human problem: not prioritizing time for improving. Read their whole article to discover terrifying news about how much time you‚Äôre wasting all the time by not stopping to improve!&lt;/p&gt;

&lt;p name="50d2" id="50d2" class="graf graf--p graf-after--p"&gt;2. Metaphors&lt;/p&gt;

&lt;p name="c76c" id="c76c" class="graf graf--p graf-after--p"&gt;Leo Hepis and Danie Roux‚Äôs ‚ÄúFrames at Work‚Äù workshop blew my mind. I would tell you they were talking about how metaphors and context framing shape the way we think about our work. And they did that. But the meandering and level of lost I felt on our path there was unprecedented.&lt;/p&gt;

&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/rope.jpeg" style="display:block; margin-left: auto; margin-right: auto;" title="Our table selected ‚ÄúRope of Awesome‚Äù and I stand by that answer."&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Our table selected ‚ÄúRope of Awesome‚Äù and I stand by that answer.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p name="e4cd" id="e4cd" class="graf graf--p graf-after--figure"&gt;One of the exercises had us listening to a story about someone‚Äôs work and only writing down the metaphors. There seemed to be one every sentence, so many that I thought the speaker was throwing them in there on purpose. (See: &lt;em class="markup--em markup--p-em"&gt;throwing&lt;/em&gt;. They‚Äôre everywhere!) He talked about ‚Äúpulling‚Äù and ‚Äúdragging‚Äù his team along. Imagine instead if he were ‚Äúpushing‚Äù or ‚Äúbuilding‚Äù his team. How would he think differently about his work? How different would his work be? Listen more closely to the words people are using to discover terrifying news about how they perceive their work!&lt;/p&gt;

&lt;p name="bff4" id="bff4" class="graf graf--p graf-after--p"&gt;3. Reflection and Learning&lt;/p&gt;

&lt;p name="b1ad" id="b1ad" class="graf graf--p graf-after--p"&gt;Alison Gitelson hosted a session to help the conference attendees think more about what they‚Äôd just learned. I was still reeling from the metaphors and framing session, so I wrote down these questions for myself:&lt;/p&gt;

&lt;ul class="postList"&gt;&lt;li name="00fe" id="00fe" class="graf graf--li graf-after--p"&gt;How do I realize when I‚Äôm stuck inside my own head?&lt;/li&gt;&lt;li name="48ba" id="48ba" class="graf graf--li graf-after--li"&gt;Does noticing where a behavior would be useful make it less irritating?&lt;/li&gt;&lt;li name="248b" id="248b" class="graf graf--li graf-after--li"&gt;Was there a better discussion because active disagreement was encouraged?&lt;/li&gt;&lt;li name="0165" id="0165" class="graf graf--li graf-after--li"&gt;Who in my life can help me reframe?&lt;/li&gt;&lt;li name="9408" id="9408" class="graf graf--li graf-after--li"&gt;Why do I feel my effort has to achieve something?&lt;/li&gt;&lt;/ul&gt;

&lt;p name="3b02" id="3b02" class="graf graf--p graf-after--li"&gt;Reflect on these questions yourself for terrifying news about how stuck you can be sometimes!&lt;/p&gt;

&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/double-rainbow.jpeg" style="display:block; margin-left: auto; margin-right: auto;" title="Very slight double rainbow to the right."&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Very slight double rainbow to the right.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally published on &lt;a href="https://medium.com/@ezagroba/reflecting-on-lets-test-2017-efb52723598c"&gt;Medium&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2019/2019-09-15_reflecting-on-let-s-test-2017/</guid><pubDate>Sat, 14 Sep 2019 22:00:00 GMT</pubDate></item><item><title>How not to name self-verifying test¬†data</title><link>https://elizabethzagroba.com/posts/2019/2019-07-28_how-not-to-name-self-verifying-test-data/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p name="3e80" id="3e80" class="graf graf--p graf-after--h3"&gt;Self-verifying test data makes it easy to determine if it‚Äôs right. You don‚Äôt need to go check somewhere else. It is its own oracle. Here‚Äôs an example:&lt;/p&gt;

&lt;p name="9278" id="9278" class="graf graf--p graf-after--p"&gt;Address: &lt;code class="markup--code markup--p-code"&gt;My last name&lt;/code&gt;&lt;/p&gt;

&lt;p name="1393" id="1393" class="graf graf--p graf-after--p graf--trailing"&gt;Something is wrong. It‚Äôs obvious from the data itself. We don‚Äôt know exactly where the problem is or how to fix it, but we can tell there‚Äôs something funky with either &lt;code class="markup--code markup--p-code"&gt;Address&lt;/code&gt; or &lt;code class="markup--code markup--p-code"&gt;Last Name&lt;/code&gt; or both. If you feel like there must be more to it than this, &lt;a href="https://www.stickyminds.com/sites/default/files/article/file/2012/XDD2918filelistfilename1_0.pdf" data-href="https://www.stickyminds.com/sites/default/files/article/file/2012/XDD2918filelistfilename1_0.pdf" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;read Noel Nyman‚Äôs 13-page paper to see that there isn‚Äôt.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;section name="d869" class="section section--body"&gt;&lt;div class="section-divider"&gt;&lt;hr class="section-divider"&gt;&lt;/div&gt;&lt;div class="section-content"&gt;&lt;div class="section-inner sectionLayout--insetColumn"&gt;&lt;p name="2031" id="2031" class="graf graf--p graf--leading"&gt;Let‚Äôs look at a real-life example: I‚Äôm writing an automated test for an API. First, I create (POST) an item, then I read (GET) the database to see if it‚Äôs there. One of the fields in the body of the POST call is a Universally Unique Identifier, or UUID.&lt;/p&gt;&lt;p name="9c80" id="9c80" class="graf graf--p graf-after--p"&gt;A UUID is a 128-bit identifier; we‚Äôre using them as unique keys in our database. Here‚Äôs an example of a version 4 UUID: &lt;code class="markup--code markup--p-code"&gt;74ee94d-d32f-4844-9def-81f0d7fea2d8&lt;/code&gt;. (If you‚Äôre a human that can‚Äôt read regex, &lt;a href="https://www.regextester.com/99148" data-href="https://www.regextester.com/99148" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;you might find this useful&lt;/a&gt;.) I generated that using the &lt;a href="https://www.uuidgenerator.net" data-href="https://www.uuidgenerator.net" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Online UUID Generator Tool&lt;/a&gt;.&lt;/p&gt;&lt;p name="467d" id="467d" class="graf graf--p graf-after--p"&gt;I wanted to see what would happen if I tried to POST with a UUID that wasn‚Äôt valid. If I‚Äôd taken my example UUID and removed some characters to make it &lt;code class="markup--code markup--p-code"&gt;74e4d-d32f-4844-9def-81f0ea2d8&lt;/code&gt;, it would have been invalid. My test would have behaved as I expected. But I wouldn‚Äôt have been able to tell at a glance if this was a valid UUID or not. It wouldn‚Äôt have been self-verifying.&lt;/p&gt;&lt;p name="16e0" id="16e0" class="graf graf--p graf-after--p"&gt;I decided to name my UUID &lt;code class="markup--code markup--p-code"&gt;This is not a valid UUID.&lt;/code&gt;I wanted to easily be able to tell from the GET call if it succeeded, or the error message in the POST call if it failed. It would be clear when running or debugging the test what value was being passed in, why, and to which field it belongs.&lt;/p&gt;&lt;p name="78ab" id="78ab" class="graf graf--p graf-after--p"&gt;Or so I thought.&lt;/p&gt;&lt;p name="ca5b" id="ca5b" class="graf graf--p graf-after--p"&gt;I ran the test. This was the output.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/output.png"&gt;&lt;/p&gt;
&lt;p name="950f" id="950f" class="graf graf--p graf-after--figure"&gt;I sat starting at it for a while. The first line where the red &lt;code class="markup--code markup--p-code"&gt;AssertionError&lt;/code&gt; starts looks confusingly similar: The left side looks like the right, so the assert should have passed instead of failed. The message below had &lt;code class="markup--code markup--p-code"&gt;is not a valid UUID&lt;/code&gt; twice. Huh? Finally, I realized what I did, and highlighted the part you now see in blue. I gave my self-verifying test data a name too similar to the error message. Let me boil this down:&lt;/p&gt;

&lt;p name="a80f" id="a80f" class="graf graf--p graf-after--p"&gt;Error message I expected: &lt;code class="markup--code markup--p-code"&gt;UUID not valid&lt;/code&gt;&lt;br&gt;Error message I got: &lt;code class="markup--code markup--p-code"&gt;Published service UUID {{insert UUID here}} is not a valid UUID.&lt;/code&gt;&lt;/p&gt;

&lt;p name="a0fb" id="a0fb" class="graf graf--p graf-after--p"&gt;Unfortunately, I‚Äôd named my UUID &lt;code class="markup--code markup--p-code"&gt;This is not a valid UUID.&lt;/code&gt; so the whole invalid input error message was:&lt;/p&gt;

&lt;p name="9e42" id="9e42" class="graf graf--p graf-after--p"&gt;&lt;code class="markup--code markup--p-code"&gt;Published service UUID This is not a valid UUID. is not a valid UUID.&lt;/code&gt;&lt;/p&gt;

&lt;p name="64d9" id="64d9" class="graf graf--p graf-after--p"&gt;Fans of 30 Rock may recognize &lt;a href="https://www.youtube.com/watch?v=zh2k5YAnP8g" data-href="https://www.youtube.com/watch?v=zh2k5YAnP8g" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;this problem&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/single-dropping.jpg"&gt;&lt;/p&gt;
&lt;p name="4fdd" id="4fdd" class="graf graf--p graf-after--figure graf--trailing"&gt;My self-verifying test data would have worked fine if the error message was exactly how I expected it. The test would have passed, and I may not have taken a closer look at the text of the error message. But of course, my developers had changed it to be more meaningful and give more context, the bastards. Thus, I uncovered my perfect-turned-nonsensical name. I changed the UUID in my test data to be called&lt;code class="markup--code markup--p-code"&gt;FAKE UUID&lt;/code&gt;. It may not be the perfect name, but at least the code is &lt;a href="https://www.youtube.com/watch?v=aWiwDdx_rdo" data-href="https://www.youtube.com/watch?v=aWiwDdx_rdo" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;better&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;&lt;section name="5fb0" class="section section--body section--last"&gt;&lt;div class="section-divider"&gt;&lt;hr class="section-divider"&gt;&lt;/div&gt;&lt;div class="section-content"&gt;&lt;div class="section-inner sectionLayout--insetColumn"&gt;&lt;p name="81c8" id="81c8" class="graf graf--p graf--leading"&gt;Calling things names related to the thing they are: great!&lt;/p&gt;&lt;p name="e145" id="e145" class="graf graf--p graf-after--p graf--trailing"&gt;Calling things names too similar to the thing that you‚Äôre trying to test: confusing.&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally published on &lt;a href="https://medium.com/@ezagroba/how-not-to-name-self-verifying-test-data-1225d3c72454"&gt;Medium&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</description><category>naming</category><category>test-data</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2019/2019-07-28_how-not-to-name-self-verifying-test-data/</guid><pubDate>Sat, 27 Jul 2019 22:00:00 GMT</pubDate></item><item><title>Agile Testing Days 2018: A Reflection</title><link>https://elizabethzagroba.com/posts/2019/2019-07-07_agile-testing-days-2018-a-reflection/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p name="4f54" id="4f54" class="graf graf--p graf-after--h3"&gt;I was beyond excited to attend Agile Testing Days in Potsdam, Germany for the first time a year and a half ago. Anywhere I went, I met women who I‚Äôd previously only known from the internet. It was refreshing.&lt;/p&gt;

&lt;p name="bd6a" id="bd6a" class="graf graf--p graf-after--p"&gt;Based on the pages of notes I‚Äôve got, I can tell you that the lessons I took away from that week have seeped into the way I work everyday.&lt;/p&gt;

&lt;blockquote name="14da" id="14da" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--p"&gt;‚ÄúHumans should not be regression testing.‚Äù&lt;/blockquote&gt;

&lt;p name="d815" id="d815" class="graf graf--p graf-after--pullquote"&gt;&lt;a href="https://twitter.com/jezhumble" data-href="https://twitter.com/jezhumble" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Jez Humble&lt;/a&gt; kicked off the conference with a session about continuous delivery. He described the barriers of organizational culture and software architecture that can prevent you from getting to a point where you can deliver continuously. Previous places where I worked made this feel like an insurmountable feat; now when I imagine continuous delivery, I can imagine concrete steps we could take to get there.&lt;/p&gt;

&lt;blockquote name="0481" id="0481" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--p"&gt;‚ÄúLet‚Äôs create a small habit everyday to trigger me to learn¬†more.‚Äù&lt;/blockquote&gt;

&lt;p name="7bbd" id="7bbd" class="graf graf--p graf-after--pullquote"&gt;&lt;a href="https://twitter.com/lisihocke" data-href="https://twitter.com/lisihocke" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Lisi Hocke&lt;/a&gt; certainly took this idea from her talk and ran with it. She‚Äôs been pair testing remotely with people around the world and learning so much from it. I‚Äôve taken pairing on a smaller scale, with my colleagues or in-person. There are still times when it tests my patience, but the benefits of being able to more precisely explain what I‚Äôm doing and what I expect of the software vastly outweigh that investment. All my notes from Lisi‚Äôs talk have me nodding my head, like these are the most obvious things in the world. The biggest I‚Äôd come across about a year beforehand: having a growth mindset rather than a fixed mindset. &lt;a href="https://www.brainpickings.org/2014/01/29/carol-dweck-mindset/" data-href="https://www.brainpickings.org/2014/01/29/carol-dweck-mindset/" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;This explanation from Brain Pickings sticks with me&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/sanssouci-palace.jpeg" style="display:block; margin-left: auto; margin-right: auto;" title="Sanssouci Palace in Potsdam."&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Sanssouci Palace in Potsdam.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote name="f3ae" id="f3ae" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--figure"&gt;‚ÄúI am curious why they‚Äôre doing what they¬†do.‚Äù&lt;/blockquote&gt;

&lt;p name="7ad0" id="7ad0" class="graf graf--p graf-after--pullquote"&gt;&lt;a href="https://twitter.com/NativeWired" data-href="https://twitter.com/NativeWired" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Gitte Klitgaard&lt;/a&gt; and &lt;a href="https://twitter.com/andreasschliep" data-href="https://twitter.com/andreasschliep" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Andreas Schliep&lt;/a&gt; had an improvised conversation about good and evil. You know, like you do with your friends for fun, but on stage. It can be so hard to believe that people are acting with good intentions at heart. But remembering to have empathy for the situations people find themselves in will help you choose to be the person to repair relationships when things go awry. If you believe in people, they can be better.&lt;/p&gt;

&lt;blockquote name="c286" id="c286" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--p"&gt;‚ÄúPeople don‚Äôt want to collaborate with you when you have twelve spreadsheets for them to go through.‚Äù&lt;/blockquote&gt;

&lt;p name="7691" id="7691" class="graf graf--p graf-after--pullquote"&gt;I‚Äôm sure &lt;a href="https://twitter.com/techgirl1908" data-href="https://twitter.com/techgirl1908" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Angie Jones&lt;/a&gt; had other, more profound takeaways from her talk. But this one sticks to my bones. I think of it anytime I open a spreadsheet with more than one sheet in it. I think of it when I‚Äôm deciding on a tool to use, and wondering not what‚Äôs easiest for me to set up, but what‚Äôs easiest for my fellow collaborators to use. Thank you for this gem Angie.&lt;/p&gt;

&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/sanssouci-park.jpeg" style="display:block; margin-left: auto; margin-right: auto;" title="Some dramatic structure in Sanssouci Park."&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;Some dramatic structure in Sanssouci Park.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote name="f5ac" id="f5ac" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--figure"&gt;‚ÄúGet ready to fire people to maintain the culture you¬†want.‚Äù&lt;/blockquote&gt;

&lt;p name="f967" id="f967" class="graf graf--p graf-after--pullquote"&gt;&lt;a href="https://twitter.com/poornima" data-href="https://twitter.com/poornima" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Poornima Vijayashanker&lt;/a&gt; spoke about concrete ways to successfully onboard new employees. But I‚Äôm curious about this provocative statement. I haven‚Äôt ever worked at a place bold enough to get rid of managers whose direct reports displayed a pattern of escaping them that no one could ignore. I wonder what kind of company is bold enough to take this step.&lt;/p&gt;

&lt;blockquote name="deaf" id="deaf" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--p"&gt;‚ÄúOnly put off until tomorrow what you are willing to die having left¬†undone.‚Äù&lt;/blockquote&gt;

&lt;p name="c0ca" id="c0ca" class="graf graf--p graf-after--pullquote"&gt;&lt;a href="https://twitter.com/Punkmik" data-href="https://twitter.com/Punkmik" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Kim Knup&lt;/a&gt; said Pablo Picasso came up with this doozie. At my first job, we used a physical board with sticky notes. If the sticky note had been moved around too many times or stuck in one place too long, it would literally fall off the board. At the time this felt like a failure. Now I see it for the blessing it was. Forgetting is a part of life, even if our digital tools would prefer us to forget that.&lt;/p&gt;

&lt;blockquote name="af08" id="af08" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--p"&gt;‚ÄúDo what you say you will. Integrity is important.‚Äù&lt;/blockquote&gt;

&lt;p name="f653" id="f653" class="graf graf--p graf-after--pullquote"&gt;&lt;a href="https://twitter.com/Rob_Lambert" data-href="https://twitter.com/Rob_Lambert" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Rob Lambert&lt;/a&gt; spoke about behaviors of effective Agile teams. It‚Äôs resonating with me again now because it‚Äôs something I‚Äôm addressing in a talk I‚Äôm giving about how to build trust. I‚Äôm digging into authenticity, which I think goes a step beyond integrity. Doing what you say you will is being externally congruent. Authentic people are also internally congruent; the vision they have of themselves is the one they present to the world.&lt;/p&gt;

&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/downtown.jpeg" style="display:block; margin-left: auto; margin-right: auto;" title="I forget what this is but it‚Äôs across from the museum downtown and damn the light was lovely."&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;I forget what this is but it‚Äôs across from the museum downtown and damn the light was lovely.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote name="7969" id="7969" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--figure"&gt;‚ÄúIf you never get feedback, you have one year of experience ten¬†times.‚Äù&lt;/blockquote&gt;

&lt;p name="a539" id="a539" class="graf graf--p graf-after--pullquote"&gt;This came out in &lt;a href="https://twitter.com/huibschoots" data-href="https://twitter.com/huibschoots" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Huib Schoots&lt;/a&gt; and &lt;a href="https://twitter.com/alex_schl" data-href="https://twitter.com/alex_schl" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Alex Schladebeck&lt;/a&gt;‚Äôs workshop on dissecting your testing and discovering the skills present in your exploratory testing. We practiced observing the skills we were using on the meta-level. It allowed me to both see and share how much a year of mob testing for an hour every day had expanded at least two things. First: my field of vision for how to dig and explore software had grown. Second: I was able to explain what I was thinking such that the other people present could understand, contribute to, and question which path we‚Äôd take next. It was life-affirming!&lt;/p&gt;

&lt;blockquote name="b8f8" id="b8f8" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--p"&gt;‚ÄúWhen we set our own limits, we can change¬†them.‚Äù&lt;/blockquote&gt;

&lt;p name="c8b4" id="c8b4" class="graf graf--p graf-after--pullquote"&gt;This came up in the context of Natalie Wenert‚Äôs talk about cross-team functionality. She chided organizations for relying on hero-worship and fire-fighting over breaking down silos and contributing to the whole. One of my conference buddies was frustrated at Agile Testing Days because they viewed so much of the content as ‚Äúwork therapy.‚Äù They weren‚Äôt wrong.&lt;/p&gt;

&lt;blockquote name="e6da" id="e6da" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--p"&gt;‚ÄúAs a user, I want to be locked out of the system after three incorrect password attempts.‚Äù&lt;/blockquote&gt;

&lt;p name="1723" id="1723" class="graf graf--p graf-after--pullquote"&gt;&lt;a href="https://twitter.com/DavidEvans66" data-href="https://twitter.com/DavidEvans66" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;David Evans&lt;/a&gt; presented a memorable talk about how the template we stick to for writing user stories does not serve us well. This particular example made me laugh out loud. This story gets the ‚Äúwhy‚Äù wrong. It‚Äôs about security of our system and the user‚Äôs data. Being honest about why we‚Äôre building the software would make the user story less absurd, and hopefully get us on the path to making better software too.&lt;/p&gt;

&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/barberini.jpeg" style="display:block; margin-left: auto; margin-right: auto;" title="This doozie is in the Museum Barberini, which is worth checking out if you're in Potsdam."&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;This doozie is in the Museum Barberini, which is worth checking out if you're in Potsdam.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;blockquote name="710c" id="710c" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--figure"&gt;‚ÄúUncertainty is more stressful than inevitable pain.‚Äù&lt;/blockquote&gt;

&lt;p name="7f33" id="7f33" class="graf graf--p graf-after--pullquote"&gt;&lt;a href="https://twitter.com/ewebber" data-href="https://twitter.com/ewebber" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Emily Webber&lt;/a&gt; spoke about team interactions and organizational change. (Shout out to all the people who‚Äôve tweet me instead of this other brown-haired white lady with glasses!) I‚Äôm on my fifth team in a year at my current company. I‚Äôm tired of the change. I know how important it is to build relationships with the people you work with. I‚Äôve expressed that knowing who‚Äôs on my team is more important than having the perfect set of people. I look forward to more stability there because I don‚Äôt envy the alternative.&lt;/p&gt;

&lt;blockquote name="fc3c" id="fc3c" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--p"&gt;‚ÄúMistakes were¬†made.‚Äù&lt;/blockquote&gt;

&lt;p name="7aee" id="7aee" class="graf graf--p graf-after--pullquote"&gt;&lt;a href="https://twitter.com/lunivore" data-href="https://twitter.com/lunivore" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Liz Keogh&lt;/a&gt; spoke about how to deliver failure messages. Her message was essentially: don‚Äôt. Pointing out the mistake without pointing fingers is enough. Encourage good existing behavior and create more options so that failure can occur safely.&lt;/p&gt;

&lt;blockquote name="20f1" id="20f1" class="graf graf--pullquote graf--startsWithDoubleQuote graf-after--p"&gt;‚ÄúAre we advocating for those doing a good¬†job?‚Äù&lt;/blockquote&gt;

&lt;p name="2163" id="2163" class="graf graf--p graf-after--pullquote graf--trailing"&gt;&lt;a href="https://twitter.com/AshColeman30" data-href="https://twitter.com/AshColeman30" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Ash Coleman&lt;/a&gt; and &lt;a href="https://twitter.com/keithklain" data-href="https://twitter.com/keithklain" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Keith Klain&lt;/a&gt; had a late-night after-dinner (over-hyphenated?) bonus-keynote to talk about how culture is a mindset and what we can do to change it. They encouraged allies in the majority to stop talking, and start listening, so you can do something. If you‚Äôre uncomfortable, good. You‚Äôre learning.&lt;/p&gt;

&lt;p&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally published on &lt;a href="https://medium.com/@ezagroba/agile-testing-days-2017-a-reflection-2ea505b09eec"&gt;Medium&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</description><category>conference</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2019/2019-07-07_agile-testing-days-2018-a-reflection/</guid><pubDate>Sat, 06 Jul 2019 22:00:00 GMT</pubDate></item><item><title>You build it, you run it, and you fix¬†it</title><link>https://elizabethzagroba.com/posts/2019/2019-05-20_you-build-it-you-run-it-and-you-fix-it/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p name="e646" id="e646" class="graf graf--p graf-after--h3"&gt;During a meeting of our unit at work today, we were asked if we wanted to become a member of the elite squad of people that are on-call for our software. Our philosophy is: we built it, so we know the most about keeping it up and running. In my next meeting, somebody asked if we ever write bug reports for ourselves. Both reminded me that I wanted to use and fix up a piece of software I wrote.&lt;/p&gt;

&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python3 httperrors.py
There are &lt;span class="m"&gt;15&lt;/span&gt; links outside of the &lt;span class="m"&gt;200&lt;/span&gt; or &lt;span class="m"&gt;300&lt;/span&gt; range of http responses on your site.
&lt;/code&gt;&lt;/pre&gt;


&lt;p name="d51d" id="d51d" class="graf graf--p graf-after--figure"&gt;After using &lt;a href="https://www.screamingfrog.co.uk/broken-link-checker/" data-href="https://www.screamingfrog.co.uk/broken-link-checker/" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;ScreamingFrog&lt;/a&gt; software to scan the pages for http error response codes, I decided I could build something easier-to-use myself and test it using my own website, &lt;a href="https://elizabethzagroba.com/" data-href="https://elizabethzagroba.com/" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;elizabethzagroba.com&lt;/a&gt;. I wrote a draft that worked initially, but did some things that weren‚Äôt great Python. Thanks to my friends &lt;a href="https://twitter.com/DavidaMarion" data-href="https://twitter.com/DavidaMarion" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Davida&lt;/a&gt; and Becky who reviewed and improved my code. You can see what they suggested in the &lt;a href="https://github.com/ezagroba/linkchecker/issues?q=is%3Aissue+is%3Aclosed" data-href="https://github.com/ezagroba/linkchecker/issues?q=is%3Aissue+is%3Aclosed" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;older tickets in my Github repo&lt;/a&gt;.&lt;/p&gt;

&lt;p name="c3e3" id="c3e3" class="graf graf--p graf-after--p"&gt;Here‚Äôs what I have now:&lt;/p&gt;

&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Mission: Find http codes that aren't in the 200 or 300 range for all the links on a single page&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;errno&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;http&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ssl&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;string&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bs4&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;SoupStrainer&lt;/span&gt;


&lt;span class="n"&gt;MY_SITE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"http://www.elizabethzagroba.com"&lt;/span&gt;
&lt;span class="n"&gt;my_site_response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MY_SITE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;only_external_links&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SoupStrainer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"_blank"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;BeautifulSoup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_site_response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"html.parser"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;parse_only&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;only_external_links&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;start_link&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"a href"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;start_link&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
  &lt;span class="n"&gt;start_quote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'"http'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start_link&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;end_quote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'"'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start_quote&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;stripped_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;website&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start_quote&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;end_quote&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;stripped_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;end_quote&lt;/span&gt;


&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'list_of_all_links.txt'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;OSError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'list_of_all_links.txt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
  &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; 
    &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;get_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;URLError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;explanation&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;explanation&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;" "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"There are "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;" links outside of the 200 or 300 range of http responses on your site."&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;break&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p name="018e" id="018e" class="graf graf--p graf-after--figure"&gt;It looks for the external links on my website, tries to open them, and writes them to a file if the response code isn‚Äôt in the 200 or 300 range. There are things I‚Äôd like to improve. I‚Äôve noted some here. But tonight‚Äôs scope is: run it and fix it.&lt;/p&gt;

&lt;p name="c4ca" id="c4ca" class="graf graf--p graf-after--p"&gt;I run the file on my machine. Fifteen sites I link to come back with error responses. Here‚Äôs the file it generated:&lt;/p&gt;

&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;HTTP Error 403: Forbidden https://www.mendix.com/
HTTP Error 403: Forbidden https://medium.com/@ezagroba
HTTP Error 403: Forbidden https://medium.com/@ezagroba/have-i-tried-enough-weird-stuff-7ed4105ae994
HTTP Error 403: Forbidden https://medium.com/@ezagroba/doubt-builds-trust-9cee937dc5d1
HTTP Error 403: Forbidden https://conference.eurostarsoftwaretesting.com/conference/programme/2018/#Wednesday-c67b
HTTP Error 403: Forbidden https://www.phpconference.nl/
HTTP Error 404: Not Found http://www.romaniatesting.ro/sessions/succeeding-as-an-introvert/
HTTP Error 404: Not Found http://www.ministryoftesting.com/training-events/testsbash-philadelphia-2016/
HTTP Error 403: Forbidden http://www.associationforsoftwaretesting.org/training/courses/
HTTP Error 403: Forbidden http://codeacademy.com/
HTTP Error 403: Forbidden http://hackdesign.org
HTTP Error 403: Forbidden http://testobsessed.com/
&amp;lt;urlopen error [Errno 8] nodename nor servname provided, or not known&amp;gt; http://developersbestfriend.com
HTTP Error 999: Request denied http://www.linkedin.com/in/ezagroba/
HTTP Error 403: Forbidden https://medium.com/@ezagroba
&lt;/code&gt;&lt;/pre&gt;


&lt;p name="d0f0" id="d0f0" class="graf graf--p graf-after--figure"&gt;I notice most of the error codes were &lt;code class="markup--code markup--p-code"&gt;403&lt;/code&gt; responses, so I try a few of those pages manually. Those few succeed, so I don‚Äôt bother checking the rest. A&lt;code class="markup--code markup--p-code"&gt;403&lt;/code&gt; status is &lt;a href="https://httpstatuses.com/403" data-href="https://httpstatuses.com/403" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;Forbidden access&lt;/a&gt;, so I think it has something to do with these sites having logins. But I don‚Äôt need to logins to see the pages I‚Äôm linking to. Then I notice that some of the pages are pointing to http instead of https. I don‚Äôt know exactly what‚Äôs wrong. It‚Äôs getting late, so rather than diving in, I write two bugs: &lt;a href="https://github.com/ezagroba/linkchecker/issues/8" data-href="https://github.com/ezagroba/linkchecker/issues/8" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;one about investigating 403s&lt;/a&gt;, &lt;a href="https://github.com/ezagroba/linkchecker/issues/9" data-href="https://github.com/ezagroba/linkchecker/issues/9" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;one about updating http to https&lt;/a&gt;.&lt;/p&gt;

&lt;p name="442c" id="442c" class="graf graf--p graf-after--p"&gt;Next, I look at the other error codes. The &lt;code class="markup--code markup--p-code"&gt;999&lt;/code&gt; one I‚Äôve seen before. It‚Äôs some weird LinkedIn thing. I don‚Äôt add a bug because it‚Äôs not interesting to fix. One site I‚Äôm not able to reach the domain of at all, so I message the owner to see if it‚Äôs still being maintained. The &lt;code class="markup--code markup--p-code"&gt;404&lt;/code&gt; codes are from sites that still exist where the pages have been taken down; fixable, but frustrating. They prove I spoke at these conferences. When these pages die, so does proof of my hard work. Sigh. I remove those links from my site, reload to confirm the fix made it to production, and run the script again. We‚Äôre down from 15 to 13 errors, as expected.&lt;/p&gt;

&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ python3 httperrors.py
There are &lt;span class="m"&gt;13&lt;/span&gt; links outside of the &lt;span class="m"&gt;200&lt;/span&gt; or &lt;span class="m"&gt;300&lt;/span&gt; range of http responses on your site.
&lt;/code&gt;&lt;/pre&gt;


&lt;p name="a400" id="a400" class="graf graf--p graf-after--figure graf--trailing"&gt;In looking at this code again, I‚Äôm reminded of the original motivation and my vision for myself: run it against any site, and know when links break on elizabethzagroba.com. &lt;a href="https://github.com/ezagroba/linkchecker/issues" data-href="https://github.com/ezagroba/linkchecker/issues" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;I added some issues that I‚Äôll pick up another day&lt;/a&gt;. I‚Äôll be ready to build again. But for now, goodnight.&lt;/p&gt;

&lt;p&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally published on &lt;a href="https://medium.com/@ezagroba/you-build-it-you-run-it-and-you-fix-it-ba24151c3f2b"&gt;Medium&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</description><category>development</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2019/2019-05-20_you-build-it-you-run-it-and-you-fix-it/</guid><pubDate>Sun, 19 May 2019 22:00:00 GMT</pubDate></item><item><title>Don‚Äôt let JIRA stop you from visualizing dependencies</title><link>https://elizabethzagroba.com/posts/2019/2019-05-07_don-t-let-jira-stop-you-from-visualizing-dependencies/</link><dc:creator>Elizabeth Zagroba</dc:creator><description>&lt;div&gt;&lt;p name="5ee8" id="5ee8" class="graf graf--p graf-after--h3"&gt;My team is at the beginning of a project. We‚Äôve got a lot of potential features. Our task yesterday was to start breaking down big dreams into specific pieces of work we can pick up.&lt;/p&gt;

&lt;p name="da25" id="da25" class="graf graf--p graf-after--p"&gt;As we started to define what we wanted to build, we came across items that had to come first: come up with a proposal before we meet to review it with our stakeholders. Other items weren‚Äôt necessarily ‚Äúblocked,‚Äù but would make more sense to pick up in a sequence. As my developers watched me painstakingly searched for completely forgettable JIRA story number so I could mark each story as ‚Äúblocked‚Äù or ‚Äúis blocked by,‚Äù one of my developers asked one of the best questions I heard all day: ‚ÄúIs there a way we can see this visually?‚Äù&lt;/p&gt;

&lt;p name="4007" id="4007" class="graf graf--p graf-after--p"&gt;My developer searched for JIRA solutions to this problem and came across a few that required &lt;a href="https://community.atlassian.com/t5/Jira-questions/Visual-overview-of-related-and-blocked-issues/qaq-p/757970" data-href="https://community.atlassian.com/t5/Jira-questions/Visual-overview-of-related-and-blocked-issues/qaq-p/757970" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;admin access&lt;/a&gt; or JIRA version 8. We spent a few minutes getting lost in the text and subsequently interactive credits on the About JIRA page. None of us noticed this yesterday, but the start screen for the game gave us the answer we needed: we have JIRA 7 (Roman numerals on the title page), not JIRA 8.&lt;/p&gt;

&lt;p&gt;&lt;span class="img_container" style="display: inline-block;"&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/jira-credits.gif" style="display:block; margin-left: auto; margin-right: auto;" title="JIRA credits: A surprising diversion in our work day."&gt;&lt;span class="img_caption" style="display: block; text-align: center;"&gt;JIRA credits: A surprising diversion in our work day.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p name="6eb6" id="6eb6" class="graf graf--p graf-after--figure"&gt;Without a big sheet of paper (we had post-its, but no where to stick them) or a whiteboard in the conference room we were crammed into, I pulled up my go-to tool for visualizations: &lt;a href="https://www.edrawsoft.com/download-mindmaster.php" data-href="https://www.edrawsoft.com/download-mindmaster.php" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;MindMaster&lt;/a&gt;. I‚Äôve got other recommendations for mind mapping software at the bottom of &lt;a href="https://ministryoftesting.com/dojo/lessons/mind-maps-made-easy" data-href="https://ministryoftesting.com/dojo/lessons/mind-maps-made-easy" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"&gt;my article here&lt;/a&gt;. I‚Äôm currently stuck on MindMaster since it‚Äôs free and not web-hosted.&lt;/p&gt;

&lt;p name="c35b" id="c35b" class="graf graf--p graf-after--p"&gt;I added a bunch of &lt;code class="markup--code markup--p-code"&gt;Floating topics&lt;/code&gt; and connected them with &lt;code class="markup--code markup--p-code"&gt;Relationship&lt;/code&gt; arrows. We outlined the first group of stories that we‚Äôd collected into an epic. We fiddled a bit with aligning the stories that could be picked up in parallel so they appeared at the earliest point we could pick them up. We came back to refine and add a couple items as we outlined other epics. The few minutes we dedicated to creating this diagram gave us enough information to decide what order we should pick up work for the next week or two.&lt;/p&gt;

&lt;p&gt;&lt;img alt="" src="https://elizabethzagroba.com/images/posts/2019/dependencies.png"&gt;&lt;/p&gt;
&lt;p name="9e64" id="9e64" class="graf graf--p graf-after--figure"&gt;We may be looking at our sprint board in the coming days to review how all the work is going. But I know that no developer is going to trace all the ‚Äúblocks‚Äù and ‚Äúis blocked by‚Äù links in the stories. They‚Äôre going to look at this diagram to know when to pair or mob because we can‚Äôt pick more things up.&lt;/p&gt;

&lt;p name="3249" id="3249" class="graf graf--p graf-after--p graf--trailing"&gt;Moral of the story: Don‚Äôt let your tools constrain you.&lt;/p&gt;

&lt;p&gt;
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Originally published on &lt;a href="https://medium.com/@ezagroba/dont-let-jira-stop-you-from-visualizing-dependencies-db16d03d4cc1"&gt;Medium&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</description><category>dependencies</category><category>JIRA</category><category>mind-mapping</category><category>testing</category><guid>https://elizabethzagroba.com/posts/2019/2019-05-07_don-t-let-jira-stop-you-from-visualizing-dependencies/</guid><pubDate>Mon, 06 May 2019 22:00:00 GMT</pubDate></item></channel></rss>